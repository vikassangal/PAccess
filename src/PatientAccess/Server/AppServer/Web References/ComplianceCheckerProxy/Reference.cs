//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace PatientAccess.ComplianceCheckerProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ComplianceCheckerServiceSEIBinding", Namespace="urn:ComplianceCheckerService/wsdl")]
    public partial class ComplianceCheckerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createComplianceCheckerRequestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ComplianceCheckerService() {
            this.Url = global::PatientAccess.Properties.Settings.Default.PatientAccess_AppServer_ComplianceCheckerProxy_ComplianceCheckerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createComplianceCheckerRequestCompletedEventHandler createComplianceCheckerRequestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createComplianceCheckerRequestResponse", Namespace="urn:ComplianceCheckerService/types")]
        public createComplianceCheckerRequestResponse createComplianceCheckerRequest([System.Xml.Serialization.XmlElementAttribute("createComplianceCheckerRequest", Namespace="urn:ComplianceCheckerService/types")] createComplianceCheckerRequest createComplianceCheckerRequest1) {
            object[] results = this.Invoke("createComplianceCheckerRequest", new object[] {
                        createComplianceCheckerRequest1});
            return ((createComplianceCheckerRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateComplianceCheckerRequest(createComplianceCheckerRequest createComplianceCheckerRequest1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createComplianceCheckerRequest", new object[] {
                        createComplianceCheckerRequest1}, callback, asyncState);
        }
        
        /// <remarks/>
        public createComplianceCheckerRequestResponse EndcreateComplianceCheckerRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((createComplianceCheckerRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createComplianceCheckerRequestAsync(createComplianceCheckerRequest createComplianceCheckerRequest1) {
            this.createComplianceCheckerRequestAsync(createComplianceCheckerRequest1, null);
        }
        
        /// <remarks/>
        public void createComplianceCheckerRequestAsync(createComplianceCheckerRequest createComplianceCheckerRequest1, object userState) {
            if ((this.createComplianceCheckerRequestOperationCompleted == null)) {
                this.createComplianceCheckerRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateComplianceCheckerRequestOperationCompleted);
            }
            this.InvokeAsync("createComplianceCheckerRequest", new object[] {
                        createComplianceCheckerRequest1}, this.createComplianceCheckerRequestOperationCompleted, userState);
        }
        
        private void OncreateComplianceCheckerRequestOperationCompleted(object arg) {
            if ((this.createComplianceCheckerRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createComplianceCheckerRequestCompleted(this, new createComplianceCheckerRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ComplianceCheckerService/types")]
    public partial class createComplianceCheckerRequest {
        
        private ComplianceCheckerRequest complianceCheckerRequest_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ComplianceCheckerRequest ComplianceCheckerRequest_1 {
            get {
                return this.complianceCheckerRequest_1Field;
            }
            set {
                this.complianceCheckerRequest_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ComplianceCheckerService/types")]
    public partial class ComplianceCheckerRequest {
        
        private int customerIdField;
        
        private string hspcdField;
        
        private string userIdField;
        
        private string accRefDocCodeField;
        
        private string autoTriggerField;
        
        private string insuredMemberIDField;
        
        private string insuredPlanCdField;
        
        private string patientAccountField;
        
        private string patientDOBField;
        
        private string patientFirstNameField;
        
        private string patientLastNameField;
        
        private string patientMedRecNumField;
        
        private string patientMiddleNameField;
        
        private string patientPhoneField;
        
        private string patientSSNField;
        
        private string patientSexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int customerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string hspcd {
            get {
                return this.hspcdField;
            }
            set {
                this.hspcdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string accRefDocCode {
            get {
                return this.accRefDocCodeField;
            }
            set {
                this.accRefDocCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string autoTrigger {
            get {
                return this.autoTriggerField;
            }
            set {
                this.autoTriggerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string insuredMemberID {
            get {
                return this.insuredMemberIDField;
            }
            set {
                this.insuredMemberIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string insuredPlanCd {
            get {
                return this.insuredPlanCdField;
            }
            set {
                this.insuredPlanCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientAccount {
            get {
                return this.patientAccountField;
            }
            set {
                this.patientAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientMedRecNum {
            get {
                return this.patientMedRecNumField;
            }
            set {
                this.patientMedRecNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientPhone {
            get {
                return this.patientPhoneField;
            }
            set {
                this.patientPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientSSN {
            get {
                return this.patientSSNField;
            }
            set {
                this.patientSSNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string patientSex {
            get {
                return this.patientSexField;
            }
            set {
                this.patientSexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ComplianceCheckerService/types")]
    public partial class createComplianceCheckerRequestResponse {
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createComplianceCheckerRequestCompletedEventHandler(object sender, createComplianceCheckerRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createComplianceCheckerRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createComplianceCheckerRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createComplianceCheckerRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createComplianceCheckerRequestResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591