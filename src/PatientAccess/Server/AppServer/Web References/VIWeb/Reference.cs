//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace PatientAccess.VIWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PreviousVisitServiceSoapBinding", Namespace="http://vi.webservices.tenethealth.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PreviousVisitDocument))]
    public partial class PreviousVisitServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getPreviousVisitDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPreviousVisitDocumentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PreviousVisitServiceService() {
            this.Url = global::PatientAccess.Properties.Settings.Default.PatientAccess_AppServer_VIWeb_PreviousVisitServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getPreviousVisitDocumentsCompletedEventHandler getPreviousVisitDocumentsCompleted;
        
        /// <remarks/>
        public event setPreviousVisitDocumentCompletedEventHandler setPreviousVisitDocumentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://vi.webservices.tenethealth.com", ResponseNamespace="http://vi.webservices.tenethealth.com")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPreviousVisitDocumentsReturn")]
        public PreviousVisitDocumentResponse getPreviousVisitDocuments(PreviousVisitDocumentRequest pvdr) {
            object[] results = this.Invoke("getPreviousVisitDocuments", new object[] {
                        pvdr});
            return ((PreviousVisitDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPreviousVisitDocuments(PreviousVisitDocumentRequest pvdr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPreviousVisitDocuments", new object[] {
                        pvdr}, callback, asyncState);
        }
        
        /// <remarks/>
        public PreviousVisitDocumentResponse EndgetPreviousVisitDocuments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PreviousVisitDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getPreviousVisitDocumentsAsync(PreviousVisitDocumentRequest pvdr) {
            this.getPreviousVisitDocumentsAsync(pvdr, null);
        }
        
        /// <remarks/>
        public void getPreviousVisitDocumentsAsync(PreviousVisitDocumentRequest pvdr, object userState) {
            if ((this.getPreviousVisitDocumentsOperationCompleted == null)) {
                this.getPreviousVisitDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPreviousVisitDocumentsOperationCompleted);
            }
            this.InvokeAsync("getPreviousVisitDocuments", new object[] {
                        pvdr}, this.getPreviousVisitDocumentsOperationCompleted, userState);
        }
        
        private void OngetPreviousVisitDocumentsOperationCompleted(object arg) {
            if ((this.getPreviousVisitDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPreviousVisitDocumentsCompleted(this, new getPreviousVisitDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://vi.webservices.tenethealth.com", ResponseNamespace="http://vi.webservices.tenethealth.com")]
        [return: System.Xml.Serialization.SoapElementAttribute("setPreviousVisitDocumentReturn")]
        public AcceptPreviousVisitDocumentResponse setPreviousVisitDocument(AcceptPreviousVisitDocumentRequest request) {
            object[] results = this.Invoke("setPreviousVisitDocument", new object[] {
                        request});
            return ((AcceptPreviousVisitDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetPreviousVisitDocument(AcceptPreviousVisitDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setPreviousVisitDocument", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public AcceptPreviousVisitDocumentResponse EndsetPreviousVisitDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AcceptPreviousVisitDocumentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void setPreviousVisitDocumentAsync(AcceptPreviousVisitDocumentRequest request) {
            this.setPreviousVisitDocumentAsync(request, null);
        }
        
        /// <remarks/>
        public void setPreviousVisitDocumentAsync(AcceptPreviousVisitDocumentRequest request, object userState) {
            if ((this.setPreviousVisitDocumentOperationCompleted == null)) {
                this.setPreviousVisitDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPreviousVisitDocumentOperationCompleted);
            }
            this.InvokeAsync("setPreviousVisitDocument", new object[] {
                        request}, this.setPreviousVisitDocumentOperationCompleted, userState);
        }
        
        private void OnsetPreviousVisitDocumentOperationCompleted(object arg) {
            if ((this.setPreviousVisitDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPreviousVisitDocumentCompleted(this, new setPreviousVisitDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:PreviousVisitService")]
    public partial class PreviousVisitDocumentRequest {
        
        private string docTypeField;
        
        private string hspCodeField;
        
        private int maxAgeField;
        
        private string medicalRecordNumberField;
        
        private string multipleField;
        
        private int returnFormatField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string docType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string hspCode {
            get {
                return this.hspCodeField;
            }
            set {
                this.hspCodeField = value;
            }
        }
        
        /// <remarks/>
        public int maxAge {
            get {
                return this.maxAgeField;
            }
            set {
                this.maxAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string medicalRecordNumber {
            get {
                return this.medicalRecordNumberField;
            }
            set {
                this.medicalRecordNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string multiple {
            get {
                return this.multipleField;
            }
            set {
                this.multipleField = value;
            }
        }
        
        /// <remarks/>
        public int returnFormat {
            get {
                return this.returnFormatField;
            }
            set {
                this.returnFormatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:PreviousVisitService")]
    public partial class AcceptPreviousVisitDocumentResponse {
        
        private string currentVisitAccountNumberField;
        
        private bool documentAcceptedField;
        
        private string errorMessageField;
        
        private string prevoiusVisitAccountNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string currentVisitAccountNumber {
            get {
                return this.currentVisitAccountNumberField;
            }
            set {
                this.currentVisitAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool documentAccepted {
            get {
                return this.documentAcceptedField;
            }
            set {
                this.documentAcceptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string prevoiusVisitAccountNumber {
            get {
                return this.prevoiusVisitAccountNumberField;
            }
            set {
                this.prevoiusVisitAccountNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:PreviousVisitService")]
    public partial class AcceptPreviousVisitDocumentRequest {
        
        private string currentAcctNumberField;
        
        private string docIDField;
        
        private string hspCodeField;
        
        private string previousAcctNumbField;
        
        private string previousAcctNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string currentAcctNumber {
            get {
                return this.currentAcctNumberField;
            }
            set {
                this.currentAcctNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string docID {
            get {
                return this.docIDField;
            }
            set {
                this.docIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string hspCode {
            get {
                return this.hspCodeField;
            }
            set {
                this.hspCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string previousAcctNumb {
            get {
                return this.previousAcctNumbField;
            }
            set {
                this.previousAcctNumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string previousAcctNumber {
            get {
                return this.previousAcctNumberField;
            }
            set {
                this.previousAcctNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:PreviousVisitService")]
    public partial class PreviousVisitDocument {
        
        private string accountNumberField;
        
        private System.Nullable<System.DateTime> documentDateField;
        
        private string documentIdField;
        
        private byte[] documentObjectField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> documentDate {
            get {
                return this.documentDateField;
            }
            set {
                this.documentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] documentObject {
            get {
                return this.documentObjectField;
            }
            set {
                this.documentObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:PreviousVisitService")]
    public partial class PreviousVisitDocumentResponse {
        
        private string docTypeField;
        
        private bool documentsWereFoundField;
        
        private string errorMessageField;
        
        private string hspCodeField;
        
        private string medicalRecordNumberField;
        
        private PreviousVisitDocument[] previousVisitDocumentsField;
        
        private PreviousVisitDocument[] recsFoundField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string docType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool documentsWereFound {
            get {
                return this.documentsWereFoundField;
            }
            set {
                this.documentsWereFoundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string hspCode {
            get {
                return this.hspCodeField;
            }
            set {
                this.hspCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string medicalRecordNumber {
            get {
                return this.medicalRecordNumberField;
            }
            set {
                this.medicalRecordNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public PreviousVisitDocument[] previousVisitDocuments {
            get {
                return this.previousVisitDocumentsField;
            }
            set {
                this.previousVisitDocumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public PreviousVisitDocument[] recsFound {
            get {
                return this.recsFoundField;
            }
            set {
                this.recsFoundField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getPreviousVisitDocumentsCompletedEventHandler(object sender, getPreviousVisitDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPreviousVisitDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPreviousVisitDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PreviousVisitDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreviousVisitDocumentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setPreviousVisitDocumentCompletedEventHandler(object sender, setPreviousVisitDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPreviousVisitDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPreviousVisitDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcceptPreviousVisitDocumentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptPreviousVisitDocumentResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591