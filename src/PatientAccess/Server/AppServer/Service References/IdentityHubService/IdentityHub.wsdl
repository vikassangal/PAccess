<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:intf="urn:bean.initiate.com" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:impl="urn:bean.initiate.com" targetNamespace="urn:bean.initiate.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:bean.initiate.com">
      <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/" />
      <xsd:complexType name="IxnBaseRequest" abstract="true">
        <xsd:sequence>
          <xsd:element name="args" nillable="true" type="xsd:string" />
          <xsd:element name="audMode" nillable="true" type="xsd:string" />
          <xsd:element name="userName" nillable="true" type="xsd:string" />
          <xsd:element name="userPassword" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemberIxnRequestBase" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="getType" nillable="true" type="xsd:string" />
              <xsd:element name="keySortOrder" nillable="true" type="xsd:string" />
              <xsd:element name="memStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segAttrFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="BeanWs" abstract="true">
        <xsd:sequence />
      </xsd:complexType>
      <xsd:complexType name="SegDefBeanWs" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:BeanWs">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RowWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:SegDefBeanWs">
            <xsd:sequence>
              <xsd:element name="rowInd" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AudRowWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:RowWs">
            <xsd:sequence>
              <xsd:element name="audRecno" type="xsd:long" />
              <xsd:element name="audSeqno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AudHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:AudRowWs">
            <xsd:sequence>
              <xsd:element name="audCtime" nillable="true" type="xsd:string" />
              <xsd:element name="evtCtime" nillable="true" type="xsd:string" />
              <xsd:element name="evtInitiator" nillable="true" type="xsd:string" />
              <xsd:element name="evtLocation" nillable="true" type="xsd:string" />
              <xsd:element name="evtType" nillable="true" type="xsd:string" />
              <xsd:element name="evtTypeno" type="xsd:int" />
              <xsd:element name="ixnCode" nillable="true" type="xsd:string" />
              <xsd:element name="ixnRecno" type="xsd:int" />
              <xsd:element name="usrRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAudHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:AudHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemRowWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:RowWs">
            <xsd:sequence>
              <xsd:element name="entRecno" type="xsd:long" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" type="xsd:long" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EntIqueWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="audRecno" type="xsd:long" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="usrRecno" type="xsd:int" />
              <xsd:element name="wrkCode" nillable="true" type="xsd:string" />
              <xsd:element name="wrkOwner" nillable="true" type="xsd:string" />
              <xsd:element name="wrkPrior" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntIqueWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntIqueWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntLinkWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="curEntRecno" type="xsd:long" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="linkType" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntLinkWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntLinkWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntNoteWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="cusrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="cusrRecno" type="xsd:int" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="musrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="musrRecno" type="xsd:int" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="theNote" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntNoteWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntNoteWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntOqueWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="audRecno" type="xsd:long" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="usrRecno" type="xsd:int" />
              <xsd:element name="wrkCode" nillable="true" type="xsd:string" />
              <xsd:element name="wrkOwner" nillable="true" type="xsd:string" />
              <xsd:element name="wrkPrior" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntOqueWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntOqueWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntRuleWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="memRecno2" type="xsd:long" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="ruleType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntRuleWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntRuleWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntXeiaWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="eiaStat" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStat2" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStatno" type="xsd:int" />
              <xsd:element name="eiaStatno2" type="xsd:int" />
              <xsd:element name="eiaType" nillable="true" type="xsd:string" />
              <xsd:element name="eiaTypeno" type="xsd:int" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="maxScore" type="xsd:short" />
              <xsd:element name="minScore" type="xsd:short" />
              <xsd:element name="prevEntRecno" type="xsd:long" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="supEntRecno" type="xsd:long" />
              <xsd:element name="tskStat" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatno" type="xsd:int" />
              <xsd:element name="tskType" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeno" type="xsd:int" />
              <xsd:element name="usrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="usrRecno" type="xsd:int" />
              <xsd:element name="xtskCarn" type="xsd:long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntXeiaWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntXeiaWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntXtskWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="maxScore" type="xsd:short" />
              <xsd:element name="minScore" type="xsd:short" />
              <xsd:element name="ownerName" nillable="true" type="xsd:string" />
              <xsd:element name="ownerRecno" type="xsd:int" />
              <xsd:element name="ownerType" nillable="true" type="xsd:string" />
              <xsd:element name="prevOwnerName" nillable="true" type="xsd:string" />
              <xsd:element name="prevOwnerRecno" type="xsd:int" />
              <xsd:element name="prevOwnerType" nillable="true" type="xsd:string" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="relatedMembers" type="xsd:int" />
              <xsd:element name="setRecno" type="xsd:long" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="supEntRecno" type="xsd:long" />
              <xsd:element name="tskRecno" type="xsd:long" />
              <xsd:element name="tskStat" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatno" type="xsd:int" />
              <xsd:element name="tskType" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeno" type="xsd:int" />
              <xsd:element name="usrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="usrRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntXtskWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntXtskWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemAttrRowWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="asaIdxno" type="xsd:int" />
              <xsd:element name="attrCode" nillable="true" type="xsd:string" />
              <xsd:element name="attrName" nillable="true" type="xsd:string" />
              <xsd:element name="attrRecno" type="xsd:int" />
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="memSeqno" type="xsd:int" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="recStat" nillable="true" type="xsd:string" />
              <xsd:element name="srcFtime" nillable="true" type="xsd:string" />
              <xsd:element name="srcLtime" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemAddrWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="city" nillable="true" type="xsd:string" />
              <xsd:element name="country" nillable="true" type="xsd:string" />
              <xsd:element name="geoCode1" nillable="true" type="xsd:string" />
              <xsd:element name="geoCode2" nillable="true" type="xsd:string" />
              <xsd:element name="geoText1" nillable="true" type="xsd:string" />
              <xsd:element name="stLine1" nillable="true" type="xsd:string" />
              <xsd:element name="stLine2" nillable="true" type="xsd:string" />
              <xsd:element name="stLine3" nillable="true" type="xsd:string" />
              <xsd:element name="stLine4" nillable="true" type="xsd:string" />
              <xsd:element name="state" nillable="true" type="xsd:string" />
              <xsd:element name="zipCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemAddrWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemAddrWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemApptWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="apIssuer" nillable="true" type="xsd:string" />
              <xsd:element name="apNumber" nillable="true" type="xsd:string" />
              <xsd:element name="apSrcRecno" type="xsd:int" />
              <xsd:element name="apStime" nillable="true" type="xsd:string" />
              <xsd:element name="resDept" nillable="true" type="xsd:string" />
              <xsd:element name="resId" nillable="true" type="xsd:string" />
              <xsd:element name="resLoc" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemApptWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemApptWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemAttrWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="attrVal" nillable="true" type="xsd:string" />
              <xsd:element name="elemDesc" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemAttrWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemAttrWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemBktdWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="bktHash" type="xsd:long" />
              <xsd:element name="bktRole" type="xsd:long" />
              <xsd:element name="bktVal" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemBktdWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemBktdWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemCmpdWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="cmpSeqno" type="xsd:int" />
              <xsd:element name="cmpVal" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemCmpdWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemCmpdWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemContWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="ctrCenter" nillable="true" type="xsd:string" />
              <xsd:element name="ctrCisId" nillable="true" type="xsd:string" />
              <xsd:element name="ctrDeal" nillable="true" type="xsd:string" />
              <xsd:element name="ctrEffDate" nillable="true" type="xsd:string" />
              <xsd:element name="ctrEndDate" nillable="true" type="xsd:string" />
              <xsd:element name="ctrId" nillable="true" type="xsd:string" />
              <xsd:element name="ctrLob" nillable="true" type="xsd:string" />
              <xsd:element name="ctrMarket" nillable="true" type="xsd:string" />
              <xsd:element name="ctrMasId" nillable="true" type="xsd:string" />
              <xsd:element name="ctrMasName" nillable="true" type="xsd:string" />
              <xsd:element name="ctrName" nillable="true" type="xsd:string" />
              <xsd:element name="ctrNetwork" nillable="true" type="xsd:string" />
              <xsd:element name="ctrParCd" nillable="true" type="xsd:string" />
              <xsd:element name="ctrSeqNum" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemContWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemContWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemDateWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="dateVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemDateWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemDateWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemDrugWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="dateFilled" nillable="true" type="xsd:string" />
              <xsd:element name="daysSupply" type="xsd:short" />
              <xsd:element name="dob" nillable="true" type="xsd:string" />
              <xsd:element name="drugCode" nillable="true" type="xsd:string" />
              <xsd:element name="onmFirst" nillable="true" type="xsd:string" />
              <xsd:element name="onmLast" nillable="true" type="xsd:string" />
              <xsd:element name="onmMiddle" nillable="true" type="xsd:string" />
              <xsd:element name="perCode" nillable="true" type="xsd:string" />
              <xsd:element name="pharmacyId" nillable="true" type="xsd:string" />
              <xsd:element name="prescriberId" nillable="true" type="xsd:string" />
              <xsd:element name="quantity" type="xsd:int" />
              <xsd:element name="refillNumber" type="xsd:short" />
              <xsd:element name="rxNumber" nillable="true" type="xsd:string" />
              <xsd:element name="sex" nillable="true" type="xsd:string" />
              <xsd:element name="ssn" nillable="true" type="xsd:string" />
              <xsd:element name="totalRefills" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemDrugWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemDrugWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemEligWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="city" nillable="true" type="xsd:string" />
              <xsd:element name="country" nillable="true" type="xsd:string" />
              <xsd:element name="dob" nillable="true" type="xsd:string" />
              <xsd:element name="eligDate" nillable="true" type="xsd:string" />
              <xsd:element name="geoCode1" nillable="true" type="xsd:string" />
              <xsd:element name="geoCode2" nillable="true" type="xsd:string" />
              <xsd:element name="geoText1" nillable="true" type="xsd:string" />
              <xsd:element name="insGroup" nillable="true" type="xsd:string" />
              <xsd:element name="insPlan" nillable="true" type="xsd:string" />
              <xsd:element name="onmDegree" nillable="true" type="xsd:string" />
              <xsd:element name="onmFirst" nillable="true" type="xsd:string" />
              <xsd:element name="onmLast" nillable="true" type="xsd:string" />
              <xsd:element name="onmMiddle" nillable="true" type="xsd:string" />
              <xsd:element name="onmPrefix" nillable="true" type="xsd:string" />
              <xsd:element name="onmSuffix" nillable="true" type="xsd:string" />
              <xsd:element name="perCode" nillable="true" type="xsd:string" />
              <xsd:element name="phArea" nillable="true" type="xsd:string" />
              <xsd:element name="phCmnt" nillable="true" type="xsd:string" />
              <xsd:element name="phExtn" nillable="true" type="xsd:string" />
              <xsd:element name="phIcc" nillable="true" type="xsd:string" />
              <xsd:element name="phNumber" nillable="true" type="xsd:string" />
              <xsd:element name="sex" nillable="true" type="xsd:string" />
              <xsd:element name="ssn" nillable="true" type="xsd:string" />
              <xsd:element name="stLine1" nillable="true" type="xsd:string" />
              <xsd:element name="stLine2" nillable="true" type="xsd:string" />
              <xsd:element name="state" nillable="true" type="xsd:string" />
              <xsd:element name="termDate" nillable="true" type="xsd:string" />
              <xsd:element name="zipCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemEligWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemEligWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemEnumWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="elemRecno" type="xsd:int" />
              <xsd:element name="elemVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemEnumWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemEnumWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemExtaWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="city" nillable="true" type="xsd:string" />
              <xsd:element name="comData1" nillable="true" type="xsd:string" />
              <xsd:element name="comData2" nillable="true" type="xsd:string" />
              <xsd:element name="comData3" nillable="true" type="xsd:string" />
              <xsd:element name="comType1" nillable="true" type="xsd:string" />
              <xsd:element name="comType2" nillable="true" type="xsd:string" />
              <xsd:element name="comType3" nillable="true" type="xsd:string" />
              <xsd:element name="country" nillable="true" type="xsd:string" />
              <xsd:element name="dob" nillable="true" type="xsd:string" />
              <xsd:element name="empName" nillable="true" type="xsd:string" />
              <xsd:element name="hpMemIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="hpPolIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="hpSubIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memExpDate" nillable="true" type="xsd:string" />
              <xsd:element name="onmFirst" nillable="true" type="xsd:string" />
              <xsd:element name="onmLast" nillable="true" type="xsd:string" />
              <xsd:element name="onmMiddle" nillable="true" type="xsd:string" />
              <xsd:element name="onmPrefix" nillable="true" type="xsd:string" />
              <xsd:element name="onmSuffix" nillable="true" type="xsd:string" />
              <xsd:element name="sex" nillable="true" type="xsd:string" />
              <xsd:element name="ssn" nillable="true" type="xsd:string" />
              <xsd:element name="stLine1" nillable="true" type="xsd:string" />
              <xsd:element name="stLine2" nillable="true" type="xsd:string" />
              <xsd:element name="state" nillable="true" type="xsd:string" />
              <xsd:element name="subIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="zipCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemExtaWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemExtaWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemExtbWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="ccExpDate" nillable="true" type="xsd:string" />
              <xsd:element name="ccNumber" nillable="true" type="xsd:string" />
              <xsd:element name="ccType" nillable="true" type="xsd:string" />
              <xsd:element name="doa" nillable="true" type="xsd:string" />
              <xsd:element name="propCode" nillable="true" type="xsd:string" />
              <xsd:element name="txnID" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemExtbWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemExtbWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemExtcWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="acctNumber" nillable="true" type="xsd:string" />
              <xsd:element name="disDate" nillable="true" type="xsd:string" />
              <xsd:element name="encDate" nillable="true" type="xsd:string" />
              <xsd:element name="patType" nillable="true" type="xsd:string" />
              <xsd:element name="phys1" nillable="true" type="xsd:string" />
              <xsd:element name="phys2" nillable="true" type="xsd:string" />
              <xsd:element name="plan1" nillable="true" type="xsd:string" />
              <xsd:element name="plan2" nillable="true" type="xsd:string" />
              <xsd:element name="svcLoc" nillable="true" type="xsd:string" />
              <xsd:element name="svcType" nillable="true" type="xsd:string" />
              <xsd:element name="user1" nillable="true" type="xsd:string" />
              <xsd:element name="user2" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemExtcWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemExtcWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemExtdWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="city" nillable="true" type="xsd:string" />
              <xsd:element name="dob" nillable="true" type="xsd:string" />
              <xsd:element name="expDate" nillable="true" type="xsd:string" />
              <xsd:element name="expInd" nillable="true" type="xsd:string" />
              <xsd:element name="modDate" nillable="true" type="xsd:string" />
              <xsd:element name="onmFirst" nillable="true" type="xsd:string" />
              <xsd:element name="onmLast" nillable="true" type="xsd:string" />
              <xsd:element name="onmMiddle" nillable="true" type="xsd:string" />
              <xsd:element name="onmSuffix" nillable="true" type="xsd:string" />
              <xsd:element name="phone" nillable="true" type="xsd:string" />
              <xsd:element name="secIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="sex" nillable="true" type="xsd:string" />
              <xsd:element name="ssn" nillable="true" type="xsd:string" />
              <xsd:element name="stLine1" nillable="true" type="xsd:string" />
              <xsd:element name="stLine2" nillable="true" type="xsd:string" />
              <xsd:element name="state" nillable="true" type="xsd:string" />
              <xsd:element name="zipCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemExtdWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemExtdWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemExteWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="accNum" nillable="true" type="xsd:string" />
              <xsd:element name="frmCnt" type="xsd:int" />
              <xsd:element name="pacsId" nillable="true" type="xsd:string" />
              <xsd:element name="refPhys" nillable="true" type="xsd:string" />
              <xsd:element name="stuDate" nillable="true" type="xsd:string" />
              <xsd:element name="stuDesc" nillable="true" type="xsd:string" />
              <xsd:element name="stuMod" nillable="true" type="xsd:string" />
              <xsd:element name="studyId" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemExteWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemExteWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOf_xsd_long">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="xsd:long" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="entRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
              <xsd:element name="linkType" nillable="true" type="xsd:string" />
              <xsd:element name="matchCode" nillable="true" type="xsd:string" />
              <xsd:element name="matchScore" type="xsd:short" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="memSeqno" type="xsd:int" />
              <xsd:element name="memStat" nillable="true" type="xsd:string" />
              <xsd:element name="memVerno" type="xsd:int" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="srcFtime" nillable="true" type="xsd:string" />
              <xsd:element name="srcLtime" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemIdentWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="idExpDate" nillable="true" type="xsd:string" />
              <xsd:element name="idIssuer" nillable="true" type="xsd:string" />
              <xsd:element name="idNumber" nillable="true" type="xsd:string" />
              <xsd:element name="idSrcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemIdentWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemIdentWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOf_xsd_string">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemIdsWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="fldNames" nillable="true" type="impl:ArrayOf_xsd_string" />
              <xsd:element name="fldTypes" nillable="true" type="impl:ArrayOf_xsd_string" />
              <xsd:element name="segCode" nillable="true" type="xsd:string" />
              <xsd:element name="values" nillable="true" type="impl:ArrayOf_xsd_string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemIdsWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemIdsWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemIqueWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="audRecno" type="xsd:long" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="usrRecno" type="xsd:int" />
              <xsd:element name="wrkCode" nillable="true" type="xsd:string" />
              <xsd:element name="wrkOwner" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemIqueWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemIqueWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemLinkWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="curSetRecno" type="xsd:long" />
              <xsd:element name="linkType" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemLinkWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemLinkWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemNameWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="onmDegree" nillable="true" type="xsd:string" />
              <xsd:element name="onmFirst" nillable="true" type="xsd:string" />
              <xsd:element name="onmLast" nillable="true" type="xsd:string" />
              <xsd:element name="onmMiddle" nillable="true" type="xsd:string" />
              <xsd:element name="onmPrefix" nillable="true" type="xsd:string" />
              <xsd:element name="onmSuffix" nillable="true" type="xsd:string" />
              <xsd:element name="onmTitle" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemNameWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemNameWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemNoteWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="cusrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="cusrRecno" type="xsd:int" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="musrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="musrRecno" type="xsd:int" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="theNote" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemNoteWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemNoteWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemOqueWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="audRecno" type="xsd:long" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="usrRecno" type="xsd:int" />
              <xsd:element name="wrkCode" nillable="true" type="xsd:string" />
              <xsd:element name="wrkOwner" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemOqueWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemOqueWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemOrefWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="objRecno" type="xsd:long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemOrefWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemOrefWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemPhoneWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemAttrRowWs">
            <xsd:sequence>
              <xsd:element name="phArea" nillable="true" type="xsd:string" />
              <xsd:element name="phCmnt" nillable="true" type="xsd:string" />
              <xsd:element name="phExtn" nillable="true" type="xsd:string" />
              <xsd:element name="phIcc" nillable="true" type="xsd:string" />
              <xsd:element name="phNumber" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemPhoneWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemPhoneWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemQrydWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="qryRole" type="xsd:int" />
              <xsd:element name="qryVal" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemQrydWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemQrydWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemRuleWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="memRecno2" type="xsd:long" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="ruleType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemRuleWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemRuleWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemXeiaWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="eiaStat" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStat2" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStatno" type="xsd:int" />
              <xsd:element name="eiaStatno2" type="xsd:int" />
              <xsd:element name="eiaType" nillable="true" type="xsd:string" />
              <xsd:element name="eiaTypeno" type="xsd:int" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="maxScore" type="xsd:short" />
              <xsd:element name="minScore" type="xsd:short" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="supMemRecno" type="xsd:long" />
              <xsd:element name="tskStat" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatno" type="xsd:int" />
              <xsd:element name="tskType" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeno" type="xsd:int" />
              <xsd:element name="usrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="usrRecno" type="xsd:int" />
              <xsd:element name="xtskCarn" type="xsd:long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemXeiaWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemXeiaWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemXtskWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemRowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="maxScore" type="xsd:short" />
              <xsd:element name="minScore" type="xsd:short" />
              <xsd:element name="ownerName" nillable="true" type="xsd:string" />
              <xsd:element name="ownerRecno" type="xsd:int" />
              <xsd:element name="ownerType" nillable="true" type="xsd:string" />
              <xsd:element name="prevOwnerName" nillable="true" type="xsd:string" />
              <xsd:element name="prevOwnerRecno" type="xsd:int" />
              <xsd:element name="prevOwnerType" nillable="true" type="xsd:string" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recCtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeBefore" nillable="true" type="xsd:string" />
              <xsd:element name="recMtimeSince" nillable="true" type="xsd:string" />
              <xsd:element name="relatedMembers" type="xsd:int" />
              <xsd:element name="setRecno" type="xsd:long" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="supMemRecno" type="xsd:long" />
              <xsd:element name="tskRecno" type="xsd:long" />
              <xsd:element name="tskStat" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatno" type="xsd:int" />
              <xsd:element name="tskType" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeno" type="xsd:int" />
              <xsd:element name="usrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="usrRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemXtskWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemXtskWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Member">
        <xsd:sequence>
          <xsd:element name="audHead" nillable="true" type="impl:ArrayOfAudHeadWs" />
          <xsd:element name="compareInfo" nillable="true" type="xsd:string" />
          <xsd:element name="entIque" nillable="true" type="impl:ArrayOfEntIqueWs" />
          <xsd:element name="entLink" nillable="true" type="impl:ArrayOfEntLinkWs" />
          <xsd:element name="entNote" nillable="true" type="impl:ArrayOfEntNoteWs" />
          <xsd:element name="entOque" nillable="true" type="impl:ArrayOfEntOqueWs" />
          <xsd:element name="entRule" nillable="true" type="impl:ArrayOfEntRuleWs" />
          <xsd:element name="entXeia" nillable="true" type="impl:ArrayOfEntXeiaWs" />
          <xsd:element name="entXtsk" nillable="true" type="impl:ArrayOfEntXtskWs" />
          <xsd:element name="memAddr" nillable="true" type="impl:ArrayOfMemAddrWs" />
          <xsd:element name="memAppt" nillable="true" type="impl:ArrayOfMemApptWs" />
          <xsd:element name="memAttr" nillable="true" type="impl:ArrayOfMemAttrWs" />
          <xsd:element name="memBktd" nillable="true" type="impl:ArrayOfMemBktdWs" />
          <xsd:element name="memCmpd" nillable="true" type="impl:ArrayOfMemCmpdWs" />
          <xsd:element name="memCont" nillable="true" type="impl:ArrayOfMemContWs" />
          <xsd:element name="memDate" nillable="true" type="impl:ArrayOfMemDateWs" />
          <xsd:element name="memDrug" nillable="true" type="impl:ArrayOfMemDrugWs" />
          <xsd:element name="memElig" nillable="true" type="impl:ArrayOfMemEligWs" />
          <xsd:element name="memEnum" nillable="true" type="impl:ArrayOfMemEnumWs" />
          <xsd:element name="memExta" nillable="true" type="impl:ArrayOfMemExtaWs" />
          <xsd:element name="memExtb" nillable="true" type="impl:ArrayOfMemExtbWs" />
          <xsd:element name="memExtc" nillable="true" type="impl:ArrayOfMemExtcWs" />
          <xsd:element name="memExtd" nillable="true" type="impl:ArrayOfMemExtdWs" />
          <xsd:element name="memExte" nillable="true" type="impl:ArrayOfMemExteWs" />
          <xsd:element name="memHead" nillable="true" type="impl:MemHeadWs" />
          <xsd:element name="memIdent" nillable="true" type="impl:ArrayOfMemIdentWs" />
          <xsd:element name="memIds" nillable="true" type="impl:ArrayOfMemIdsWs" />
          <xsd:element name="memIque" nillable="true" type="impl:ArrayOfMemIqueWs" />
          <xsd:element name="memLink" nillable="true" type="impl:ArrayOfMemLinkWs" />
          <xsd:element name="memName" nillable="true" type="impl:ArrayOfMemNameWs" />
          <xsd:element name="memNote" nillable="true" type="impl:ArrayOfMemNoteWs" />
          <xsd:element name="memOque" nillable="true" type="impl:ArrayOfMemOqueWs" />
          <xsd:element name="memOref" nillable="true" type="impl:ArrayOfMemOrefWs" />
          <xsd:element name="memPhone" nillable="true" type="impl:ArrayOfMemPhoneWs" />
          <xsd:element name="memQryd" nillable="true" type="impl:ArrayOfMemQrydWs" />
          <xsd:element name="memRule" nillable="true" type="impl:ArrayOfMemRuleWs" />
          <xsd:element name="memXeia" nillable="true" type="impl:ArrayOfMemXeiaWs" />
          <xsd:element name="memXtsk" nillable="true" type="impl:ArrayOfMemXtskWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemberSearchRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemberIxnRequestBase">
            <xsd:sequence>
              <xsd:element name="cvwName" nillable="true" type="xsd:string" />
              <xsd:element name="maxCand" nillable="true" type="xsd:int" />
              <xsd:element name="maxMems" nillable="true" type="xsd:int" />
              <xsd:element name="maxRows" nillable="true" type="xsd:int" />
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="minScore" nillable="true" type="xsd:short" />
              <xsd:element name="srcCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="FederatedError">
        <xsd:sequence>
          <xsd:element name="message" nillable="true" type="xsd:string" />
          <xsd:element name="stackTrace" nillable="true" type="xsd:string" />
          <xsd:element name="url" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFederatedError">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:FederatedError" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMember">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Member" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FederatedResult">
        <xsd:sequence>
          <xsd:element name="errors" nillable="true" type="impl:ArrayOfFederatedError" />
          <xsd:element name="members" nillable="true" type="impl:ArrayOfMember" />
          <xsd:element name="status" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemberMatchRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:MemberIxnRequestBase">
            <xsd:sequence>
              <xsd:element name="entRecno" nillable="true" type="xsd:long" />
              <xsd:element name="maxRows" nillable="true" type="xsd:int" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="minScore" nillable="true" type="xsd:short" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="cvwName" nillable="true" type="xsd:string" />
              <xsd:element name="entRecno" nillable="true" type="xsd:long" />
              <xsd:element name="entRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="getType" nillable="true" type="xsd:string" />
              <xsd:element name="keySortOrder" nillable="true" type="xsd:string" />
              <xsd:element name="maxMems" nillable="true" type="xsd:int" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnums" nillable="true" type="impl:ArrayOf_xsd_string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="memRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
              <xsd:element name="memStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segAttrFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodes" nillable="true" type="impl:ArrayOf_xsd_string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entPrior" type="xsd:short" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="evtCtime" nillable="true" type="xsd:dateTime" />
              <xsd:element name="evtInitiator" nillable="true" type="xsd:string" />
              <xsd:element name="evtLocation" nillable="true" type="xsd:string" />
              <xsd:element name="evtType" nillable="true" type="xsd:string" />
              <xsd:element name="matchMode" nillable="true" type="xsd:string" />
              <xsd:element name="memMode" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="putType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberPutQualRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entPrior" type="xsd:short" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="evtCtime" nillable="true" type="xsd:dateTime" />
              <xsd:element name="evtInitiator" nillable="true" type="xsd:string" />
              <xsd:element name="evtLocation" nillable="true" type="xsd:string" />
              <xsd:element name="evtType" nillable="true" type="xsd:string" />
              <xsd:element name="matchMode" nillable="true" type="xsd:string" />
              <xsd:element name="memMode" nillable="true" type="xsd:string" />
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="putType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberCompareRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnumA" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnumB" nillable="true" type="xsd:string" />
              <xsd:element name="memRecnoA" nillable="true" type="xsd:long" />
              <xsd:element name="memRecnoB" nillable="true" type="xsd:long" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeA" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeB" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberDeleteRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberUndeleteRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberDropRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberMergeRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnumObs" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnumSrv" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeObs" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeSrv" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberUnmergeRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnumObs" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeObs" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberPostItRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="memNote" nillable="true" type="impl:MemNoteWs" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="putType" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MemberScoreRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="members" nillable="true" type="impl:ArrayOfMember" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TaskGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="getType" nillable="true" type="xsd:string" />
              <xsd:element name="maxMems" nillable="true" type="xsd:int" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="memStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segAttrFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TaskSearchRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="maxMems" nillable="true" type="xsd:int" />
              <xsd:element name="maxRows" nillable="true" type="xsd:int" />
              <xsd:element name="memStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segAttrFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TaskPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="putType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EiaGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entRecno" nillable="true" type="xsd:long" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="getType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" nillable="true" type="xsd:long" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segAttrFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EiaPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="putType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EiaSearchRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="maxMems" nillable="true" type="xsd:int" />
              <xsd:element name="maxRows" nillable="true" type="xsd:int" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="member" nillable="true" type="impl:Member" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segAttrFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="srcCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DictionaryGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DicRowWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:RowWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="recStat" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AppDataWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="appRecno" type="xsd:int" />
              <xsd:element name="appSeqno" type="xsd:int" />
              <xsd:element name="dataVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAppDataWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:AppDataWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AppHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="appName" nillable="true" type="xsd:string" />
              <xsd:element name="appRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAppHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:AppHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AppPropWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="appRecno" type="xsd:int" />
              <xsd:element name="propName" nillable="true" type="xsd:string" />
              <xsd:element name="propVal" nillable="true" type="xsd:string" />
              <xsd:element name="segRecno" type="xsd:int" />
              <xsd:element name="theRecno" type="xsd:long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAppPropWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:AppPropWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BktFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="bktDoneName" nillable="true" type="xsd:string" />
              <xsd:element name="bktFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="bktFuncDesc" nillable="true" type="xsd:string" />
              <xsd:element name="bktFuncName" nillable="true" type="xsd:string" />
              <xsd:element name="bktInitName" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxArgs" type="xsd:short" />
              <xsd:element name="minArgs" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBktFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:BktFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BktXgenWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="bktFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="bktGenDesc" nillable="true" type="xsd:string" />
              <xsd:element name="bktGenType" nillable="true" type="xsd:string" />
              <xsd:element name="genFuncCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBktXgenWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:BktXgenWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CmpFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="NRoles" type="xsd:int" />
              <xsd:element name="cmpDoneName" nillable="true" type="xsd:string" />
              <xsd:element name="cmpFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="cmpFuncDesc" nillable="true" type="xsd:string" />
              <xsd:element name="cmpFuncName" nillable="true" type="xsd:string" />
              <xsd:element name="cmpInitName" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxArgs" type="xsd:short" />
              <xsd:element name="minArgs" type="xsd:short" />
              <xsd:element name="wgtFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx1" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx2" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx3" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx4" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx5" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx6" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx7" nillable="true" type="xsd:string" />
              <xsd:element name="wgtSfx8" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCmpFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:CmpFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CmpHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="cmpArgs" nillable="true" type="xsd:string" />
              <xsd:element name="cmpCode" nillable="true" type="xsd:string" />
              <xsd:element name="cmpDesc" nillable="true" type="xsd:string" />
              <xsd:element name="cmpName" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCmpHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:CmpHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CmpSpecWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="anonStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="cmpArgs" nillable="true" type="xsd:string" />
              <xsd:element name="cmpCode" nillable="true" type="xsd:string" />
              <xsd:element name="cmpDesc" nillable="true" type="xsd:string" />
              <xsd:element name="cmpFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="cmpGroupno" type="xsd:int" />
              <xsd:element name="cmpMode" type="xsd:int" />
              <xsd:element name="cmpRole1" type="xsd:int" />
              <xsd:element name="cmpRole2" type="xsd:int" />
              <xsd:element name="cmpRole3" type="xsd:int" />
              <xsd:element name="cmpRole4" type="xsd:int" />
              <xsd:element name="cmpSeqno" type="xsd:int" />
              <xsd:element name="cmpSpecCode" nillable="true" type="xsd:string" />
              <xsd:element name="equiStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="isRI" nillable="true" type="xsd:string" />
              <xsd:element name="wgtArgs" nillable="true" type="xsd:string" />
              <xsd:element name="wgtCUT" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCmpSpecWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:CmpSpecWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CvwFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="cvwFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="cvwFuncName" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCvwFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:CvwFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CvwHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="audLevel" type="xsd:short" />
              <xsd:element name="cvwDesc" nillable="true" type="xsd:string" />
              <xsd:element name="cvwFuncArgs" nillable="true" type="xsd:string" />
              <xsd:element name="cvwFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="cvwKind" nillable="true" type="xsd:string" />
              <xsd:element name="cvwName" nillable="true" type="xsd:string" />
              <xsd:element name="cvwRecno" type="xsd:int" />
              <xsd:element name="cvwType" nillable="true" type="xsd:string" />
              <xsd:element name="isEnhanced" nillable="true" type="xsd:string" />
              <xsd:element name="maxRows" type="xsd:short" />
              <xsd:element name="mcaLevel" type="xsd:short" />
              <xsd:element name="memTypeno" type="xsd:int" />
              <xsd:element name="rsFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCvwHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:CvwHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CvwXsegWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="attrPrior" type="xsd:int" />
              <xsd:element name="attrRecno" type="xsd:int" />
              <xsd:element name="cvwFuncArgs" nillable="true" type="xsd:string" />
              <xsd:element name="cvwFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="cvwRecno" type="xsd:int" />
              <xsd:element name="segRecno" type="xsd:int" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCvwXsegWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:CvwXsegWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DvdHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="dvdArgs" nillable="true" type="xsd:string" />
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdDesc" nillable="true" type="xsd:string" />
              <xsd:element name="dvdName" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDvdHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:DvdHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DvdXbktWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="bktRole" type="xsd:long" />
              <xsd:element name="dvdArgs" nillable="true" type="xsd:string" />
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdDesc" nillable="true" type="xsd:string" />
              <xsd:element name="dvdGrp" type="xsd:int" />
              <xsd:element name="dvdGrpLabel" nillable="true" type="xsd:string" />
              <xsd:element name="dvdSeqno" type="xsd:int" />
              <xsd:element name="maxBktFreq" type="xsd:int" />
              <xsd:element name="maxNway" type="xsd:short" />
              <xsd:element name="minNway" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDvdXbktWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:DvdXbktWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DvdXcmpWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="cmpRole" type="xsd:int" />
              <xsd:element name="cmpRoleLabel" nillable="true" type="xsd:string" />
              <xsd:element name="dvdArgs" nillable="true" type="xsd:string" />
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdDesc" nillable="true" type="xsd:string" />
              <xsd:element name="dvdSeqno" type="xsd:int" />
              <xsd:element name="rsFilter" nillable="true" type="xsd:string" />
              <xsd:element name="stdRole" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDvdXcmpWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:DvdXcmpWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DvdXqryWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="dvdArgs" nillable="true" type="xsd:string" />
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdDesc" nillable="true" type="xsd:string" />
              <xsd:element name="dvdSeqno" type="xsd:int" />
              <xsd:element name="qryRole" type="xsd:int" />
              <xsd:element name="qryRoleLabel" nillable="true" type="xsd:string" />
              <xsd:element name="rsFilter" nillable="true" type="xsd:string" />
              <xsd:element name="stdRole" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDvdXqryWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:DvdXqryWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DvdXstdWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="anonStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="attrCode" nillable="true" type="xsd:string" />
              <xsd:element name="cmapStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdArgs" nillable="true" type="xsd:string" />
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdDesc" nillable="true" type="xsd:string" />
              <xsd:element name="dvdSeqno" type="xsd:int" />
              <xsd:element name="equiStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="fldArgs" nillable="true" type="xsd:string" />
              <xsd:element name="rsFilter" nillable="true" type="xsd:string" />
              <xsd:element name="stdFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="stdRole1" type="xsd:int" />
              <xsd:element name="stdRole1Label" nillable="true" type="xsd:string" />
              <xsd:element name="stdRole2" type="xsd:int" />
              <xsd:element name="stdRole2Label" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDvdXstdWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:DvdXstdWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DvdYbktWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="anonStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="bktFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="bktGenType" nillable="true" type="xsd:string" />
              <xsd:element name="cmpRole" type="xsd:int" />
              <xsd:element name="dvdArgs" nillable="true" type="xsd:string" />
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="dvdDesc" nillable="true" type="xsd:string" />
              <xsd:element name="dvdGrp" type="xsd:int" />
              <xsd:element name="dvdSeqno" type="xsd:int" />
              <xsd:element name="equiStrCode" nillable="true" type="xsd:string" />
              <xsd:element name="genFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxTokens" type="xsd:short" />
              <xsd:element name="minTokens" type="xsd:short" />
              <xsd:element name="rbktStrCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDvdYbktWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:DvdYbktWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EdtElemWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="edtCode" nillable="true" type="xsd:string" />
              <xsd:element name="elemDesc" nillable="true" type="xsd:string" />
              <xsd:element name="elemRecno" type="xsd:int" />
              <xsd:element name="elemVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEdtElemWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EdtElemWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EdtHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="edtCode" nillable="true" type="xsd:string" />
              <xsd:element name="edtName" nillable="true" type="xsd:string" />
              <xsd:element name="edtOwner" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEdtHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EdtHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EiaStatWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="eiaStat" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStatCat" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStatLabel" nillable="true" type="xsd:string" />
              <xsd:element name="eiaStatno" type="xsd:int" />
              <xsd:element name="isDeletable" nillable="true" type="xsd:string" />
              <xsd:element name="isResolved" nillable="true" type="xsd:string" />
              <xsd:element name="isUpdatable" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEiaStatWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EiaStatWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EiaTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="eiaKind" nillable="true" type="xsd:string" />
              <xsd:element name="eiaType" nillable="true" type="xsd:string" />
              <xsd:element name="eiaTypeCat" nillable="true" type="xsd:string" />
              <xsd:element name="eiaTypeLabel" nillable="true" type="xsd:string" />
              <xsd:element name="eiaTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEiaTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EiaTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EntTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="autoLinkSS" nillable="true" type="xsd:string" />
              <xsd:element name="cmpCode" nillable="true" type="xsd:string" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="entTypeCat" nillable="true" type="xsd:string" />
              <xsd:element name="entTypeDesc" nillable="true" type="xsd:string" />
              <xsd:element name="entTypeLabel" nillable="true" type="xsd:string" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="hasIque" nillable="true" type="xsd:string" />
              <xsd:element name="hasLink" nillable="true" type="xsd:string" />
              <xsd:element name="hasNote" nillable="true" type="xsd:string" />
              <xsd:element name="hasOque" nillable="true" type="xsd:string" />
              <xsd:element name="hasRule" nillable="true" type="xsd:string" />
              <xsd:element name="hasXeia" nillable="true" type="xsd:string" />
              <xsd:element name="hasXtsk" nillable="true" type="xsd:string" />
              <xsd:element name="isAsync" nillable="true" type="xsd:string" />
              <xsd:element name="isTrans" nillable="true" type="xsd:string" />
              <xsd:element name="maxBktRole" type="xsd:long" />
              <xsd:element name="maxFreqCands" type="xsd:int" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="minBktRole" type="xsd:long" />
              <xsd:element name="msFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEntTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EntTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EvtTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="evtType" nillable="true" type="xsd:string" />
              <xsd:element name="evtTypeCat" nillable="true" type="xsd:string" />
              <xsd:element name="evtTypeLabel" nillable="true" type="xsd:string" />
              <xsd:element name="evtTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEvtTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:EvtTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ExtFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="extDoneName" nillable="true" type="xsd:string" />
              <xsd:element name="extFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="extFuncDesc" nillable="true" type="xsd:string" />
              <xsd:element name="extFuncName" nillable="true" type="xsd:string" />
              <xsd:element name="extInitName" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExtFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:ExtFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GenFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="genDoneName" nillable="true" type="xsd:string" />
              <xsd:element name="genFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="genFuncDesc" nillable="true" type="xsd:string" />
              <xsd:element name="genFuncName" nillable="true" type="xsd:string" />
              <xsd:element name="genInitName" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxArgs" type="xsd:short" />
              <xsd:element name="minArgs" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGenFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:GenFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GrpHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="defCvwRecno" type="xsd:int" />
              <xsd:element name="grpName" nillable="true" type="xsd:string" />
              <xsd:element name="grpRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGrpHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:GrpHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GrpXcvwWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="cvwRecno" type="xsd:int" />
              <xsd:element name="grpRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGrpXcvwWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:GrpXcvwWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GrpXixnWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="grpRecno" type="xsd:int" />
              <xsd:element name="ixnRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGrpXixnWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:GrpXixnWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GrpXsegWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="attrRecno" type="xsd:int" />
              <xsd:element name="grpRecno" type="xsd:int" />
              <xsd:element name="segPerm" nillable="true" type="xsd:string" />
              <xsd:element name="segRecno" type="xsd:int" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGrpXsegWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:GrpXsegWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="HandlerWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="callbackType" type="xsd:int" />
              <xsd:element name="handlerArgs" nillable="true" type="xsd:string" />
              <xsd:element name="handlerCode" nillable="true" type="xsd:string" />
              <xsd:element name="handlerSeqno" type="xsd:int" />
              <xsd:element name="handlerno" type="xsd:int" />
              <xsd:element name="ixnCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfHandlerWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:HandlerWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IxnHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="audLevel" type="xsd:short" />
              <xsd:element name="avgBktCands" type="xsd:int" />
              <xsd:element name="avgRcvSize" type="xsd:int" />
              <xsd:element name="avgSndSize" type="xsd:int" />
              <xsd:element name="avgTicks" type="xsd:int" />
              <xsd:element name="isSingle" nillable="true" type="xsd:string" />
              <xsd:element name="ixnCat" nillable="true" type="xsd:string" />
              <xsd:element name="ixnCode" nillable="true" type="xsd:string" />
              <xsd:element name="ixnLabel" nillable="true" type="xsd:string" />
              <xsd:element name="ixnName" nillable="true" type="xsd:string" />
              <xsd:element name="ixnRecno" type="xsd:int" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxBktCands" type="xsd:int" />
              <xsd:element name="maxRcvSize" type="xsd:int" />
              <xsd:element name="maxSndSize" type="xsd:int" />
              <xsd:element name="maxTicks" type="xsd:int" />
              <xsd:element name="minRcvSize" type="xsd:int" />
              <xsd:element name="minSndSize" type="xsd:int" />
              <xsd:element name="minTicks" type="xsd:int" />
              <xsd:element name="totBktCands" type="xsd:long" />
              <xsd:element name="totBktSrchs" type="xsd:int" />
              <xsd:element name="totExecs" type="xsd:int" />
              <xsd:element name="totGood" type="xsd:int" />
              <xsd:element name="totRcvSize" type="xsd:int" />
              <xsd:element name="totSndSize" type="xsd:int" />
              <xsd:element name="totTicks" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIxnHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:IxnHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LibHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="freeFunc" nillable="true" type="xsd:string" />
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="libName" nillable="true" type="xsd:string" />
              <xsd:element name="loadFunc" nillable="true" type="xsd:string" />
              <xsd:element name="platCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLibHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:LibHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemStatWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="isDerived" nillable="true" type="xsd:string" />
              <xsd:element name="memStat" nillable="true" type="xsd:string" />
              <xsd:element name="memStatCat" nillable="true" type="xsd:string" />
              <xsd:element name="memStatLabel" nillable="true" type="xsd:string" />
              <xsd:element name="memStatno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemStatWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemStatWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MemTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="dvdCode" nillable="true" type="xsd:string" />
              <xsd:element name="hasHistory" nillable="true" type="xsd:string" />
              <xsd:element name="memType" nillable="true" type="xsd:string" />
              <xsd:element name="memTypeCat" nillable="true" type="xsd:string" />
              <xsd:element name="memTypeDesc" nillable="true" type="xsd:string" />
              <xsd:element name="memTypeLabel" nillable="true" type="xsd:string" />
              <xsd:element name="memTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMemTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:MemTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelRuleWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="attrRecnoLeft" type="xsd:int" />
              <xsd:element name="attrRecnoRight" type="xsd:int" />
              <xsd:element name="fldNameLeft" nillable="true" type="xsd:string" />
              <xsd:element name="fldNameRight" nillable="true" type="xsd:string" />
              <xsd:element name="isRefLeft" nillable="true" type="xsd:string" />
              <xsd:element name="isRefRight" nillable="true" type="xsd:string" />
              <xsd:element name="relRuleSeqno" type="xsd:int" />
              <xsd:element name="relTypeno" type="xsd:int" />
              <xsd:element name="srcRecnoLeft" type="xsd:int" />
              <xsd:element name="srcRecnoRight" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelRuleWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelRuleWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelSegAttrWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="attrCode" nillable="true" type="xsd:string" />
              <xsd:element name="attrDesc" nillable="true" type="xsd:string" />
              <xsd:element name="attrLabel" nillable="true" type="xsd:string" />
              <xsd:element name="attrName" nillable="true" type="xsd:string" />
              <xsd:element name="nsActive" type="xsd:short" />
              <xsd:element name="nsExists" type="xsd:short" />
              <xsd:element name="relAttrRecno" type="xsd:int" />
              <xsd:element name="relTypeno" type="xsd:int" />
              <xsd:element name="segCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelSegAttrWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelSegAttrWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="entTypenoLeft" type="xsd:int" />
              <xsd:element name="entTypenoRight" type="xsd:int" />
              <xsd:element name="hasHistory" nillable="true" type="xsd:string" />
              <xsd:element name="isDirected" nillable="true" type="xsd:string" />
              <xsd:element name="isImplicit" nillable="true" type="xsd:string" />
              <xsd:element name="multiplicity" nillable="true" type="xsd:string" />
              <xsd:element name="relEngFlag" nillable="true" type="xsd:string" />
              <xsd:element name="relName" nillable="true" type="xsd:string" />
              <xsd:element name="relType" nillable="true" type="xsd:string" />
              <xsd:element name="relTypeno" type="xsd:int" />
              <xsd:element name="relUsrFlag" nillable="true" type="xsd:string" />
              <xsd:element name="requiredHierarchy" nillable="true" type="xsd:string" />
              <xsd:element name="requiredLeft" nillable="true" type="xsd:string" />
              <xsd:element name="requiredRight" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SegAttrWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="adtRole" type="xsd:int" />
              <xsd:element name="attrCode" nillable="true" type="xsd:string" />
              <xsd:element name="attrDesc" nillable="true" type="xsd:string" />
              <xsd:element name="attrLabel" nillable="true" type="xsd:string" />
              <xsd:element name="attrName" nillable="true" type="xsd:string" />
              <xsd:element name="attrRecno" type="xsd:int" />
              <xsd:element name="edtCode" nillable="true" type="xsd:string" />
              <xsd:element name="isVirtual" nillable="true" type="xsd:string" />
              <xsd:element name="memTypeno" type="xsd:int" />
              <xsd:element name="msFilter" nillable="true" type="xsd:string" />
              <xsd:element name="nsActive" type="xsd:short" />
              <xsd:element name="nsExists" type="xsd:short" />
              <xsd:element name="segCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSegAttrWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SegAttrWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SegHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="engineOnly" nillable="true" type="xsd:string" />
              <xsd:element name="hasAttr" nillable="true" type="xsd:string" />
              <xsd:element name="hasHistory" nillable="true" type="xsd:string" />
              <xsd:element name="objCode" nillable="true" type="xsd:string" />
              <xsd:element name="segCode" nillable="true" type="xsd:string" />
              <xsd:element name="segName" nillable="true" type="xsd:string" />
              <xsd:element name="segRecno" type="xsd:int" />
              <xsd:element name="segVerno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSegHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SegHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SegXfldWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="fldLabel" nillable="true" type="xsd:string" />
              <xsd:element name="fldLength" type="xsd:int" />
              <xsd:element name="fldName" nillable="true" type="xsd:string" />
              <xsd:element name="fldSeqno" type="xsd:int" />
              <xsd:element name="fldType" nillable="true" type="xsd:string" />
              <xsd:element name="isPkey" nillable="true" type="xsd:string" />
              <xsd:element name="isRequired" nillable="true" type="xsd:string" />
              <xsd:element name="isVirtual" nillable="true" type="xsd:string" />
              <xsd:element name="segCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSegXfldWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SegXfldWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SeqGenWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="colName" nillable="true" type="xsd:string" />
              <xsd:element name="seqIncr" type="xsd:int" />
              <xsd:element name="seqName" nillable="true" type="xsd:string" />
              <xsd:element name="seqNum" type="xsd:long" />
              <xsd:element name="tabName" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSeqGenWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SeqGenWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SrcAttrWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="attrRecno" type="xsd:int" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSrcAttrWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SrcAttrWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SrcHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="defEntPrior" type="xsd:short" />
              <xsd:element name="isVirtual" nillable="true" type="xsd:string" />
              <xsd:element name="maxLen" type="xsd:int" />
              <xsd:element name="memTypeno" type="xsd:int" />
              <xsd:element name="minLen" type="xsd:int" />
              <xsd:element name="phyCode" nillable="true" type="xsd:string" />
              <xsd:element name="poCmpCode" nillable="true" type="xsd:string" />
              <xsd:element name="poScore" type="xsd:short" />
              <xsd:element name="riCheck" nillable="true" type="xsd:string" />
              <xsd:element name="srcCode" nillable="true" type="xsd:string" />
              <xsd:element name="srcName" nillable="true" type="xsd:string" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="srcType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSrcHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SrcHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SrcXentWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="isTrusted" nillable="true" type="xsd:string" />
              <xsd:element name="srcPrior" type="xsd:int" />
              <xsd:element name="srcRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSrcXentWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SrcXentWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SrcXsrcWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="alScore" type="xsd:short" />
              <xsd:element name="crScore" type="xsd:short" />
              <xsd:element name="entTypeno" type="xsd:int" />
              <xsd:element name="srcRecno1" type="xsd:int" />
              <xsd:element name="srcRecno2" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSrcXsrcWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SrcXsrcWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StdFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxArgs" type="xsd:short" />
              <xsd:element name="maxFlds" type="xsd:short" />
              <xsd:element name="minArgs" type="xsd:short" />
              <xsd:element name="minFlds" type="xsd:short" />
              <xsd:element name="stdDoneName" nillable="true" type="xsd:string" />
              <xsd:element name="stdFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="stdFuncDesc" nillable="true" type="xsd:string" />
              <xsd:element name="stdFuncName" nillable="true" type="xsd:string" />
              <xsd:element name="stdInitName" nillable="true" type="xsd:string" />
              <xsd:element name="stdType1" nillable="true" type="xsd:string" />
              <xsd:element name="stdType2" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStdFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StdFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StdTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="stdType" nillable="true" type="xsd:string" />
              <xsd:element name="stdTypeDesc" nillable="true" type="xsd:string" />
              <xsd:element name="stdTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStdTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StdTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrAnonWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrAnonWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrAnonWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrCmapWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strIdxno" type="xsd:int" />
              <xsd:element name="strVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrCmapWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrCmapWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrEditWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="inpStrVal" nillable="true" type="xsd:string" />
              <xsd:element name="outStrVal" nillable="true" type="xsd:string" />
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrEditWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrEditWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrEquiWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strVal1" nillable="true" type="xsd:string" />
              <xsd:element name="strVal2" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrEquiWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrEquiWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrFreqWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="freqVal" type="xsd:int" />
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrFreqWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrFreqWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="freqTot" type="xsd:int" />
              <xsd:element name="maxLen" type="xsd:int" />
              <xsd:element name="minLen" type="xsd:int" />
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strDesc" nillable="true" type="xsd:string" />
              <xsd:element name="strName" nillable="true" type="xsd:string" />
              <xsd:element name="strType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrNbktWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="bktVal" nillable="true" type="xsd:string" />
              <xsd:element name="numVal" type="xsd:int" />
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrNbktWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrNbktWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrSbktWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="bktVal" nillable="true" type="xsd:string" />
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrSbktWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrSbktWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strType" nillable="true" type="xsd:string" />
              <xsd:element name="strTypeDesc" nillable="true" type="xsd:string" />
              <xsd:element name="strTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrWordWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strCode" nillable="true" type="xsd:string" />
              <xsd:element name="strStd" nillable="true" type="xsd:string" />
              <xsd:element name="strVal" nillable="true" type="xsd:string" />
              <xsd:element name="wordType" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrWordWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrWordWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StrXstrWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strCode1" nillable="true" type="xsd:string" />
              <xsd:element name="strCode2" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStrXstrWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:StrXstrWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SysKeyWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="keyName" nillable="true" type="xsd:string" />
              <xsd:element name="keyVal" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSysKeyWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SysKeyWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SysPropWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="propName" nillable="true" type="xsd:string" />
              <xsd:element name="propVal" nillable="true" type="xsd:string" />
              <xsd:element name="segRecno" type="xsd:int" />
              <xsd:element name="theRecno" type="xsd:long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSysPropWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SysPropWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TskStatWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="isDeletable" nillable="true" type="xsd:string" />
              <xsd:element name="isResolved" nillable="true" type="xsd:string" />
              <xsd:element name="isUpdatable" nillable="true" type="xsd:string" />
              <xsd:element name="tskStat" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatCat" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatLabel" nillable="true" type="xsd:string" />
              <xsd:element name="tskStatno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTskStatWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:TskStatWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TskTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="expDays" type="xsd:short" />
              <xsd:element name="isContent" nillable="true" type="xsd:string" />
              <xsd:element name="isLinking" nillable="true" type="xsd:string" />
              <xsd:element name="tskKind" nillable="true" type="xsd:string" />
              <xsd:element name="tskType" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeCat" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeLabel" nillable="true" type="xsd:string" />
              <xsd:element name="tskTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTskTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:TskTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UsrHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="isExternal" nillable="true" type="xsd:string" />
              <xsd:element name="lastLogin" nillable="true" type="xsd:string" />
              <xsd:element name="usrLogin" nillable="true" type="xsd:string" />
              <xsd:element name="usrPass" nillable="true" type="xsd:string" />
              <xsd:element name="usrRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUsrHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:UsrHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Wgt1DimWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtIdxno" type="xsd:short" />
              <xsd:element name="wgtVal" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgt1DimWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Wgt1DimWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Wgt2DimWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtIdxno" type="xsd:short" />
              <xsd:element name="wgtVal0" type="xsd:int" />
              <xsd:element name="wgtVal1" type="xsd:int" />
              <xsd:element name="wgtVal10" type="xsd:int" />
              <xsd:element name="wgtVal11" type="xsd:int" />
              <xsd:element name="wgtVal12" type="xsd:int" />
              <xsd:element name="wgtVal13" type="xsd:int" />
              <xsd:element name="wgtVal14" type="xsd:int" />
              <xsd:element name="wgtVal15" type="xsd:int" />
              <xsd:element name="wgtVal2" type="xsd:int" />
              <xsd:element name="wgtVal3" type="xsd:int" />
              <xsd:element name="wgtVal4" type="xsd:int" />
              <xsd:element name="wgtVal5" type="xsd:int" />
              <xsd:element name="wgtVal6" type="xsd:int" />
              <xsd:element name="wgtVal7" type="xsd:int" />
              <xsd:element name="wgtVal8" type="xsd:int" />
              <xsd:element name="wgtVal9" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgt2DimWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Wgt2DimWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Wgt3DimWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtIdx1" type="xsd:short" />
              <xsd:element name="wgtIdx2" type="xsd:short" />
              <xsd:element name="wgtVal0" type="xsd:int" />
              <xsd:element name="wgtVal1" type="xsd:int" />
              <xsd:element name="wgtVal10" type="xsd:int" />
              <xsd:element name="wgtVal11" type="xsd:int" />
              <xsd:element name="wgtVal12" type="xsd:int" />
              <xsd:element name="wgtVal13" type="xsd:int" />
              <xsd:element name="wgtVal14" type="xsd:int" />
              <xsd:element name="wgtVal15" type="xsd:int" />
              <xsd:element name="wgtVal2" type="xsd:int" />
              <xsd:element name="wgtVal3" type="xsd:int" />
              <xsd:element name="wgtVal4" type="xsd:int" />
              <xsd:element name="wgtVal5" type="xsd:int" />
              <xsd:element name="wgtVal6" type="xsd:int" />
              <xsd:element name="wgtVal7" type="xsd:int" />
              <xsd:element name="wgtVal8" type="xsd:int" />
              <xsd:element name="wgtVal9" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgt3DimWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Wgt3DimWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Wgt4DimWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtIdx1" type="xsd:short" />
              <xsd:element name="wgtIdx2" type="xsd:short" />
              <xsd:element name="wgtIdx3" type="xsd:short" />
              <xsd:element name="wgtVal0" type="xsd:int" />
              <xsd:element name="wgtVal1" type="xsd:int" />
              <xsd:element name="wgtVal10" type="xsd:int" />
              <xsd:element name="wgtVal11" type="xsd:int" />
              <xsd:element name="wgtVal12" type="xsd:int" />
              <xsd:element name="wgtVal13" type="xsd:int" />
              <xsd:element name="wgtVal14" type="xsd:int" />
              <xsd:element name="wgtVal15" type="xsd:int" />
              <xsd:element name="wgtVal2" type="xsd:int" />
              <xsd:element name="wgtVal3" type="xsd:int" />
              <xsd:element name="wgtVal4" type="xsd:int" />
              <xsd:element name="wgtVal5" type="xsd:int" />
              <xsd:element name="wgtVal6" type="xsd:int" />
              <xsd:element name="wgtVal7" type="xsd:int" />
              <xsd:element name="wgtVal8" type="xsd:int" />
              <xsd:element name="wgtVal9" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgt4DimWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Wgt4DimWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WgtFuncWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="libCode" nillable="true" type="xsd:string" />
              <xsd:element name="maxArgs" type="xsd:short" />
              <xsd:element name="minArgs" type="xsd:short" />
              <xsd:element name="wgtDoneName" nillable="true" type="xsd:string" />
              <xsd:element name="wgtFuncCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtFuncDesc" nillable="true" type="xsd:string" />
              <xsd:element name="wgtFuncName" nillable="true" type="xsd:string" />
              <xsd:element name="wgtInitName" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgtFuncWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:WgtFuncWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WgtHeadWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtName" nillable="true" type="xsd:string" />
              <xsd:element name="wgtType" nillable="true" type="xsd:string" />
              <xsd:element name="max1dim" type="xsd:short" />
              <xsd:element name="max2dim" type="xsd:short" />
              <xsd:element name="max3dim" type="xsd:short" />
              <xsd:element name="max4dim" type="xsd:short" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgtHeadWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:WgtHeadWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WgtNvalWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="numVal" type="xsd:int" />
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtVal" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgtNvalWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:WgtNvalWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WgtSvalWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="strVal" nillable="true" type="xsd:string" />
              <xsd:element name="wgtCode" nillable="true" type="xsd:string" />
              <xsd:element name="wgtVal" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgtSvalWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:WgtSvalWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WgtTypeWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtType" nillable="true" type="xsd:string" />
              <xsd:element name="wgtTypeDesc" nillable="true" type="xsd:string" />
              <xsd:element name="wgtTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgtTypeWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:WgtTypeWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WgtXwgtWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:DicRowWs">
            <xsd:sequence>
              <xsd:element name="wgtCode1" nillable="true" type="xsd:string" />
              <xsd:element name="wgtCode2" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWgtXwgtWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:WgtXwgtWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Dictionary">
        <xsd:sequence>
          <xsd:element name="appData" nillable="true" type="impl:ArrayOfAppDataWs" />
          <xsd:element name="appHead" nillable="true" type="impl:ArrayOfAppHeadWs" />
          <xsd:element name="appProp" nillable="true" type="impl:ArrayOfAppPropWs" />
          <xsd:element name="bktFunc" nillable="true" type="impl:ArrayOfBktFuncWs" />
          <xsd:element name="bktXgen" nillable="true" type="impl:ArrayOfBktXgenWs" />
          <xsd:element name="cmpFunc" nillable="true" type="impl:ArrayOfCmpFuncWs" />
          <xsd:element name="cmpHead" nillable="true" type="impl:ArrayOfCmpHeadWs" />
          <xsd:element name="cmpSpec" nillable="true" type="impl:ArrayOfCmpSpecWs" />
          <xsd:element name="cvwFunc" nillable="true" type="impl:ArrayOfCvwFuncWs" />
          <xsd:element name="cvwHead" nillable="true" type="impl:ArrayOfCvwHeadWs" />
          <xsd:element name="cvwXseg" nillable="true" type="impl:ArrayOfCvwXsegWs" />
          <xsd:element name="dvdHead" nillable="true" type="impl:ArrayOfDvdHeadWs" />
          <xsd:element name="dvdXbkt" nillable="true" type="impl:ArrayOfDvdXbktWs" />
          <xsd:element name="dvdXcmp" nillable="true" type="impl:ArrayOfDvdXcmpWs" />
          <xsd:element name="dvdXqry" nillable="true" type="impl:ArrayOfDvdXqryWs" />
          <xsd:element name="dvdXstd" nillable="true" type="impl:ArrayOfDvdXstdWs" />
          <xsd:element name="dvdYbkt" nillable="true" type="impl:ArrayOfDvdYbktWs" />
          <xsd:element name="edtElem" nillable="true" type="impl:ArrayOfEdtElemWs" />
          <xsd:element name="edtHead" nillable="true" type="impl:ArrayOfEdtHeadWs" />
          <xsd:element name="eiaStat" nillable="true" type="impl:ArrayOfEiaStatWs" />
          <xsd:element name="eiaType" nillable="true" type="impl:ArrayOfEiaTypeWs" />
          <xsd:element name="entType" nillable="true" type="impl:ArrayOfEntTypeWs" />
          <xsd:element name="evtType" nillable="true" type="impl:ArrayOfEvtTypeWs" />
          <xsd:element name="extFunc" nillable="true" type="impl:ArrayOfExtFuncWs" />
          <xsd:element name="genFunc" nillable="true" type="impl:ArrayOfGenFuncWs" />
          <xsd:element name="grpHead" nillable="true" type="impl:ArrayOfGrpHeadWs" />
          <xsd:element name="grpXcvw" nillable="true" type="impl:ArrayOfGrpXcvwWs" />
          <xsd:element name="grpXixn" nillable="true" type="impl:ArrayOfGrpXixnWs" />
          <xsd:element name="grpXseg" nillable="true" type="impl:ArrayOfGrpXsegWs" />
          <xsd:element name="handler" nillable="true" type="impl:ArrayOfHandlerWs" />
          <xsd:element name="ixnHead" nillable="true" type="impl:ArrayOfIxnHeadWs" />
          <xsd:element name="libHead" nillable="true" type="impl:ArrayOfLibHeadWs" />
          <xsd:element name="memStat" nillable="true" type="impl:ArrayOfMemStatWs" />
          <xsd:element name="memType" nillable="true" type="impl:ArrayOfMemTypeWs" />
          <xsd:element name="relRule" nillable="true" type="impl:ArrayOfRelRuleWs" />
          <xsd:element name="relSegAttr" nillable="true" type="impl:ArrayOfRelSegAttrWs" />
          <xsd:element name="relType" nillable="true" type="impl:ArrayOfRelTypeWs" />
          <xsd:element name="segAttr" nillable="true" type="impl:ArrayOfSegAttrWs" />
          <xsd:element name="segHead" nillable="true" type="impl:ArrayOfSegHeadWs" />
          <xsd:element name="segXfld" nillable="true" type="impl:ArrayOfSegXfldWs" />
          <xsd:element name="seqGen" nillable="true" type="impl:ArrayOfSeqGenWs" />
          <xsd:element name="srcAttr" nillable="true" type="impl:ArrayOfSrcAttrWs" />
          <xsd:element name="srcHead" nillable="true" type="impl:ArrayOfSrcHeadWs" />
          <xsd:element name="srcXent" nillable="true" type="impl:ArrayOfSrcXentWs" />
          <xsd:element name="srcXsrc" nillable="true" type="impl:ArrayOfSrcXsrcWs" />
          <xsd:element name="stdFunc" nillable="true" type="impl:ArrayOfStdFuncWs" />
          <xsd:element name="stdType" nillable="true" type="impl:ArrayOfStdTypeWs" />
          <xsd:element name="strAnon" nillable="true" type="impl:ArrayOfStrAnonWs" />
          <xsd:element name="strCmap" nillable="true" type="impl:ArrayOfStrCmapWs" />
          <xsd:element name="strEdit" nillable="true" type="impl:ArrayOfStrEditWs" />
          <xsd:element name="strEqui" nillable="true" type="impl:ArrayOfStrEquiWs" />
          <xsd:element name="strFreq" nillable="true" type="impl:ArrayOfStrFreqWs" />
          <xsd:element name="strHead" nillable="true" type="impl:ArrayOfStrHeadWs" />
          <xsd:element name="strNbkt" nillable="true" type="impl:ArrayOfStrNbktWs" />
          <xsd:element name="strSbkt" nillable="true" type="impl:ArrayOfStrSbktWs" />
          <xsd:element name="strType" nillable="true" type="impl:ArrayOfStrTypeWs" />
          <xsd:element name="strWord" nillable="true" type="impl:ArrayOfStrWordWs" />
          <xsd:element name="strXstr" nillable="true" type="impl:ArrayOfStrXstrWs" />
          <xsd:element name="sysKey" nillable="true" type="impl:ArrayOfSysKeyWs" />
          <xsd:element name="sysProp" nillable="true" type="impl:ArrayOfSysPropWs" />
          <xsd:element name="tskStat" nillable="true" type="impl:ArrayOfTskStatWs" />
          <xsd:element name="tskType" nillable="true" type="impl:ArrayOfTskTypeWs" />
          <xsd:element name="usrHead" nillable="true" type="impl:ArrayOfUsrHeadWs" />
          <xsd:element name="wgt1Dim" nillable="true" type="impl:ArrayOfWgt1DimWs" />
          <xsd:element name="wgt2Dim" nillable="true" type="impl:ArrayOfWgt2DimWs" />
          <xsd:element name="wgt3Dim" nillable="true" type="impl:ArrayOfWgt3DimWs" />
          <xsd:element name="wgt4Dim" nillable="true" type="impl:ArrayOfWgt4DimWs" />
          <xsd:element name="wgtFunc" nillable="true" type="impl:ArrayOfWgtFuncWs" />
          <xsd:element name="wgtHead" nillable="true" type="impl:ArrayOfWgtHeadWs" />
          <xsd:element name="wgtNval" nillable="true" type="impl:ArrayOfWgtNvalWs" />
          <xsd:element name="wgtSval" nillable="true" type="impl:ArrayOfWgtSvalWs" />
          <xsd:element name="wgtType" nillable="true" type="impl:ArrayOfWgtTypeWs" />
          <xsd:element name="wgtXwgt" nillable="true" type="impl:ArrayOfWgtXwgtWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDictionary">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Dictionary" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DictionaryPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="dictionary" nillable="true" type="impl:Dictionary" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SegmentDefGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="objCodeFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="FldDefWs">
        <xsd:sequence>
          <xsd:element name="fldName" nillable="true" type="xsd:string" />
          <xsd:element name="fldOffset" type="xsd:int" />
          <xsd:element name="fldSize" type="xsd:int" />
          <xsd:element name="fldType" nillable="true" type="xsd:string" />
          <xsd:element name="isKey" type="xsd:boolean" />
          <xsd:element name="isNonDB" type="xsd:boolean" />
          <xsd:element name="isNullOk" type="xsd:boolean" />
          <xsd:element name="isSeqNum" type="xsd:boolean" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFldDefWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:FldDefWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SegDefWs">
        <xsd:sequence>
          <xsd:element name="extCode" nillable="true" type="xsd:string" />
          <xsd:element name="fldDef" nillable="true" type="impl:ArrayOfFldDefWs" />
          <xsd:element name="objCode" nillable="true" type="xsd:string" />
          <xsd:element name="objRecno" type="xsd:long" />
          <xsd:element name="segCode" nillable="true" type="xsd:string" />
          <xsd:element name="segRecno" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSegDefWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:SegDefWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UserPasswordPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="newUserPassword" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="UserInfoGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GroupInfoGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="grpName" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AppInfoGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="appName" nillable="true" type="xsd:string" />
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NetInfoGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EngInfoGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="recStatFilter" nillable="true" type="xsd:string" />
              <xsd:element name="segCodeFilter" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EngInfoPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="alert" type="xsd:boolean" />
              <xsd:element name="audit" type="xsd:boolean" />
              <xsd:element name="dbSql" type="xsd:boolean" />
              <xsd:element name="debug" type="xsd:boolean" />
              <xsd:element name="timer" type="xsd:boolean" />
              <xsd:element name="trace" type="xsd:boolean" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="relLinknos" nillable="true" type="impl:ArrayOf_xsd_long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RowBeanWs" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:SegDefBeanWs">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AuditableBeanWs" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:RowBeanWs">
            <xsd:sequence>
              <xsd:element name="caudRecno" type="xsd:long" />
              <xsd:element name="maudRecno" type="xsd:long" />
              <xsd:element name="recCtime" nillable="true" type="xsd:string" />
              <xsd:element name="recMtime" nillable="true" type="xsd:string" />
              <xsd:element name="srcFtime" nillable="true" type="xsd:string" />
              <xsd:element name="srcLtime" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Field">
        <xsd:sequence>
          <xsd:element name="fldName" nillable="true" type="xsd:string" />
          <xsd:element name="fldType" nillable="true" type="xsd:string" />
          <xsd:element name="fldValue" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfField">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:Field" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelAttrBeanWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:AuditableBeanWs">
            <xsd:sequence>
              <xsd:element name="fields" nillable="true" type="impl:ArrayOfField" />
              <xsd:element name="relAttrCode" nillable="true" type="xsd:string" />
              <xsd:element name="relAttrRecno" type="xsd:int" />
              <xsd:element name="relLinkno" type="xsd:long" />
              <xsd:element name="relSeqno" type="xsd:int" />
              <xsd:element name="rowInd" nillable="true" type="xsd:string" />
              <xsd:element name="segCode" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelAttrBeanWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelAttrBeanWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelLinkWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:AuditableBeanWs">
            <xsd:sequence>
              <xsd:element name="entRecnoLeft" type="xsd:long" />
              <xsd:element name="entRecnoRight" type="xsd:long" />
              <xsd:element name="recStat" nillable="true" type="xsd:string" />
              <xsd:element name="relAttrBeans" nillable="true" type="impl:ArrayOfRelAttrBeanWs" />
              <xsd:element name="relFlag" nillable="true" type="xsd:string" />
              <xsd:element name="relLinkno" type="xsd:long" />
              <xsd:element name="relSeqno" type="xsd:int" />
              <xsd:element name="relTypeno" type="xsd:int" />
              <xsd:element name="ruleRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelLinkWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelLinkWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelationshipSearchRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="dirType" nillable="true" type="xsd:string" />
              <xsd:element name="entRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
              <xsd:element name="relTypeno" nillable="true" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipSearchMapEntry">
        <xsd:sequence>
          <xsd:element name="entRecno" nillable="true" type="xsd:long" />
          <xsd:element name="relLinks" nillable="true" type="impl:ArrayOfRelLinkWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelationshipSearchMapEntry">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelationshipSearchMapEntry" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelationshipSearchCountRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="dirType" nillable="true" type="xsd:string" />
              <xsd:element name="entRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
              <xsd:element name="relTypeno" nillable="true" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipSearchCountMapEntry">
        <xsd:sequence>
          <xsd:element name="count" nillable="true" type="xsd:long" />
          <xsd:element name="entRecno" nillable="true" type="xsd:long" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelationshipSearchCountMapEntry">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelationshipSearchCountMapEntry" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelationshipPutRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="relLinks" nillable="true" type="impl:ArrayOfRelLinkWs" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipDeleteRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="relLinknos" nillable="true" type="impl:ArrayOf_xsd_long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipPathToRootRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="entRecno" type="xsd:long" />
              <xsd:element name="relTypeno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipTaskGetRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="tskRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelXtskWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:AuditableBeanWs">
            <xsd:sequence>
              <xsd:element name="recno" type="xsd:long" />
              <xsd:element name="relTypeno" type="xsd:int" />
              <xsd:element name="side" nillable="true" type="xsd:string" />
              <xsd:element name="tskRecno" type="xsd:long" />
              <xsd:element name="tskStatno" type="xsd:int" />
              <xsd:element name="tskTypeno" type="xsd:int" />
              <xsd:element name="usrRecno" type="xsd:int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRelXtskWs">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="impl:RelXtskWs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GenericBeanWs" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:BeanWs">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOf_xsd_int">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RelXtskCriteriaWs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:GenericBeanWs">
            <xsd:sequence>
              <xsd:element name="entRecno" type="xsd:long" />
              <xsd:element name="entType" nillable="true" type="xsd:string" />
              <xsd:element name="keyType" nillable="true" type="xsd:string" />
              <xsd:element name="memIdnum" nillable="true" type="xsd:string" />
              <xsd:element name="memRecno" type="xsd:long" />
              <xsd:element name="recCtimeBefore" nillable="true" type="xsd:dateTime" />
              <xsd:element name="recCtimeSince" nillable="true" type="xsd:dateTime" />
              <xsd:element name="relTypenos" nillable="true" type="impl:ArrayOf_xsd_int" />
              <xsd:element name="srcRecno" type="xsd:int" />
              <xsd:element name="tskStatnos" nillable="true" type="impl:ArrayOf_xsd_int" />
              <xsd:element name="tskTypenos" nillable="true" type="impl:ArrayOf_xsd_int" />
              <xsd:element name="usrRecnos" nillable="true" type="impl:ArrayOf_xsd_int" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipTaskSearchRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="criteria" nillable="true" type="impl:RelXtskCriteriaWs" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipTaskResolveRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="relXtsks" nillable="true" type="impl:ArrayOfRelXtskWs" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RelationshipTaskDeleteRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="tskRecnos" nillable="true" type="impl:ArrayOf_xsd_long" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GroupsSyncRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GroupsUpdateRequest">
        <xsd:complexContent mixed="false">
          <xsd:extension base="impl:IxnBaseRequest">
            <xsd:sequence>
              <xsd:element name="grpHeads" nillable="true" type="impl:ArrayOfGrpHeadWs" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getRelationshipTasksResponse">
    <wsdl:part name="getRelationshipTasksReturn" type="impl:ArrayOfRelXtskWs" />
  </wsdl:message>
  <wsdl:message name="putEngineInfoResponse">
    <wsdl:part name="putEngineInfoReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="getDictionaryRequest">
    <wsdl:part name="dicGetReq" type="impl:DictionaryGetRequest" />
  </wsdl:message>
  <wsdl:message name="getEngineInfoResponse">
    <wsdl:part name="getEngineInfoReturn" type="impl:ArrayOfDictionary" />
  </wsdl:message>
  <wsdl:message name="getRelationshipsResponse">
    <wsdl:part name="getRelationshipsReturn" type="impl:ArrayOfRelLinkWs" />
  </wsdl:message>
  <wsdl:message name="putDictionaryResponse">
    <wsdl:part name="putDictionaryReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="dropMemberRequest">
    <wsdl:part name="memDropReq" type="impl:MemberDropRequest" />
  </wsdl:message>
  <wsdl:message name="matchMemberFederatedResponse">
    <wsdl:part name="matchMemberFederatedReturn" type="impl:FederatedResult" />
  </wsdl:message>
  <wsdl:message name="getNetworkInfoRequest">
    <wsdl:part name="netGetReq" type="impl:NetInfoGetRequest" />
  </wsdl:message>
  <wsdl:message name="scoreMembersRequest">
    <wsdl:part name="memScoreReq" type="impl:MemberScoreRequest" />
  </wsdl:message>
  <wsdl:message name="getEiaResponse">
    <wsdl:part name="getEiaReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="putMemberResponse">
    <wsdl:part name="putMemberReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="searchMemberFederatedRequest">
    <wsdl:part name="fedSearchReq" type="impl:MemberSearchRequest" />
  </wsdl:message>
  <wsdl:message name="getDictionaryResponse">
    <wsdl:part name="getDictionaryReturn" type="impl:ArrayOfDictionary" />
  </wsdl:message>
  <wsdl:message name="getRelationshipTasksRequest">
    <wsdl:part name="relTaskGetReq" type="impl:RelationshipTaskGetRequest" />
  </wsdl:message>
  <wsdl:message name="undeleteMemberRequest">
    <wsdl:part name="memUndelReq" type="impl:MemberUndeleteRequest" />
  </wsdl:message>
  <wsdl:message name="getMemberResponse">
    <wsdl:part name="getMemberReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="getUserInfoResponse">
    <wsdl:part name="getUserInfoReturn" type="impl:ArrayOfDictionary" />
  </wsdl:message>
  <wsdl:message name="putMemberQualRequest">
    <wsdl:part name="memPutQualReq" type="impl:MemberPutQualRequest" />
  </wsdl:message>
  <wsdl:message name="getGroupInfoResponse">
    <wsdl:part name="getGroupInfoReturn" type="impl:ArrayOfDictionary" />
  </wsdl:message>
  <wsdl:message name="getGroupInfoRequest">
    <wsdl:part name="groupGetReq" type="impl:GroupInfoGetRequest" />
  </wsdl:message>
  <wsdl:message name="searchRelationshipTasksRequest">
    <wsdl:part name="relTaskSearchReq" type="impl:RelationshipTaskSearchRequest" />
  </wsdl:message>
  <wsdl:message name="syncGroupsRequest">
    <wsdl:part name="groupsSyncReq" type="impl:GroupsSyncRequest" />
  </wsdl:message>
  <wsdl:message name="compareMemberResponse">
    <wsdl:part name="compareMemberReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="searchMemberResponse">
    <wsdl:part name="searchMemberReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="searchRelationshipCountsResponse">
    <wsdl:part name="searchRelationshipCountsReturn" type="impl:ArrayOfRelationshipSearchCountMapEntry" />
  </wsdl:message>
  <wsdl:message name="deleteRelationshipTasksRequest">
    <wsdl:part name="relTaskDeleteReq" type="impl:RelationshipTaskDeleteRequest" />
  </wsdl:message>
  <wsdl:message name="putMemberRequest">
    <wsdl:part name="memPutReq" type="impl:MemberPutRequest" />
  </wsdl:message>
  <wsdl:message name="getApplicationInfoResponse">
    <wsdl:part name="getApplicationInfoReturn" type="impl:ArrayOfDictionary" />
  </wsdl:message>
  <wsdl:message name="getRelationshipsRequest">
    <wsdl:part name="relGetReq" type="impl:RelationshipGetRequest" />
  </wsdl:message>
  <wsdl:message name="matchMemberFederatedRequest">
    <wsdl:part name="fedmatchMatchReq" type="impl:MemberMatchRequest" />
  </wsdl:message>
  <wsdl:message name="dropMemberResponse">
    <wsdl:part name="dropMemberReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="putDictionaryRequest">
    <wsdl:part name="dicPutReq" type="impl:DictionaryPutRequest" />
  </wsdl:message>
  <wsdl:message name="putRelationshipsResponse">
    <wsdl:part name="putRelationshipsReturn" type="impl:ArrayOfRelLinkWs" />
  </wsdl:message>
  <wsdl:message name="searchMemberRequest">
    <wsdl:part name="memSrchReq" type="impl:MemberSearchRequest" />
  </wsdl:message>
  <wsdl:message name="searchRelationshipTasksResponse">
    <wsdl:part name="searchRelationshipTasksReturn" type="impl:ArrayOfRelXtskWs" />
  </wsdl:message>
  <wsdl:message name="matchMemberRequest">
    <wsdl:part name="memMatchReq" type="impl:MemberMatchRequest" />
  </wsdl:message>
  <wsdl:message name="mergeMemberResponse">
    <wsdl:part name="mergeMemberReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="updateGroupsRequest">
    <wsdl:part name="groupsUpdateReq" type="impl:GroupsUpdateRequest" />
  </wsdl:message>
  <wsdl:message name="searchRelationshipsResponse">
    <wsdl:part name="searchRelationshipsReturn" type="impl:ArrayOfRelationshipSearchMapEntry" />
  </wsdl:message>
  <wsdl:message name="searchEiaResponse">
    <wsdl:part name="searchEiaReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="putMemberQualResponse">
    <wsdl:part name="putMemberQualReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="postItMemberNoteResponse">
    <wsdl:part name="postItMemberNoteReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="searchEiaRequest">
    <wsdl:part name="eiaSearchReq" type="impl:EiaSearchRequest" />
  </wsdl:message>
  <wsdl:message name="getTaskResponse">
    <wsdl:part name="getTaskReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="getMemberRequest">
    <wsdl:part name="memGetReq" type="impl:MemberGetRequest" />
  </wsdl:message>
  <wsdl:message name="updateGroupsResponse">
    <wsdl:part name="updateGroupsReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="matchMemberResponse">
    <wsdl:part name="matchMemberReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="searchMemberFederatedResponse">
    <wsdl:part name="searchMemberFederatedReturn" type="impl:FederatedResult" />
  </wsdl:message>
  <wsdl:message name="getNetworkInfoResponse">
    <wsdl:part name="getNetworkInfoReturn" type="impl:ArrayOfDictionary" />
  </wsdl:message>
  <wsdl:message name="getSegmentDefRequest">
    <wsdl:part name="segDefReq" type="impl:SegmentDefGetRequest" />
  </wsdl:message>
  <wsdl:message name="getEngineInfoRequest">
    <wsdl:part name="engGetReq" type="impl:EngInfoGetRequest" />
  </wsdl:message>
  <wsdl:message name="getSegmentDefResponse">
    <wsdl:part name="getSegmentDefReturn" type="impl:ArrayOfSegDefWs" />
  </wsdl:message>
  <wsdl:message name="deleteMemberRequest">
    <wsdl:part name="memDelReq" type="impl:MemberDeleteRequest" />
  </wsdl:message>
  <wsdl:message name="deleteRelationshipTasksResponse">
    <wsdl:part name="deleteRelationshipTasksReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="searchTaskResponse">
    <wsdl:part name="searchTaskReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="getRelationshipPathToRootResponse">
    <wsdl:part name="getRelationshipPathToRootReturn" type="impl:ArrayOf_xsd_long" />
  </wsdl:message>
  <wsdl:message name="deleteRelationshipsResponse">
    <wsdl:part name="deleteRelationshipsReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="syncGroupsResponse">
    <wsdl:part name="syncGroupsReturn" type="impl:ArrayOfGrpHeadWs" />
  </wsdl:message>
  <wsdl:message name="compareMemberRequest">
    <wsdl:part name="memCompReq" type="impl:MemberCompareRequest" />
  </wsdl:message>
  <wsdl:message name="getMemberFederatedResponse">
    <wsdl:part name="getMemberFederatedReturn" type="impl:FederatedResult" />
  </wsdl:message>
  <wsdl:message name="putTaskRequest">
    <wsdl:part name="tskPutReq" type="impl:TaskPutRequest" />
  </wsdl:message>
  <wsdl:message name="mergeMemberRequest">
    <wsdl:part name="memMergeReq" type="impl:MemberMergeRequest" />
  </wsdl:message>
  <wsdl:message name="searchAndMatchFederatedRequest">
    <wsdl:part name="fedSearchReq" type="impl:MemberSearchRequest" />
  </wsdl:message>
  <wsdl:message name="putEiaRequest">
    <wsdl:part name="eiaPutReq" type="impl:EiaPutRequest" />
  </wsdl:message>
  <wsdl:message name="getUserInfoRequest">
    <wsdl:part name="userGetReq" type="impl:UserInfoGetRequest" />
  </wsdl:message>
  <wsdl:message name="putRelationshipsRequest">
    <wsdl:part name="relPutReq" type="impl:RelationshipPutRequest" />
  </wsdl:message>
  <wsdl:message name="searchTaskRequest">
    <wsdl:part name="tskSearchReq" type="impl:TaskSearchRequest" />
  </wsdl:message>
  <wsdl:message name="resolveRelationshipTasksRequest">
    <wsdl:part name="relTaskResolveReq" type="impl:RelationshipTaskResolveRequest" />
  </wsdl:message>
  <wsdl:message name="getApplicationInfoRequest">
    <wsdl:part name="appGetReq" type="impl:AppInfoGetRequest" />
  </wsdl:message>
  <wsdl:message name="deleteMemberResponse">
    <wsdl:part name="deleteMemberReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="scoreMembersResponse">
    <wsdl:part name="scoreMembersReturn" type="impl:ArrayOfMember" />
  </wsdl:message>
  <wsdl:message name="getEiaRequest">
    <wsdl:part name="eiaGetReq" type="impl:EiaGetRequest" />
  </wsdl:message>
  <wsdl:message name="resolveRelationshipTasksResponse">
    <wsdl:part name="resolveRelationshipTasksReturn" type="impl:ArrayOfRelXtskWs" />
  </wsdl:message>
  <wsdl:message name="searchRelationshipCountsRequest">
    <wsdl:part name="relSearchCountReq" type="impl:RelationshipSearchCountRequest" />
  </wsdl:message>
  <wsdl:message name="searchAndMatchFederatedResponse">
    <wsdl:part name="searchAndMatchFederatedReturn" type="impl:FederatedResult" />
  </wsdl:message>
  <wsdl:message name="putEiaResponse">
    <wsdl:part name="putEiaReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="putEngineInfoRequest">
    <wsdl:part name="engPutReq" type="impl:EngInfoPutRequest" />
  </wsdl:message>
  <wsdl:message name="putTaskResponse">
    <wsdl:part name="putTaskReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="getTaskRequest">
    <wsdl:part name="tskGetReq" type="impl:TaskGetRequest" />
  </wsdl:message>
  <wsdl:message name="putUserPasswordResponse">
    <wsdl:part name="putUserPasswordReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="unmergeMemberRequest">
    <wsdl:part name="memUnmergeReq" type="impl:MemberUnmergeRequest" />
  </wsdl:message>
  <wsdl:message name="postItMemberNoteRequest">
    <wsdl:part name="memPostItReq" type="impl:MemberPostItRequest" />
  </wsdl:message>
  <wsdl:message name="getMemberFederatedRequest">
    <wsdl:part name="fedGetReq" type="impl:MemberGetRequest" />
  </wsdl:message>
  <wsdl:message name="putUserPasswordRequest">
    <wsdl:part name="pwdPutReq" type="impl:UserPasswordPutRequest" />
  </wsdl:message>
  <wsdl:message name="unmergeMemberResponse">
    <wsdl:part name="unmergeMemberReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:message name="searchRelationshipsRequest">
    <wsdl:part name="relSearchReq" type="impl:RelationshipSearchRequest" />
  </wsdl:message>
  <wsdl:message name="getRelationshipPathToRootRequest">
    <wsdl:part name="relPathToRootReq" type="impl:RelationshipPathToRootRequest" />
  </wsdl:message>
  <wsdl:message name="deleteRelationshipsRequest">
    <wsdl:part name="relDeleteReq" type="impl:RelationshipDeleteRequest" />
  </wsdl:message>
  <wsdl:message name="undeleteMemberResponse">
    <wsdl:part name="undeleteMemberReturn" type="xsd:boolean" />
  </wsdl:message>
  <wsdl:portType name="IdentityHubPort">
    <wsdl:operation name="searchAndMatchFederated" parameterOrder="fedSearchReq">
      <wsdl:input name="searchAndMatchFederatedRequest" message="impl:searchAndMatchFederatedRequest" />
      <wsdl:output name="searchAndMatchFederatedResponse" message="impl:searchAndMatchFederatedResponse" />
    </wsdl:operation>
    <wsdl:operation name="matchMemberFederated" parameterOrder="fedmatchMatchReq">
      <wsdl:input name="matchMemberFederatedRequest" message="impl:matchMemberFederatedRequest" />
      <wsdl:output name="matchMemberFederatedResponse" message="impl:matchMemberFederatedResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchMemberFederated" parameterOrder="fedSearchReq">
      <wsdl:input name="searchMemberFederatedRequest" message="impl:searchMemberFederatedRequest" />
      <wsdl:output name="searchMemberFederatedResponse" message="impl:searchMemberFederatedResponse" />
    </wsdl:operation>
    <wsdl:operation name="getMemberFederated" parameterOrder="fedGetReq">
      <wsdl:input name="getMemberFederatedRequest" message="impl:getMemberFederatedRequest" />
      <wsdl:output name="getMemberFederatedResponse" message="impl:getMemberFederatedResponse" />
    </wsdl:operation>
    <wsdl:operation name="putMember" parameterOrder="memPutReq">
      <wsdl:input name="putMemberRequest" message="impl:putMemberRequest" />
      <wsdl:output name="putMemberResponse" message="impl:putMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="putMemberQual" parameterOrder="memPutQualReq">
      <wsdl:input name="putMemberQualRequest" message="impl:putMemberQualRequest" />
      <wsdl:output name="putMemberQualResponse" message="impl:putMemberQualResponse" />
    </wsdl:operation>
    <wsdl:operation name="getMember" parameterOrder="memGetReq">
      <wsdl:input name="getMemberRequest" message="impl:getMemberRequest" />
      <wsdl:output name="getMemberResponse" message="impl:getMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchMember" parameterOrder="memSrchReq">
      <wsdl:input name="searchMemberRequest" message="impl:searchMemberRequest" />
      <wsdl:output name="searchMemberResponse" message="impl:searchMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="matchMember" parameterOrder="memMatchReq">
      <wsdl:input name="matchMemberRequest" message="impl:matchMemberRequest" />
      <wsdl:output name="matchMemberResponse" message="impl:matchMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="compareMember" parameterOrder="memCompReq">
      <wsdl:input name="compareMemberRequest" message="impl:compareMemberRequest" />
      <wsdl:output name="compareMemberResponse" message="impl:compareMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="deleteMember" parameterOrder="memDelReq">
      <wsdl:input name="deleteMemberRequest" message="impl:deleteMemberRequest" />
      <wsdl:output name="deleteMemberResponse" message="impl:deleteMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="undeleteMember" parameterOrder="memUndelReq">
      <wsdl:input name="undeleteMemberRequest" message="impl:undeleteMemberRequest" />
      <wsdl:output name="undeleteMemberResponse" message="impl:undeleteMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="dropMember" parameterOrder="memDropReq">
      <wsdl:input name="dropMemberRequest" message="impl:dropMemberRequest" />
      <wsdl:output name="dropMemberResponse" message="impl:dropMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="mergeMember" parameterOrder="memMergeReq">
      <wsdl:input name="mergeMemberRequest" message="impl:mergeMemberRequest" />
      <wsdl:output name="mergeMemberResponse" message="impl:mergeMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="unmergeMember" parameterOrder="memUnmergeReq">
      <wsdl:input name="unmergeMemberRequest" message="impl:unmergeMemberRequest" />
      <wsdl:output name="unmergeMemberResponse" message="impl:unmergeMemberResponse" />
    </wsdl:operation>
    <wsdl:operation name="postItMemberNote" parameterOrder="memPostItReq">
      <wsdl:input name="postItMemberNoteRequest" message="impl:postItMemberNoteRequest" />
      <wsdl:output name="postItMemberNoteResponse" message="impl:postItMemberNoteResponse" />
    </wsdl:operation>
    <wsdl:operation name="scoreMembers" parameterOrder="memScoreReq">
      <wsdl:input name="scoreMembersRequest" message="impl:scoreMembersRequest" />
      <wsdl:output name="scoreMembersResponse" message="impl:scoreMembersResponse" />
    </wsdl:operation>
    <wsdl:operation name="getTask" parameterOrder="tskGetReq">
      <wsdl:input name="getTaskRequest" message="impl:getTaskRequest" />
      <wsdl:output name="getTaskResponse" message="impl:getTaskResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchTask" parameterOrder="tskSearchReq">
      <wsdl:input name="searchTaskRequest" message="impl:searchTaskRequest" />
      <wsdl:output name="searchTaskResponse" message="impl:searchTaskResponse" />
    </wsdl:operation>
    <wsdl:operation name="putTask" parameterOrder="tskPutReq">
      <wsdl:input name="putTaskRequest" message="impl:putTaskRequest" />
      <wsdl:output name="putTaskResponse" message="impl:putTaskResponse" />
    </wsdl:operation>
    <wsdl:operation name="getEia" parameterOrder="eiaGetReq">
      <wsdl:input name="getEiaRequest" message="impl:getEiaRequest" />
      <wsdl:output name="getEiaResponse" message="impl:getEiaResponse" />
    </wsdl:operation>
    <wsdl:operation name="putEia" parameterOrder="eiaPutReq">
      <wsdl:input name="putEiaRequest" message="impl:putEiaRequest" />
      <wsdl:output name="putEiaResponse" message="impl:putEiaResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchEia" parameterOrder="eiaSearchReq">
      <wsdl:input name="searchEiaRequest" message="impl:searchEiaRequest" />
      <wsdl:output name="searchEiaResponse" message="impl:searchEiaResponse" />
    </wsdl:operation>
    <wsdl:operation name="getDictionary" parameterOrder="dicGetReq">
      <wsdl:input name="getDictionaryRequest" message="impl:getDictionaryRequest" />
      <wsdl:output name="getDictionaryResponse" message="impl:getDictionaryResponse" />
    </wsdl:operation>
    <wsdl:operation name="putDictionary" parameterOrder="dicPutReq">
      <wsdl:input name="putDictionaryRequest" message="impl:putDictionaryRequest" />
      <wsdl:output name="putDictionaryResponse" message="impl:putDictionaryResponse" />
    </wsdl:operation>
    <wsdl:operation name="getSegmentDef" parameterOrder="segDefReq">
      <wsdl:input name="getSegmentDefRequest" message="impl:getSegmentDefRequest" />
      <wsdl:output name="getSegmentDefResponse" message="impl:getSegmentDefResponse" />
    </wsdl:operation>
    <wsdl:operation name="putUserPassword" parameterOrder="pwdPutReq">
      <wsdl:input name="putUserPasswordRequest" message="impl:putUserPasswordRequest" />
      <wsdl:output name="putUserPasswordResponse" message="impl:putUserPasswordResponse" />
    </wsdl:operation>
    <wsdl:operation name="getUserInfo" parameterOrder="userGetReq">
      <wsdl:input name="getUserInfoRequest" message="impl:getUserInfoRequest" />
      <wsdl:output name="getUserInfoResponse" message="impl:getUserInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="getGroupInfo" parameterOrder="groupGetReq">
      <wsdl:input name="getGroupInfoRequest" message="impl:getGroupInfoRequest" />
      <wsdl:output name="getGroupInfoResponse" message="impl:getGroupInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="getApplicationInfo" parameterOrder="appGetReq">
      <wsdl:input name="getApplicationInfoRequest" message="impl:getApplicationInfoRequest" />
      <wsdl:output name="getApplicationInfoResponse" message="impl:getApplicationInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="getNetworkInfo" parameterOrder="netGetReq">
      <wsdl:input name="getNetworkInfoRequest" message="impl:getNetworkInfoRequest" />
      <wsdl:output name="getNetworkInfoResponse" message="impl:getNetworkInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="getEngineInfo" parameterOrder="engGetReq">
      <wsdl:input name="getEngineInfoRequest" message="impl:getEngineInfoRequest" />
      <wsdl:output name="getEngineInfoResponse" message="impl:getEngineInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="putEngineInfo" parameterOrder="engPutReq">
      <wsdl:input name="putEngineInfoRequest" message="impl:putEngineInfoRequest" />
      <wsdl:output name="putEngineInfoResponse" message="impl:putEngineInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="getRelationships" parameterOrder="relGetReq">
      <wsdl:input name="getRelationshipsRequest" message="impl:getRelationshipsRequest" />
      <wsdl:output name="getRelationshipsResponse" message="impl:getRelationshipsResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchRelationships" parameterOrder="relSearchReq">
      <wsdl:input name="searchRelationshipsRequest" message="impl:searchRelationshipsRequest" />
      <wsdl:output name="searchRelationshipsResponse" message="impl:searchRelationshipsResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchRelationshipCounts" parameterOrder="relSearchCountReq">
      <wsdl:input name="searchRelationshipCountsRequest" message="impl:searchRelationshipCountsRequest" />
      <wsdl:output name="searchRelationshipCountsResponse" message="impl:searchRelationshipCountsResponse" />
    </wsdl:operation>
    <wsdl:operation name="putRelationships" parameterOrder="relPutReq">
      <wsdl:input name="putRelationshipsRequest" message="impl:putRelationshipsRequest" />
      <wsdl:output name="putRelationshipsResponse" message="impl:putRelationshipsResponse" />
    </wsdl:operation>
    <wsdl:operation name="deleteRelationships" parameterOrder="relDeleteReq">
      <wsdl:input name="deleteRelationshipsRequest" message="impl:deleteRelationshipsRequest" />
      <wsdl:output name="deleteRelationshipsResponse" message="impl:deleteRelationshipsResponse" />
    </wsdl:operation>
    <wsdl:operation name="getRelationshipPathToRoot" parameterOrder="relPathToRootReq">
      <wsdl:input name="getRelationshipPathToRootRequest" message="impl:getRelationshipPathToRootRequest" />
      <wsdl:output name="getRelationshipPathToRootResponse" message="impl:getRelationshipPathToRootResponse" />
    </wsdl:operation>
    <wsdl:operation name="getRelationshipTasks" parameterOrder="relTaskGetReq">
      <wsdl:input name="getRelationshipTasksRequest" message="impl:getRelationshipTasksRequest" />
      <wsdl:output name="getRelationshipTasksResponse" message="impl:getRelationshipTasksResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchRelationshipTasks" parameterOrder="relTaskSearchReq">
      <wsdl:input name="searchRelationshipTasksRequest" message="impl:searchRelationshipTasksRequest" />
      <wsdl:output name="searchRelationshipTasksResponse" message="impl:searchRelationshipTasksResponse" />
    </wsdl:operation>
    <wsdl:operation name="resolveRelationshipTasks" parameterOrder="relTaskResolveReq">
      <wsdl:input name="resolveRelationshipTasksRequest" message="impl:resolveRelationshipTasksRequest" />
      <wsdl:output name="resolveRelationshipTasksResponse" message="impl:resolveRelationshipTasksResponse" />
    </wsdl:operation>
    <wsdl:operation name="deleteRelationshipTasks" parameterOrder="relTaskDeleteReq">
      <wsdl:input name="deleteRelationshipTasksRequest" message="impl:deleteRelationshipTasksRequest" />
      <wsdl:output name="deleteRelationshipTasksResponse" message="impl:deleteRelationshipTasksResponse" />
    </wsdl:operation>
    <wsdl:operation name="syncGroups" parameterOrder="groupsSyncReq">
      <wsdl:input name="syncGroupsRequest" message="impl:syncGroupsRequest" />
      <wsdl:output name="syncGroupsResponse" message="impl:syncGroupsResponse" />
    </wsdl:operation>
    <wsdl:operation name="updateGroups" parameterOrder="groupsUpdateReq">
      <wsdl:input name="updateGroupsRequest" message="impl:updateGroupsRequest" />
      <wsdl:output name="updateGroupsResponse" message="impl:updateGroupsResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityHubSoapBinding" type="impl:IdentityHubPort">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <wsdl:operation name="searchAndMatchFederated">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchAndMatchFederatedRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchAndMatchFederatedResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="matchMemberFederated">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="matchMemberFederatedRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="matchMemberFederatedResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchMemberFederated">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchMemberFederatedRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchMemberFederatedResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMemberFederated">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getMemberFederatedRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getMemberFederatedResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putMemberQual">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putMemberQualRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putMemberQualResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="matchMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="matchMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="matchMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="compareMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="compareMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="compareMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="deleteMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="deleteMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="undeleteMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="undeleteMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="undeleteMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="dropMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="dropMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="dropMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="mergeMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="mergeMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="mergeMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unmergeMember">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="unmergeMemberRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="unmergeMemberResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="postItMemberNote">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="postItMemberNoteRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="postItMemberNoteResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="scoreMembers">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="scoreMembersRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="scoreMembersResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTask">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getTaskRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getTaskResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchTask">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchTaskRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchTaskResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putTask">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putTaskRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putTaskResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEia">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getEiaRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getEiaResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putEia">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putEiaRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putEiaResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchEia">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchEiaRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchEiaResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDictionary">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getDictionaryRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getDictionaryResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putDictionary">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putDictionaryRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putDictionaryResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSegmentDef">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getSegmentDefRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getSegmentDefResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putUserPassword">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putUserPasswordRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putUserPasswordResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getUserInfoRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getUserInfoResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getGroupInfoRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getGroupInfoResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getApplicationInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getApplicationInfoRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getApplicationInfoResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNetworkInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getNetworkInfoRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getNetworkInfoResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEngineInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getEngineInfoRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getEngineInfoResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putEngineInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putEngineInfoRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putEngineInfoResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRelationships">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getRelationshipsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getRelationshipsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchRelationships">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchRelationshipsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchRelationshipsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchRelationshipCounts">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchRelationshipCountsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchRelationshipCountsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="putRelationships">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="putRelationshipsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="putRelationshipsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationships">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="deleteRelationshipsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="deleteRelationshipsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRelationshipPathToRoot">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getRelationshipPathToRootRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getRelationshipPathToRootResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRelationshipTasks">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getRelationshipTasksRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="getRelationshipTasksResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchRelationshipTasks">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchRelationshipTasksRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="searchRelationshipTasksResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolveRelationshipTasks">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="resolveRelationshipTasksRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="resolveRelationshipTasksResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationshipTasks">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="deleteRelationshipTasksRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="deleteRelationshipTasksResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="syncGroups">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="syncGroupsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="syncGroupsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateGroups">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="updateGroupsRequest">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:input>
      <wsdl:output name="updateGroupsResponse">
        <wsdlsoap:body use="literal" namespace="urn:bean.initiate.com" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityHubService">
    <wsdl:port name="IdentityHub" binding="impl:IdentityHubSoapBinding">
      <wsdlsoap:address location="http://10.11.67.15:8080/ibminitiatews/services/IdentityHub" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>