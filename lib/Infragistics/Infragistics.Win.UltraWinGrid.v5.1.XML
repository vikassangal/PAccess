<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics.Win.UltraWinGrid.v5.1</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Win.UltraWinGrid.ActivateableGridItemBase">
            <summary>
            Abtract base class for grid items that are activateable
            (rows and cells)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GridItemBase">
            <summary>
            Abstract base class for grid items (cells, rows, columns,
            groups and bands)
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridItemBase.selectedValue">
            <summary>
            The internal selectedValue state of the item.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridItemBase.#ctor">
            <summary>
            constructor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridItemBase.GetUIElement">
            <summary>
            Returns the UIElement associated with the object, in the active scroll region.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body"> The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to a UIElement object residing at specific coordinates.</p>
            <p class="body">The <b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridItemBase.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Returns the UIElement associated with the object, in the scroll region formed by the intersection of the specified row scrolling region and the active column scrolling region.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body"> The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UltraGridUIElement object residing at specific coordinates.</p>
            <p class="body">The <b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            </remarks>		
            <param name="rsr"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridItemBase.GetUIElement(Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Returns the UIElement associated with the object, in the scroll region formed by the intersection of the specified column scrolling region and the active row scrolling region.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body"> The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UltraGridUIElement object residing at specific coordinates.</p>
            <p class="body">The <b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            </remarks>
            <param name="csr"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridItemBase.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Returns the UIElement associated with the object, in the scroll region formed by the specified row and column scrolling regions.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body"> The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UltraGridUIElement object residing at specific coordinates.</p>
            <p class="body">The <b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            </remarks>
            <param name="rsr"></param>
            <param name="csr"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridItemBase.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            An abstract method that should be overridden by derived classes
            to return an associated UI element contained in a RowScrollRegion and a
            ColScrollRegion 
            </summary>
            <param name="rsr">Row scroll region</param>
            <param name="csr">Col scroll region</param>
            <param name="verifyElements">True to the elements to be verified</param>
            <returns>The associated element or null</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Band">
            <summary>
            Returns the Band that the object belongs to, if any. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Band</b> property of an object refers to a specific band in the grid as defined by an Band object. You use the <b>Band</b> property to access the properties of a specified Band object, or to return a reference to the Band object that is associated with the current object.</p>
            <p class="body">Band objects are the foundation of the hierarchical data structure used by UltraWinGrid. Any row or cell in the grid must be accessed through its Band object. Bands are also used to apply consistent formatting and behavior to the rows that they comprise. A Band object is used to display all the data rows from a single level of a data hierarchy. Band objects contain multiple sets of child Row objects that actually display the data of the recordset. All of the rows that are drawn from a single Command in the DataEnvironment make up a band.</p>
            <p class="body">The rows of a band are generally displayed in groups of one more in order to show rows from subsequent bands that are linked to rows in the current band via the structure of the data hierarchy. For example, if a hierarchical recordset has Commands that display Customer, Order and Order Detail data, each one of these Commands maps to its own Band in the UltraWinGrid. The rows in the Customer band will appear separated by any Order data rows that exist for the customers. By the same token, rows in the Order band will be appear separated to make room for Order Detail rows. How this looks depends on the ViewStyle settings selectedValue for the grid, but the concept of visual separation is readily apparent when the UltraWinGrid is used with any hierarchical recordset.</p>
            <p class="body">Although the rows in a band may appear to be separated, they are treated contiguously. When selecting a column in a band, you will see that the cells of that column become selectedValue in all rows for the band, regardless of any intervening rows. Also, it is possible to collapse the hierarchical display so that any children of the rows in the current band are hidden.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Selected">
            <summary>
            Property: Returns true only if all columns are marked as selectedValue
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Activated">
            <summary>
            Property: Returns true only if activated
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Selectable">
            <summary>
            Property: Returns true only if selectable
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Draggable">
            <summary>
            Property: Returns true only if Draggable
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.IsTabStop">
            <summary>
            Property: Returns true only if tab stop
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Infragistics#Shared#ISelectableItem#IsSelected">
            <summary>
            Property for determining if the selectable item is currently selectedValue.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Infragistics#Shared#ISelectableItem#IsSelectable">
            <summary>
            Property for determining if the object is selectable.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridItemBase.Infragistics#Shared#ISelectableItem#IsDraggable">
            <summary>
            Property for determining if the object is draggable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ActivateableGridItemBase.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AddNewBox">
            <summary>
            Returns a reference to the AddNewBox object. This property is read-only 
            at design-time and run-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to an AddNewBox object that can be used to set properties of, and invoke methods on, the AddNew box. You can use this reference to access any of the AddNew box's properties or methods.</p>
            <p class="body">Use the returned reference to show or hide the AddNew box or adjust its or its buttons' appearance.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SpecialBoxBase">
            <summary>
            Returns a reference to the SpecialBoxBase object. This property is read-only 
            at design-time and run-time.
            </summary><remarks><para>This property returns a reference to an SpecialBoxBase
            object that can be used to set properties of, and invoke methods on, 
            the AddNew box. You can use this reference to access any of the AddNew 
            box's properties or methods.</para><para>Use the returned reference to show or 
            hide the AddNew box or adjust its or its buttons' appearance.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerializeAppearance">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResetAppearance">
            <summary>
            Reset button appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerializeHidden">
            <summary>
            Returns true if the hidden property needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResetHidden">
            <summary>
            Set hidden back to true
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerializeBorderStyle">
            <summary>
            Returns true if the Border Style property needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResetBorderStyle">
            <summary>
            Resets the BorderStyle to default
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerializeButtonConnectorStyle">
            <summary>
            Returns true if the Button Connector Style property 
            needs to be serialized (not null)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResetButtonConnectorStyle">
            <summary>
            Resets the Button Connector Style to Solid
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerializeButtonConnectorColor">
            <summary>
            Returns true if the Button Connector Color property needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResetButtonConnectorColor">
            <summary>
            Resets the Button Connector Color to DarkBlue
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResolveAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Resolves all of the add new box's appearance properties
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Resolves selected properties of the add new box's appearance
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.Refresh">
            <summary>
            Refreshes (invalidates the area)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.GetCursor(Infragistics.Win.UltraWinGrid.HeaderUIElement)">
            <summary>
            gets cursor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ShouldSerializePrompt">
            <summary>
            Returns true if the Prompt property needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ResetPrompt">
            <summary>
            Resets the prompt property to this.DefaultPrompt
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ToString">
            <summary>
            Returns a "" string so that property window display nothing 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SpecialBoxBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.Appearance">
            <summary>  
            Property: gets/sets SpecialBoxBase's appearance 
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.HasAppearance">
            <summary>
            Returns true if an appearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.Layout">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not 
            available at design-time.
            </summary><remarks><para>The Hidden property determines whether an object is 
            visible. Hiding an object may have have effects that go beyond simply 
            removing it from view. For example, hiding a band also hides all the rows 
            in that band. Also, changing the Hidden property of an object affects all 
            instances of that object. For example, a hidden column or row is hidden 
            in all scrolling regions.</para><para>There may be instances where the 
            Hidden property cannot be changed. For example, you cannot hide the 
            currently active rowscrollregion or colscrollregion. If you attempt to 
            set the Hidden property of the active rowscrollregion to True, 
            an error will occur: 'The following code will produce an error 
            UltraGrid1.ActiveRowScrollRegion.Hidden = True</para>
            <para>This property is ignored for chaptered columns; that is, columns 
            whose DataType property is set to 136 (DataTypeChapter).</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ButtonConnectorStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.ButtonConnectorColor">
            <summary>
            Determines the color of the lines that will be used to connect the 
            SpecialBoxBase object buttons.
            </summary><remarks>The ButtonConnectorColor property determines the 
            color of the lines used to connect the buttons in the AddNew box. 
            In addition to specifying the color of these lines, you can also set 
            their style using the ButtonConnectorStyle property.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SpecialBoxBase.Prompt">
            <summary>
            Specifies a custom prompt string that will appear in the box.
            </summary><remarks>The AddNew box displays a text message that indicates 
            to the user how to add rows to the desired band. The Prompt property 
            determines the text that will be displayed. At run-time, you can change 
            this property through code to alter the message. This property is not 
            available at design-time.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ShouldSerializeButtonAppearance">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ShouldSerializeStyle">
            <summary>
            Returns true if the Style property needs to be serialized (not null)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ResetStyle">
            <summary>
            Resets Style to its default value (Full).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ShouldSerializeButtonStyle">
            <summary>
            Returns true if the Button Border Style property needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ResetButtonStyle">
            <summary>
            Resets the Button Border Style to default
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ResolveButtonAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Resolves all of the button's appearance properties
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ResolveButtonAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Resolves selected properties of the button's appearance
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.ResetButtonAppearance">
            <summary>
            Resets the button appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.Infragistics#Win#ISupportPresets#GetPresetProperties(Infragistics.Win.PresetType)">
            <summary>
            Returns a list of properties which can be used in a Preset
            </summary>
            <param name="presetType">Determines which type(s) of properties are returned</param>
            <returns>An array of strings indicating property names</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBox.Infragistics#Win#ISupportPresets#GetPresetTargetTypeName">
            <summary>
            Returns the TypeName of the Preset target
            </summary>
            <returns>Returns "AddNewBox"</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBox.Style">
            <summary>
            Returns or sets a value that determines the AddNew box's display style.
            </summary>
            <remarks>
            <p class="body">This property specifies the display style of the AddNew box. When set to 0 (AddNewBoxStyleFull) the full AddNew Box will be displayed, with the arrangement of the buttons corresponding to the the hierarchical relationships of the bands in the grid. When the 1 (AddNewBoxStyleCompact) setting is used, the AddNew Box will be displayed using as little real estate as possible while still maintaining a visually acceptable appearance.</p>
            <p class="body">The following illustations demonstrate the full style of the AddNew Box:</p>
            <p class="body"><div align="center"><img src="addnewbox full.gif" width="437" height="102" alt="Full Style of the AddNew Box" border="0"></img></div></p>
            <p class="body">...and the compact style of the AddNew Box:</p>
            <p class="body"><div align="center"><img src="addnewbox compact.gif" width="437" height="31" alt="Compact Style of the AddNew Box" border="0"></img></div></p>
            <p class="body">Note that in the compact view the AddNew buttons appear in the same horizontal row, regardless of the hierarchical structure. Buttons for sibling bands do not necessarily appear adjacent to one another; if a band has child bands, their AddNew buttons will appear immediately following that of their parent band. For example, "Orders" and "Orders_2" are sibling bands, but because "Orders" has 2 child bands, "Orders_2" does not appear until after the child bands of "Orders". </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBox.ButtonAppearance">
            <summary>
            <see cref="T:Infragistics.Win.Appearance"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBox.ButtonStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBox.HasButtonAppearance">
            <summary>
            Returns true if a button appearance object has been created.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement">
            <summary>
            	Summary description for AddNewBoxUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.AddNewBox)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="addNewBox">Associated <b>AddNewBox</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns null or an object of requested type that relates to the element.
            </summary>
            <param name="type"></param>
            <param name="checkParentElementContexts"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.AddNewBox">
            <summary>
            The AddNewBox object represents the AddNew Box interface for entering new data rows into the grid.
            </summary>
            <remarks>
            <p class="body">When a grid is being used to display a flat recordset, the conventional approach for adding data has been to place an empty row at the bottom of the grid. New data is entered into this row and appended to the data source, then the row reserved for new data entry is cleared and moved down to appear below the newly added row. However, when working with a hierarchical recordset, this metaphor is no longer effective. Multiple bands of data are represented as distinct groups of rows, and which group of rows receives the new data is significant. Simply adding new data to the last row in a band will not position the new record correctly with respect to the band's parent recordset.</p>
            <p class="body">To effectively add new data to a hierarchical recordset, the UltraGrid implements a new interface called the "AddNew Box." The AddNew Box displays one or more buttons that are used to trigger the addition of new data. The number of buttons corresponds to the number of hierarchical bands displayed. Each band has its own AddNew button, and connecting lines link the buttons, illustrating a hierarchical relationship that mirrors that of the data.</p>
            <p class="body">To use the AddNew Box, you first set focus to a row or cell in the band to which you want to add data. You should determine where in the hierarchy you want the record to appear, then select a record that corresponds to that location. You then click the AddNew button for the band you want to contain the new data, and an empty data entry row appears in the band a the point you selected. For example, if you have a Customers/Orders hierarchy and you wanted to add data for a new order, you would first locate the customer to whom the order belonged, select that customer's record (or one of that customer's existing order records) and click the AddNew button for the Orders band. A blank row would appear below any existing orders that were displayed for the customer.</p>
            <p class="body">The AddNewBox object contains properties that control the various attributes of the AddNew Box interface. For example, you can use the <b>Hidden</b> property of the AddNewBox object to selectively display or hide the interface, thus enabling or disabling the user's ability to add new data. You can also use this object to control the appearance of the AddNew buttons, and specify other formatting features.</p>
            <p class="body"><div align="center"><img src="addnew.gif" width="505" height="280" alt="" border="0"></img></div></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">The border style of the AddNew box buttons can be set by the <b>ButtonBorderStyle</b> property.</p>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.AccessibilityInstance">
            <summary>
            Returns the accessible object associated with the element.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> Derived elements that plan to return an accessible object must override 
            the <see cref="P:Infragistics.Win.UltraWinGrid.AddNewBoxUIElement.IsAccessibleElement"/> member.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement">
            <summary>
            Button UIElement that represents a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/> and is used to create a new row in the band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Initializes a new <b>AddNewRowButtonUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="band">Associated <b>Band</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.OnDispose">
            <summary>
            Overriden to unhook ourselves
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.OnMouseHover">
            <summary>
            overridden method called whenever the mouse hovers on the element
            it displays a tooltip for the AddNewRowButton
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.OnMouseLeave">
            <summary>
            Hide tooltip
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.Enabled">
            <summary>
            Overridden method that check's the band's AllowAddNew
            and also if the band has enough context right now to be able to
            add a new row in that band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.Band">
            <summary>
            The UltraGridBand object represents all the rows that occur at a single level of a hierarchical data set. Bands can be expanded or collapsed to display the data in the rows they contain.
            </summary>
            <remarks>
            <p class="body">The UltraGridBand object represents all the records at one level of a hierarchical recordset. Bands are the foundation of hierarchical data in the UltraWinGrid. When bound to a recordset, each band corresponds to a single Command. (A band can also be considered as roughly equivalent to the table or query level of organization within a database.) Although the rows in a band may be visually separated (appearing grouped under the rows of the next higher band in the hierarchy) they are in fact one set of records. In the data hierarchy of the grid, bands come after the grid itself, but before rows and cells.</p>
            <p class="body">There is always at least one UltraGridBand present in the UltraWinGrid, even when it is displaying a single-level (flat) recordset. Most of the properties that apply to the control at the topmost (grid) level also apply to the UltraGridBand object, since the band rather than the control is the primary container object for data. There is also broad support for applying different formatting and behavior attributes to individual bands. Since a band is effectively "a grid within a grid" you may want to have bands be markedly different from one another. For example, one band might display column headers and row selectors for each group of records, while another might display only data cells.</p>
            <p class="body">Bands can be displayed either horizontally or vertically within the grid, depending on the setting of the <b>ViewStyleBand</b> property. You can also hide entire bands from view by setting the <b>Hidden</b> property of the UltraGridBand object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.ButtonStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.WantsMouseHoverNotification">
            <summary>
            Return true if this element wants to be notified when the mouse hovers over it. This property is read-only.
            </summary>
            <remarks>Returns true since add new buttons need MouseHover notifications for showing the tooltips.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.AccessibilityInstance">
            <summary>
            Returns the accessible object associated with the element.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> Derived elements that plan to return an accessible object must override 
            the <see cref="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.IsAccessibleElement"/> member.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.AddNewButtonAccessibleObject">
            <summary>
            Accessible object representing a <see cref="T:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement"/> in the <see cref="T:Infragistics.Win.UltraWinGrid.AddNewBox"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.AddNewButtonAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.AddNewButtonAccessibleObject"/>
            </summary>
            <param name="element">Associated element</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.AddNewButtonAccessibleObject.KeyboardShortcut">
            <summary>
            Gets the shortcut key or access key for the accessible object
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AddNewRowButtonUIElement.AddNewButtonAccessibleObject.Name">
            <summary>
            Returns the name of the accessible object.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridBand">
            <summary>
            An object that represents a set of related columns of data.
            </summary>
            <remarks>
            <p class="body">An UltraGridBand object represents a set of related columns in an <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/>, <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/> or <see cref="T:Infragistics.Win.UltraWinGrid.UltraDropDown"/> control. In the case of flat data there is only 1 band, whereas a grid with hierarchical data will have multiple bands.</p>
            <p></p>
            <p class="body">
            The following sample code shows how to set some UltraGridBand properties.
            </p>
            <p></p>
            <pre>
            Private Sub CheckBox1_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox1.CheckedChanged
            
                Dim band As Infragistics.Win.UltraWinGrid.UltraGridBand
            
                band = Me.UltraGrid1.DisplayLayout.Bands(0)
            
                band.AddButtonCaption = "Customers"
                band.AddButtonToolTipText = "Adds a new Customer record."
                band.AutoPreviewEnabled = False
                band.AutoPreviewField = ""
                band.AutoPreviewIndentation = 15
                band.AutoPreviewMaxLines = 3
                band.ColHeadersVisible = True
                band.ColHeaderLines = 2
                band.HeaderVisible = True
                band.ScrollTipField = "Cust_ID"
                band.Override.BorderStyleRow = Infragistics.Win.UIElementBorderStyle.InsetSoft
            
                band.CardView = True
                band.CardSettings.CaptionField = "Name"
                band.CardSettings.AllowLabelSizing = True
                band.CardSettings.AllowSizing = True
                band.CardSettings.Style = Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels
                band.CardSettings.ShowCaption = True
                band.CardSettings.AutoFit = True
            
            End Sub
            </pre>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.#ctor(System.String,System.Int32)">
            <summary>
            Constructor used during de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ToString">
            <summary>
            Returns the key property
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerialize">
            <summary>
            Returns true if any properties on this object or any of
            its sub objects is set to a non-default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.Reset">
            <summary>
            Resets all properties on this object and all of
            its sub objects to their default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeHeader">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetHeader">
            <summary>
            Resets Header
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeKey">
            <summary>
            Returns true if this property is not set to its default value. <b>ShouldSerializeKey</b> always returns False for the <b>Band</b> object since the band key can never be changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetKey">
            <summary>
            Resets the key to its default value. This method does nothing for the <b>Band</b> object since the band key can never be changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.EnsureProperlyHookedIntoBindingListListChanged">
            <summary>
            Just like the name says, ensures we are properly hooked into the
            BindingList's list changed event.
            The List off the BindingManager is not persistant. It keeps
            changing as the active row in the parent binding manager changes.
            So we need to rehook into the binding list every time it changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.GetOrigin(Infragistics.Win.UltraWinGrid.BandOrigin)">
            <summary>
            Returns the absolute coordinate of the leftmost point on the band, taking into consideration the control's entire virtual area.
            </summary>
            <remarks>
            <p class="body">You can use the <b>GetExtent</b> method to return leftmost point on a band, using the scale mode of the grid's container. The coordinate returned by <b>GetOrigin</b> is relative to the absolute left edge of the grid's virtual area. The grid's virtual area is the total space occupied by the grid's data, independent of any display issues. The size of the virtual area is not dependent on the size of the size of the control, it's container, or the system's display settings. How the grid is scrolled and what portion of the band is currently visible on screen will have no effect on the value returned by this method.</p>
            <p class="body">Note that to get the actual origin of the band in a specific column scrolling region, you must subtract the ColScrollRegion's <b>Position</b> property from the value returned by <b>GetOrigin</b></p>
            </remarks>
            <param name="area">Specifies which area to get the origin of</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.GetOrigin">
            <summary>
            Returns the absolute coordinate of the leftmost point on the band, taking into consideration the control's entire virtual area.
            </summary>
            <remarks>
            <p class="body">You can use the <b>GetExtent</b> method to return leftmost point on a band, using the scale mode of the grid's container. The coordinate returned by <b>GetOrigin</b> is relative to the absolute left edge of the grid's virtual area. The grid's virtual area is the total space occupied by the grid's data, independent of any display issues. The size of the virtual area is not dependent on the size of the size of the control, it's container, or the system's display settings. How the grid is scrolled and what portion of the band is currently visible on screen will have no effect on the value returned by this method.</p>
            <p class="body">Note that to get the actual origin of the band in a specific column scrolling region, you must subtract the ColScrollRegion's <b>Position</b> property from the value returned by <b>GetOrigin</b></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.GetExtent(Infragistics.Win.UltraWinGrid.BandOrigin)">
            <summary>
            Returns the absolute width of the band.
            </summary>
            <remarks>
            <p class="body">You can use the <b>GetExtent</b> method to return the total width of a band, using the scale mode of the grid's container. This method does not take into account how much of the band is visible, the size of the ColScrollRegion, or even how much screen area is available on the system. It simply calculates the total width that would be required to display the band in its entirety, starting with the position you specify.</p>
            </remarks>
            <param name="area">Specifies which area to get the extent of</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.GetExtent">
            <summary>
            Returns the absolute width of the band.
            </summary>
            <remarks>
            <p class="body">You can use the <b>GetExtent</b> method to return the total width of a band, using the scale mode of the grid's container. This method does not take into account how much of the band is visible, the size of the ColScrollRegion, or even how much screen area is available on the system. It simply calculates the total width that would be required to display the band in its entirety.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.LoadFilterValueList(Infragistics.Win.ValueList,Infragistics.Win.UltraWinGrid.HeaderUIElement,System.Boolean)">
            <summary>
            Loads the value list with unique values from appropriate rows
            depending on the RowFilterMode and the value of includeHiddenRows
            (which if true will include hidden rows as well).
            </summary>
            <param name="valueList"></param>
            <param name="headerElement"></param>
            <param name="includeFilteredOutRows"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeSummaryFooterCaption">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetSummaryFooterCaption">
            <summary>
            Resets SummaryFooterCaption property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeSummaries">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetSummaries">
            <summary>
            Resets Summaries property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.AddNew">
            <summary>
            Displays the AddNew row for the band. If the current <b>ActiveRow</b> does not provide enough context, an error occurs.
            </summary>
            <remarks>  
            <p class="body">The <b>AddNew</b> method will display a data entry row for the user to enter data for a new record. When this method is invoked, the AddNew row appears at the bottom of the group of rows (in the current band) that contains the active row. If there is no active row, and the control does not have enough context to determine where the add row should appear, an error occurs.</p>
            <p class="body">If you attempt to invoke the <b>AddNew</b> method on a read-only data source, you will also receive an error.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeColumns">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetColumns">
            <summary>
            Resets the Columns collection for the band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeGroups">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeSortedColumns">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetGroups">
            <summary>
            Resets the Groups collection for the band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeOverride">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetOverride">
            <summary>
            Resets the Override
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeCardSettings">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetCardSettings">
            <summary>
            Resets the card settings 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ClearGroupByColumns">
            <summary>
            Removes all the GroupBy columns, ungrouping the rows in the band.
            </summary>
            <remarks>
            <p class="body">if the band is in GroupBy mode, the rows in the band will appear grouped according to the columns added to the GroupByColumns collection. The user can add columns to this collection through the grid's UI by dragging column headers into the GroupBy box. As columns are added, the rows in the band are dynamically re-grouped. By clearing the contents of the collection, all rows are ungrouped and the GroupBy box is cleared.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeCardView">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetCardView">
            <summary>
            Resets CardView to its default value (false).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeAddButtonCaption">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetAddButtonCaption">
            <summary>
            Resets AddButtoCaption to its default value (null).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeAddButtonToolTipText">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetAddButtonToolTipText">
            <summary>
            Resets AddButtonToolTip Text to its default value (null).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeAutoPreviewField">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetAutoPreviewField">
            <summary>
            Resets AutoPreviewField to its default value (null).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeAutoPreviewEnabled">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetAutoPreviewEnabled">
            <summary>
            Resets AutoPreviewEnabled to its default value (False).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeAutoPreviewIndentation">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetAutoPreviewIndentation">
            <summary>
            Resets AutoPreviewIndentation to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeAutoPreviewMaxLines">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetAutoPreviewMaxLines">
            <summary>
            Resets AutoPreviewMaxLines to its default value (3).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeColHeaderLines">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetColHeaderLines">
            <summary>
            Resets ColumnHeaderLines to its default value (1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeColHeadersVisible">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetColHeadersVisible">
            <summary>
            Resets ColumnHeaderVisible to its default value (True).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeExpandable">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetExpandable">
            <summary>
            Resets Expandable to its default value (True).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeIndentation">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetIndentation">
            <summary>
            Resets Indentation its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeGroupHeaderLines">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetGroupHeaderLines">
            <summary>
            Resets GroupHeaderLines to its default value (1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeGroupHeadersVisible">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetGroupHeadersVisible">
            <summary>
            Resets GroupHeadersVisible to its default value (True).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeHeaderVisible">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetHeaderVisible">
            <summary>
            Resets HeaderVisible to its default value (False).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeHidden">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetHidden">
            <summary>
            Resets Hidden to its default value (False).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeLevelCount">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetLevelCount">
            <summary>
            Resets LevelCount to its default value (1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeScrollTipField">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetScrollTipField">
            <summary>
            Resets ScrollTipField to its default value (null).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.GetFirstVisibleCol(Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            Returns the first visible column in the passed in column scrolling region.
            </summary>
            <remarks>
            <p class="body">Use this method to determine which is the first (leftmost) visible column in a specific column scrolling region.</p>
            </remarks>
            <param name="csr">An existing column scrolling region.</param>
            <param name="includeNonActivateable"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetSortedColumns">
            <summary>
            Resets the sorted column's collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.UnfixAllHeaders">
            <summary>
            Unfixes all the headers in this band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetUseRowLayout">
            <summary>
            Resets UseRowLayout property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetRowLayouts">
            <summary>
            Resets RowLayouts property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetRowLayoutLabelStyle">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.Separate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ResetRowLayoutLabelPosition">
            <summary>
            Resets the RowLayoutLabelPosition property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.LabelPosition.Default"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeUseRowLayout">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeRowLayouts">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeRowLayoutLabelPosition">
            <summary>
            Returns true if the RowLayoutLabelPosition property is set to a value other than the default value of <see cref="F:Infragistics.Win.UltraWinGrid.LabelPosition.Default"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ShouldSerializeRowLayoutLabelStyle">
            <summary>
            Retruns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Header">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.BandHeader"/>
            </summary>
            <remarks>
            Returns the header associated with the band. It contains the Key as it's caption which can be set using <see cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Caption"/>. <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HeaderVisible"/> must be set to true to make the Header visible.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HeaderVisible"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Layout">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/> object that specifies the layout for the band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Key">
            <summary>
            The internally assigned key value for the band. The <b>Key</b> property is read-only for the <b>Band</b> object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ParentBand">
            <summary>
            Returns the parent UltraGridBand object of the current band (if it is a child band) or Null for band 0. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ParentColumn">
            <summary>
            Returns the UltraGridColumn object for the chaptered column in the current band's parent (if the current band is a child band) or Null for band 0. This property is read-only.
            </summary>
            <remarks>
            <p class="body">The chaptered column is the column which links the child band with the parent band. This column is typically invisible in the parent band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowSelectorWidthResolved">
            <summary>
            Returns the resolved row selector width. Returns 0 if the row selectors are not visible.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardLabelWidthResolved">
            <summary>
            The width of the card label area
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardWidthResolved">
            <summary>
            The width of a single card
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters">
            <summary>
            Column filters for filtering all the rows in this band. <b>NOTE:</b> They will only apply if the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> is set to <b>AllRowsInBand</b>.
            </summary>
            <remarks>
            <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> must be set to <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterMode.AllRowsInBand"/> in order for these column filetrs to take effect. If it's set to <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterMode.SiblingRowsOnly"/> (which it resolves to by default) then column filers off the RowsCollection <see cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> will take effect on the associated rows collection.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowFilterActionResolved">
            <summary>
            Resolved RowFilterAction.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Summaries">
            <summary>
            A collection of SummarySettings objects. Use this collection to add new summaries as well as remove any existing summaries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.SummaryFooterCaption">
            <summary>
            Gets or sets summary footer caption substitution string.
            </summary>
            <remarks>
            <p>You can specify what gets shown in the summary footers' captions by setting this property to a substitution string. The format of the substition string is as follows:</p>
            <p>Any column names surrounded by square brakets will be substituted by that column's value. The column must be from the parent band. There are two tokens with special meaning: <pre>[BANDHEADER]</pre> and <pre>[SCROLLTIPFIELD]</pre>. <pre>[BANDHEADER]</pre> will be substituted by the band header's caption <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Header"/>. <pre>[SCROLLTIPFIELD]</pre> will be substitued by the value of the column associated with <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ScrollTipField"/> in the parent band.</p>
            <p>NOTE: Columns you specify for substitution must be from the parent band. ScrollTipField used is also from parent band. If there is no parent band, they will not be substituted with anything and left as they are.</p>
            <p>Default value for Band 0 is <pre>"Grand Summaries"</pre> and for other bands it's <pre>"Summaries for [BANDHEADER]: [SCROLLTIPFIELD]"</pre>.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryFooterCaptionVisible"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.OrderedColumnHeaders">
            <summary>
            The collection of column headers in their visible order
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.OrderedHeaders">
            <summary>
            If groups are displayed this returns the OrderedGroupHeaders
            collection otherwise OrderedColumnHeaders are returned 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Columns">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.ColumnsCollection"/> of UltraGridColumns that make up the band. This property is read-only.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Groups">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.GroupsCollection"/> of UltraGridGroup objects that are present in the band. This property is read-only.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupHeadersVisible"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.LevelCount"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Columns"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Override">
            <summary>
            Returns or sets the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridOverride"/> obejct that specifies the formatting and behavior of the band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HasOverride">
            <summary>
            Returns true if an Override object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HasCardSettings">
            <summary>
            Returns true if a CardSettings object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardSettings">
            <summary>
            Returns a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridCardSettings"/> object that contains information specifying how the band will appear when in card view mode.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupByRowBorderStyleResolved">
            <summary>
            returns the resolved border style for group by row ui elemnts
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardView">
            <summary>
            Returns or sets a value that determines whether the band is Card View mode.
            </summary>
            <remarks>
            <p class="body">Card View mode is a view style of the band that presents row data as a series of note cards instead of the traditional rows and columns. This view style is similar to the card view style of the Contacts section of Microsoft Outlook. Card View mode replaces the rows and columns of the child band with a <i>card view area</i> which contains the cards. The card view area scrolls horizontally to display as many cards as are required by the data in the band.</p>
            <p class="body">In Card View mode, you have a number of choices that control the way the cards will appear. You can choose to display labels on cards, control the size of the card view area, set guidelines for how cards will be arranged, and specify how the data field labels (analogous to column headers) will appear. These options are set by manipulating the properties of the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardSettings"/> object associated with the band.</p>
            <p class="note">Note that when a band is in Card View mode, <i>no children of that band will be displayed.</i> In card view, there is no effective interface for displaying a child band, so the display of child bands is disabled. Child bands may still exist, but they cannot be shown by the control.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AddButtonCaption">
            <summary>
            Returns or sets the caption text of the Band's Add button.
            </summary>
            <remarks>
            <p class="body">When the AddNew box is displayed, it contains a button for each band in the grid. The buttons are arranged in a hierarchical display that mimics the arrangement of the bands in the grid. The user can click the appropriate button to add a new row to the indicated band. The <b>AddButtonCaption</b> property determines what will be displayed on the AddNew box button for the current band.</p>
            <p class="body">By default, this property uses a <i>key</i>value (the name of the recordset) that it retrieves from the data provider (if it is available).If the <b>AddButtonCaption</b> property is not set (the string is empty) then the caption of the button will be this band's key. If the key is empty, then the first visible header's caption will be used.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AddButtonToolTipText"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.AddNewBox"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AddButtonToolTipText">
            <summary>
            Returns or sets the text used as the Add button's tool tip
            </summary>
            <remarks>
            <p class="body">When the AddNew box is displayed, it contains a button for each band in the grid. The buttons are arranged in a hierarchical display that mimics the arrangement of the bands in the grid. The user can click the appropriate button to add a new row to the indicated band. The <b>AddButtonToolTipText</b> property determines what will be displayed in the tooltip that appears when the mouse is over the AddNew box button for the current band. By default, this property is set to an empty string("") indicating that no tooltip will be displayed.</p>
            <p class="body">When the AddNew box is displayed, it contains a button for each band in the grid. The buttons are arranged in a hierarchical display that mimics the arrangement of the bands in the grid. The user can click the appropriate button to add a new row to the indicated band. The <b>AddButtonCaption</b> property determines what will be displayed on the AddNew box button for the current band.</p>
            <p class="body">By default, this property uses a <i>key</i>value (the name of the recordset) that it retrieves from the data provider (if it is available).If the <b>AddButtonCaption</b> property is not set (the string is empty) then the caption of the button will be this band's key. If the key is empty, then the first visible header's caption will be used.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AddButtonCaption"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.AddNewBox"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewField">
            <summary>
            Returns or sets the name of the field used to supply the text for the AutoPreview area.
            </summary>
            <remarks>
            <p class="body">The AutoPreview area appears under a row and provides a way to display multiple lines of text associated with that row. You can specify how many lines of text should be displayed, and choose to either display the value from a cell in the row or a custom text string that you specify. One common use might be to display the contents of a memo field that initially appears off-screen when the grid is loaded.</p>
            <p class="body">The <b>AutoPreviewField</b> property specifies the data field that will be used to populate the AutoPreview area. Whatever value is present in the specified field will be displayed in the AutoPreview area.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Description"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewEnabled"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewIndentation"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewMaxLines"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowPreviewAppearance"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewEnabled">
            <summary>
            Returns or sets a value that determines whether the AutoPreview area will be displayed.
            </summary>
            <remarks>
            <p class="body">The AutoPreview area appears under a row and provides a way to display multiple lines of text associated with that row. You can specify how many lines of text should be displayed, and choose to either display the value from a cell in the row or a custom text string that you specify. One common use might be to display the contents of a memo field that initially appears off-screen when the grid is loaded.</p>
            <p class="body">The <b>AutoPreviewEnabled</b> property determines whether the AutoPreview area can be displayed for rows in the specified band. Once AutoPreview has been enabled, it can be displayed for any row by setting the UltraGridRow object's <b>AutoPreviewHidden</b> property to False.</p>
            <p class="body">The <b>Description</b> property of the row determines the text to be displayed in the AutoPreview area. <b>Description</b> can be automatically set using the field in the row specified by the <b>AutoPreviewField</b> property, or it can be explicitly set through code (for example, in the <b>InitializeRow</b> event handler).</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewField"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewIndentation"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewMaxLines"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowPreviewAppearance"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewIndentation">
            <summary>
            Returns or sets the amount of horizontal indentation for a row's AutoPreview area.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewEnabled"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewField"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewMaxLines"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowPreviewAppearance"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewMaxLines">
            <summary>
            Returns or sets the maximum number of lines to be auto-previewed
            </summary>
            <remarks>
            <p class="body">The AutoPreview area appears under a row and provides a way to display multiple lines of text associated with that row. You can specify how many lines of text should be displayed, and choose to either display the value from a cell in the row or a custom text string that you specify. One common use might be to display the contents of a memo field that initially appears off-screen when the grid is loaded.</p>
            <p class="body">The <b>AutoPreviewMaxLines</b> property specifies the maximum number of lines of text that will appear in the AutoPreview area. The default value is 3.</p>
            <p class="body">The <b>Description</b> property of the row determines the text to be displayed in the AutoPreview area. <b>Description</b> can be automatically set using the field in the row specified by the <b>AutoPreviewField</b> property, or it can be explicitly set through code (for example, in the <b>InitializeRow</b> event handler).</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewEnabled"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewField"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Description"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowPreviewAppearance"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColHeaderLines">
            <summary>
            Returns or sets the number of lines to display for column headers.
            </summary>
            <remarks>
            The <b>ColHeaderLines</b> property determines how many lines of text can appear inside of a column header. Setting the value of this property will change the height of the column headers to accommodate the specified number of lines, whether or not any column header actually contains enough text to fill multiple lines. The minimum value for this property is 1. The maximum value is 10.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Columns"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColHeadersVisible"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Header"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Caption"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColHeadersVisible">
            <summary>
            Determines if column headers are visible. 
            </summary>
            <remarks>
            The <b>ColHeadersVisible</b> property is used to toggle the visibility of column headers. When column headers are not visible, certain header-related functionality, such as column selection, moving and swapping, may become unavailable.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Columns"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColHeaderLines"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Header"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Caption"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Expandable">
            <summary>
            Returns or sets a value that determines if the band is expandable.
            </summary>
            <remarks>
            <p class="body">The <b>Expandable</b> property determines whether the rows in a band can be expanded. If set to False the row expansion (plus/minus) indicators become inactive.</p>
            <p class="body">The <b>ExpansionIndicator</b> property can be used to hide the expansion indicators.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Indentation">
            <summary>
            Returns or sets a value that determines the amount of indenting used for this band.
            </summary>
            <remarks>
            You can use the <b>Indentation</b> property to specify how much indenting should be applied to bands beyond the default indenting done by the control. The default value for this property is -1, which indicates that the grid's default indenting should be used.
            </remarks> 
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupHeaderLines">
            <summary>
            Returns or sets the number of lines of text to display for groups headers.
            </summary>
            <remarks>
            The <b>GroupHeaderLines</b> property determines how many lines of text can appear inside of a group header. Setting the value of this property will change the height of the group headers to accommodate the specified number of lines, whether or not any group header actually contains enough text to fill multiple lines. The minimum value for this property is 1. The maximum value is 10.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Groups"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupHeadersVisible"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColHeaderLines"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupHeadersVisible">
            <summary>
            Determines if group headers are visible.
            </summary>
            <remarks>
            The <b>GroupHeadersVisible</b> property is used to toggle the visibility of group headers. When group headers are not visible, certain header-related functionality, such as group selection, moving and swapping, may become unavailable.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupHeaderLines"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Groups"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HeaderVisible">
            <summary>
            Determines if band headers are visible.
            </summary>
            <remarks>
            The <b>BandHeadersVisible</b> property is used to toggle the visibility of band headers. Band headers identify the band and appear above any column and group headers the band may contain.
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Header"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band. Also, changing the <b>Hidden</b> property of an object affects all instances of that object. For example, a hidden column or row is hidden in all scrolling regions.</p>
            <p class="body">There may be instances where the <b>Hidden</b> property cannot be changed. For example, you cannot hide the currently active rowscrollregion or colscrollregion. If you attempt to set the <b>Hidden</b> property of the active rowscrollregion to True, an error will occur.</p>
            <p class="body">This property is ignored for chaptered columns; that is, columns whose <b>DataType</b> property is set to 136 (DataTypeChapter).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HiddenResolved">
            <summary>
            Returns true if the <b>Hidden</b> property for this band is set to
            true or any of this band's ancestor bands have their hidden
            property set to true.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Index">
            <summary>
            Number that specifies an object's position in a collection.
            </summary>
            <remarks>
            <p class="body">The <b>Index</b> property is set by default to the order of the creation of objects in a collection. The index for the first object in a collection will always be zero.</p>
            <p class="body">The value of the <b>Index</b> property of an object can change when objects in the collection are reordered, such as when objects are added to or deleted from the collection. Since the <b>Index</b> property may change dynamically, it may be more useful to refer to objects in a collection by using its <b>Key</b> property.</p>
            <p class="body">Not all objects in a collection support an <b>Index</b> property. For certain objects, the <b>Index</b> value is essentially meaningless except as an internal placeholder within the collection. In these cases, the object will not have an <b>Index</b> property, even though it is in a collection. You can use other mechanisms, such as the <b>Key</b> property or the <code class="code">For Each...</code> loop structure, to access the objects in the collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.LevelCount">
            <summary>
            Returns or sets the number of levels that will be displayed for a single record.
            </summary>
            <remarks>
            <p class="body">Typically, each data record in a band occupies a single row of the grid, with all of the cells stretching from left to right. In some circumstances, you may want to have a single record occupy more than one row. For example, if you have address data stored in a record, you may want to have the first and last name fields on one level, the street address on a second level, and city, state and postal code fields on a third level. The <b>LevelCount</b> property is used to specify how many levels of data a band will display for each record in the data source.</p>
            <p class="body">Levels work in conjunction with groups to create blocks of fields within a band. If you do not have any groups specified for a band, the <b>LevelCount</b> property will have no effect. If one or more groups are specified (and column moving is enabled within the group or band) you can re-arrange fields vertically within the group by dragging their column headers to different levels.</p>
            <p class="body">The minimum value for this property is 1. The maximum value for this property is 50. When you specify a value greater than 1 for <b>LevelCount</b>, the control will automatically expand the band to create room for the number of levels you have requested, regardless of whether you actually have cells occupying those levels. Note that if you specify too high a number of levels, the user may initially see only column headers - the data itself may be pushed off the screen and may not be visible. Also, the amount of blank space allocated for each record may break up the visual continuity of the band and create confusion for the user.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Groups"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Columns"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.GroupHeadersVisible"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ScrollTipField">
            <summary>
            ScrollTipField specifies the key of the column contents of which UltraGrid will use to display the scroll tips.
            </summary>
            <remarks>
            <p class="body">The <b>ScrollTipField</b> property specifies which field should be used to supply the text for the scroll tips. Scroll tips appear over the scrollbar as the user is scrolling through a recordset. They display the specified data as a navigational aid; the user can release the mouse button and the recordset will be positioned on the record containing the data indicated in the scroll tip.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.OverrideMinRowHeight">
            <summary>
            Returns 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.SortedColumns">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.SortedColumnsCollection"/> which contains all the UltraGridColumn objects that are currently being sorted in the band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.HasSortedColumns">
            <summary>
            Returns true if there are any sorted columns in the band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.TotalHeaderHeight">
            <summary>
            Returns the total height of all the headers. (Column headers, group headers and band header). If the headers are not visible, then it returns 0.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout">
            <summary>
            Enables the the row-layout functionality.
            </summary>
            <remarks>
            <p>Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo"/> object to customize the cell positions. By default all the columns are visible. Set <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Hidden"/> to true on columns that you want to hide.</p>
            <p>Due to the nature of the row-layout functionality column swapping, and column moving are disabled.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayouts"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayouts">
            <summary>
            Returns an instance of RowLayoutsCollection to which you can add new RowLayout objects using <seealso cref="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Add"/> method.
            </summary>
            <remarks>
            <p class="body">Set <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout"/> property to true to enable row-layout functionality.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle">
            <summary>
            Gets or sets the row-layout label style. Row-layout label style specifies whether the column labels are shown in a separate area above the rows or with the cells in each row. Default is <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.Separate"/>.
            </summary>
            <remarks>
            <p class="body">When RowLayoutLabelStyle is set to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.Separate"/>, the column labels are shown in a separate header area above the rows. This is the default.</p>
            <p class="body">When RowLayoutLabelStyle is set to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.WithCellData"/>, the column labels are shown with cells and repeated in each row.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelPosition"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelPosition">
            <summary>
            Gets or sets the label position. Label position indicates the position of the column labels in the row layout mode.
            </summary>
            <remarks>
            <p>Label position indicates where to position the column label in relation to the associated cell in row layout mode.</p>
            <p><see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> must be set to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.WithCellData"/> for this to take effect in regular view (non-card view) mode. In card view, <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> must be set to a value other than <see cref="F:Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels"/>.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelPosition"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayoutResolved">
            <summary>
            Whether row-layout functionality is in effect.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowsCollection.IRowCallback">
            <summary>
            A callback interface used for recursively traversing all rows in the grid.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowsCollection">
            <summary>
            A collection of Infragistics.Win.UltraWinGrid.UltraGridRow objects
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetItem(System.Int32)">
            <summary>
            Returns the item at the specified index
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.OnDispose">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the items from the collection into the array.
            </summary>
            <param name="array">The array to receive the itemd</param>
            <param name="index">The index to start with</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.IndexOf(System.Object)">
            <summary>
            Returns the index of the object in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.CreateArray">
            <summary>
            Overridden. Virtual method used by the All 'get' method to create the array it returns.
            </summary>
            <returns>The newly created object array</returns>
            <remarks>This is normally overridden in a derived class to allocate a type safe array.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.Refresh(Infragistics.Win.UltraWinGrid.RefreshRow)">
            <summary>
            Refresh the display and/or refetch the data non-recursively.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            <p class="body">Use the overload of <b>Refresh</b> method that takes in <b>recursive</b> parameter to recursively perform this operation on descendant rows as well.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.Refresh(Infragistics.Win.UltraWinGrid.RefreshRow,System.Boolean)">
            <summary>
            Refresh the display and/or refetch the data with or without events.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.Refresh(Infragistics.Win.UltraWinGrid.RefreshRow,System.Boolean,System.Boolean)">
            <summary>
            Refresh the display and/or refetch the data with or without events.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.ExpandAll(System.Boolean)">
            <summary>
            Expand all rows in the collection. <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeLayout"/>
            </summary>
            <param name="recursive">Specifies whether to recursively expand descendant rows as well.</param>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.CollapseAll(System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.CollapseAll(System.Boolean)">
            <summary>
            Collapse all rows in the collection.
            </summary>
            <param name="recursive"></param>
            <remarks>
            <p>
            The following sample code collapses all the rows in ultraGrid1.
            </p>
            <p></p>
            <p>C#:</p>
            <p></p>
            <pre>
            private void button1_Click(object sender, System.EventArgs e)
            {
            	// Collapse all the rows recursively.
            	//
            	this.ultraGrid1.Rows.CollapseAll( true );
            }
            </pre>
            </remarks>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.ExpandAll(System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.ScrollCardIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Scrolls passed in row into view
            </summary>
            <param name="row">The card row.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.ScrollCardIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Scrolls passed in row into view
            </summary>
            <param name="row">The card row.</param>
            <param name="csr">The column scrolling region (if null will use the active region).</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.ScrollCardIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Scrolls passed in row into view
            </summary>
            <param name="row">The card row.</param>
            <param name="rsr">The row scrolling region (if null will use the active region).</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.ScrollCardIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            Scrolls passed in row into view
            </summary>
            <param name="row">The card row.</param>
            <param name="rsr">The row scrolling region (if null will use the active region).</param>
            <param name="csr">The column scrolling region (if null will use the active region).</param>
            <param name="exitEditMode">If true will exit edit mode first.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.IsCardVisible(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Determines if passed in row is visible
            </summary>
            <param name="row">The card row.</param>
            <returns>True if the this row is visible.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.IsCardVisible(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Determines if passed in row is visible
            </summary>
            <param name="row">The card row.</param>
            <param name="csr">The column scrolling region (if null will use the active region).</param>
            <returns>True if the this row is visible.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.IsCardVisible(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Determines if passed in row is visible
            </summary>
            <param name="row">The card row.</param>
            <param name="rsr">The row scrolling region (if null will use the active region).</param>
            <returns>True if the this row is visible.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.IsCardVisible(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Determines if passed in row is visible
            </summary>
            <param name="row">The card row.</param>
            <param name="rsr">The row scrolling region (if null will use the active region).</param>
            <param name="csr">The column scrolling region (if null will use the active region).</param>
            <returns>True if the this row is visible.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetRowWithListIndex(System.Int32)">
            <summary>
            Returns the actual UltraGridRow associated with list index in the binding list.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetRowAtVisibleIndex(System.Int32)">
            <summary>
            Gets a row based on its visible index.
            </summary>
            <param name="visibleIndex">The index relative to all other visible rows.</param>
            <returns>The row at the requested visible index. Row's that have their Hidden property set will not be included.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetRowAtVisibleIndexOffset(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Int32)">
            <summary>
            Gets a row based on a start row and a relative visible index.
            </summary>
            <param name="startAtRow">The row to start with. If this is null the first visible row in the collection will be used.</param>
            <param name="visibleIndexOffset">The index offset from the startAtRow relative to all other visible rows.</param>
            <returns>The row at the requested visible index offset. Row's that have their Hidden property set will not be included.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetAllNonGroupByRows">
            <summary>
            Gets all the non-group-by rows that are associated with this collection.
            </summary>
            <remarks>
            <p class="body">
            This method is useful in group-by mode where rows are grouped by columns and you want to get 
            all the non-group-by rows. In group-by mode the root row collection contains the group-by rows. 
            To access the actual non-group-by rows one has to recursively traverse the child rows (by 
            using the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ChildBands"/> property or by typecasting the row into an 
            <b>UltraGridGroupByRow</b> object and accessing it's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Rows"/> 
            property). This method makes accessing all the non-group-by rows easier by returning an 
            array that contains all non-group-by rows.
            </p>
            </remarks>
            <returns>An array that contains the non-group-by rows (actual rows). The returned array is not held by the row collection.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredInNonGroupByRows">
            <summary>
            Gets all the filtered in rows (rows that are not filtered out).
            </summary>
            <remarks>
            <p class="body">
            Gets all the filtered in rows (rows that are not filtered out). As the name suggests this method 
            does not return group-by rows even when this collection is a collection of group-by rows. It 
            always returns an array of actual (non-group-by) rows that are filtered in. In the case where
            this collection contains group-by rows it returns the descendant filtered in non-group-by rows.
            </p>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredOutNonGroupByRows"/> <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetAllNonGroupByRows"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredOutNonGroupByRows">
            <summary>
            Gets all the filtered out rows (rows that do not match the filtering criteria).
            </summary>
            <remarks>
            <p class="body">
            Gets all the filtered out rows (rows that do not match the filtering criteria). As the name 
            suggests this method does not return group-by rows even when this collection is a collection 
            of group-by rows. It always returns an array of actual (non-group-by) rows that are filtered 
            out. In the case where this collection contains group-by rows it returns the descendant
            filtered out non-group-by rows.
            </p>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredInNonGroupByRows"/> <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetAllNonGroupByRows"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.CopyTo(Infragistics.Win.UltraWinGrid.UltraGridRow[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.EnsureSortedAndFiltered">
            <summary>
            Ensure Rows in the current RowCollection are sorted and filtered
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.EnsureSortedAndFiltered(Infragistics.Win.UltraWinGrid.RecursionType)">
            <summary>
            Ensure Rows in the RowCollection are sorted and filtered.
            </summary>
            <param name="recursion">RecursionType enum specifying whether the method should be applied recursively
            to child bands of the current RowCollection's Band</param>
            <returns>void.</returns>
            <remarks>Specifying a RecursionType of "None" will ensure the current RowCollection is synchronously sorted
            and filtered.  Specifying "All" or "Expanded" will ensure that either all rows, or all expanded rows in child
            bands are synchronously sorted and filtered.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.EnsureSortedAndFiltered(Infragistics.Win.UltraWinGrid.RecursionType,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Ensure Rows in the RowCollection are sorted and filtered.
            </summary>
            <param name="recursion">RecursionType enum specifying whether the method should be recursively applied
            to child bands of the current RowCollection's Band.</param>
            <param name="lowestLevelBand">The lowest level Band to which the method should be recursively applied.</param>
            <returns>void.</returns>
            <remarks>Specifying a RecursionType of "None" will ensure the current RowCollection is synchronously sorted
            and filtered.  Specifying "All" or "Expanded" will ensure that either all rows, or all expanded rows, in the 
            specified Bands are synchronously sorted and filtered.  The method will be called recursively on the
            this Band and all child bands until the lowest level Band is reached or all bands if the lowestLevelBand is null. 
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.Count">
            <summary>
            overridden method overridden to implement lazy initialization of rows
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.List">
            <summary>
            The list that contains the item references 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.IsReadOnly">
            <summary>
            True if the collection is read only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.All">
            <summary>
            Returns an array containing all the items contained in this rows collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.Item(System.Int32)">
            <summary>
            Indexer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.ParentRow">
            <summary>
            Returns reference to parent row.
            </summary>
            <remarks>
            Parent row could either be a group-by row or an instance of UltraGridRow. If it's a group-by row then it will be from the same band as this RowsCollection, otherwise the it will be from parent band of this RowsCollection's band.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.SummaryValues">
            <summary>
            Returns a collection of SummaryValue objects. Each of these SummaryValue objects in the collection is associated with a SummarySettings object in Summaries collection of the Band. The user can use this collection to get value of a summary for this rows collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters">
            <summary>
            Column filters for filtering the rows in this rows collection. 
            They will only apply if the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> resolves to SiblingRowsOnly.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.CardAreaHeight">
            <summary>
            Caches the height of the card area
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.FirstVisibleCardRow">
            <summary>
            Gets or sets the first visible card in the card area associated with this collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.VisibleRowCount">
            <summary>
            Returns the total number of visible rows in the collection. If the template add-row is visible, this property's return value will include that as well even though the template add-rows are not part of the collection, they are visible.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.FilteredInRowCount">
            <summary>
            Gets the number of rows that are filtered in (not filtered out).
            </summary>
            <remarks>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredInNonGroupByRows"/> <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredOutNonGroupByRows"/> 
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.FilteredInNonGroupByRowCount">
            <summary>
            Gets the number of non-group-by rows that are filtered in (not filtered out).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.TemplateAddRow">
            <summary>
            Returns the template add-row associated with this rows-collection.
            </summary>
            <remarks>
            <p class="body">Returns the template add-row associated with this rows-collection.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowAddNew"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.AllowAddNew"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowsCollection.Band">
            <summary>
            UltraGridBand object associated with this rows collection.
            </summary>
            <remarks>
            Rows in this RowsCollection are from the same band as this band.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowsCollection.IRowCallback">
            <summary>
            A callback interface used for recursively traversing all rows in the grid.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowsCollection.IRowCallback.ProcessRow(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Return true to continue traversing, false to stop
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.HeaderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares headers in visible position order
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridBand.UltraGridBandTypeConverter">
            <summary>
            UltraGridBand type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.UltraGridBandTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.UltraGridBandTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.UltraGridBandTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns property descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnVisiblePositionComparer">
            <summary>
            A IComparer implementation for sorting columns by their visible positions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnVisiblePositionComparer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandHeader">
            <summary>
            The class represents the header for a specific band
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeaderBase">
            <summary>
            Returns the Header object associated with the object. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">A Header object represents a column or group header that specifies information about the column or group, and can also serve as the interface for functionality such as moving, swapping or sorting the column or group. Group headers have the added functionality of serving to aggregate multiple columns under a single heading.</p> 
            <p class="body">The <b>Header</b> property provides access to the header that is associated with an object. The <b>Header</b> property provides access to the header that is associated with an object. In some instances, the type of header may be ambiguous, such as when accessing the <b>Header</b> property of a UIElement object. You can use the <b>Type</b> property of the Header object returned by the <b>Header</b> property to determine whether the header belongs to a column or a group.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderBase.visiblePos">
            <summary>
            visible position of header
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerialize">
            <summary>
            Returns true if any properties are not set to their default values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.Reset">
            <summary>
            Resets all properties back to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeCaption">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResetCaption">
            <summary>
            Resets Caption to null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeAppearance">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResetAppearance">
            <summary>
            Resets Appearance to its default settings.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeEnabled">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResetEnabled">
            <summary>
            Resets Enabled to its default value (True).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeExclusiveColScrollRegion">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResetExclusiveColScrollRegion">
            <summary>
            Resets to null
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeVisiblePosition">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ToString">
            <summary>
            Returns a "" string so that property window display nothing 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Listener notification
            </summary>
            <param name="propChange"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResolveAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the object.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraWinGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as UltraWinGrid.Appearance</p>
            <p class="code">Set objAppearance = UltraWinGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p> 
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the object.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraWinGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as UltraWinGrid.Appearance</p>
            <p class="code">Set objAppearance = UltraWinGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p> 
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            Returns the UIElement associated with the object, in the specified row and column scrolling regions.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body"> The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UltraGridUIElement object residing at specific coordinates.</p>
            <p class="body">The <b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.AdjustDimensions(Infragistics.Win.UltraWinGrid.PositionDimensions,Infragistics.Win.UltraWinGrid.PositionDimensions,System.Drawing.Rectangle@,Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.AppearanceData@,System.Drawing.Rectangle@)">
            <summary>
            Adjusts the passed in rect based on the from and to enumerators
            </summary>
            <param name="enumDimFrom"></param>
            <param name="enumDimto"></param>
            <param name="rect"></param>
            <param name="row"></param>
            <param name="resolvedCellAppearance"></param>
            <param name="pictureRect"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialize the header properties
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.DeserializeHelper(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called by the constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#IValueListOwner#OnListGotFocus">
            <summary>
            Called when the list portion receives focus.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeFixed">
            <summary>
            Returns true if the property has been set to a non-default value of true.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResetFixed">
            <summary>
            Resets the property to its default value of false.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ShouldSerializeFixedHeaderIndicator">
            <summary>
            Retruns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.ResetFixedHeaderIndicator">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.IsTabStop">
            <summary>
            Always returns false for headers
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Column">
            <summary>
            The UltraGridColumn object associated with the header. Returns null if the header is not a column header. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Group">
            <summary>
            The UltraGridGroup object associated with the header. Returns null if the header is not a group header. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Caption">
            <summary>
            Returns or sets the caption text of the header.
            </summary>
            <remarks>
            <p class="body">The <b>Caption</b> property is used to determine the text that will be displayed for an object. Generally, text specified by <b>Caption</b> is static (cannot be edited by the user). Editable text is usually specified by the <b>Value</b> property of an object.</p>
            <p class="body">If <b>Caption</b> is set to null or to a zero length string, then the property returns the default text of the object (the <b>Key</b> value of the object associated with the Header.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Selected">
            <summary>  
            Returns or sets the selected state of the header.
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Appearance">
            <summary>  
            Returns or sets the Appearance object that controls the object's formatting.
            </summary>  
            <remarks>
            <p class="body">The <b>Appearance</b> property of an object is used to associate the object with an Appearance object that will determine its appearance. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For many of the objects in the UltraWinGrid, you do not set formatting properties directly. Instead, you set the properties of an Appearance object, which controls the formatting of the object it is attached to.</p>
            <p class="body">There are two ways of working with the <b>Appearance</b> property and assigning the attributes of an Appearance object to other objects. One way is to create a new Appearance object, adding it directly to the Appearances collection. Then you assign the new Appearance object  to the <b>Appearance</b> property of the object you want to format. This method uses a "named" Appearance object that you must explicitly create (and to which you must assign property settings) before it can be used. For instance, you could create an object in the grid's Appearances collection and assign it some values as follows:</p>
            <p class="code">UltraWinGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.Appearances("New1").BorderColor = vbBlue</p>
            <p class="code">UltraWinGrid1.Appearances("New1").ForeColor = vbRed</p>
            <p class="body">Creating the object in this way does not apply formatting to any visible part of the grid. The object simply exists in the collection with its property values, waiting to be used. To actually use the object, you must assign it to the grid's (or another object's) <b>Appearance</b> property:</p>
            <p class="code">UltraWinGrid1.Appearance = UltraWinGrid1.Appearances("New1")</p>
            <p class="body">In this case, only one Appearance object exists. The grid's appearance is governed by the settings of the "New1" object in the collection. Any changes you make to the object in the collection will immediately be reflected in the grid.</p>
            <p class="body">The second way of working with the <b>Appearance</b> property is to use it to set property values directly, such as:</p>
            <p class="code">UltraWinGrid1.Appearance.ForeColor = vbBlue</p>
            <p class="body">In this case, an Appearance object is automatically created by the control. This Appearance object is not a member of an Appearances collection and it does not have a name. It is specific to the object for which it was created; it is an "intrinsic" Appearance object. Changes to the properties of an intrinsic Appearance object are reflected only in the object to which it is attached.</p>
            <p class="body">Note that you can assign properties from a named Appearance object to an intrinsic Appearance object without creating a dependency relationship. For example, the following code...</p>
            <p class="code">UltraWinGrid1.Appearance.ForeColor = UltraWinGrid1.Appearances("New1").ForeColor</p>
            <p class="body">...does <i>not</i> establish a relationship between the foreground color of the intrinsic object and that of the named object. It is simply a one-time assignment of the named object's value to that of the intrinsic object. In this case, two Appearance objects exist - one in the collection and one attached to the grid - and they operate independently of one another.</p>
            <p class="body">If you wish to assign all the properties of a named object to an intrinsic object at once without creating a dependency relationship, you can use the <b>Clone</b> method of the Appearance object to duplicate its settings and apply them. So if you wanted to apply all the property settings of the named Appearance object "New1" to the grid's intrinsic Appearance object, but you did not want changes made to "New1" automatically reflected in the grid, you would use the following code:</p>
            <p class="code">UltraWinGrid1.Appearance = UltraWinGrid1.Appearances("New1").Clone</p>
            <p class="body">Note that the properties of an Appearance object can also operate in a hierarchical fashion. Certain properties can be set to a "use default" value, which indicates to the control that the property should take its setting from the object's parent. This functionality is enabled by default, so that unless you specify otherwise, child objects resemble their parents, and formatting set at higher levels of the grid hierarchy is inherited by objects lower in the hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HasAppearance">
            <summary>
            Returns true if an appearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Enabled">
            <summary>  
            Determines if the object associated with the header is enabled.
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.ExclusiveColScrollRegion">
            <summary>  
            Returns or sets the only colscrollregion in which a column is displayed.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion whose value will be modified. You can use this reference to access any of the returned colscrollregion's properties or methods.</p>
            <p class="body">When this property is set, the column will only appear in the specified colscrollregion; it will not appear in any other colscrollregion. When a colscrollregion is first made exclusive, only the column whose header had this property set will appear in the scrolling region. However, additional columns can be added to the colscrollregion by setting this property for their headers.</p>
            <p class="body">If an exclusive colscrollregion is unable to display its columns because their headers have been hidden, the colscrollregion will display all visible columns.</p>
            <p class="body">The <b>VisibleHeaders</b> property of a colscrollregion can be used to return references to the columns that are displayed in a colscrollregion.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Height">
            <summary>
            Returns or sets the height of the row (excluding spacing).
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For the Header object, this property is read-only. In a particular band, each column header has the same height. This height is determined by taking the largest height that results from the resolution of each column's header's <b>Appearance</b> attributes and the band's <b>ColHeaderLines</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.VisiblePosition">
            <summary>
            Returns or sets the visible position of a header.
            </summary>
            <remarks>
            <p class="body">This property can be used to specify the ordinal positions of groups and columns.</p>
            <p class="body">For group headers, this property returns or sets the position of the group within that group's band. For column headers, this property returns or sets the position of the column within its group, if the column belongs to a group, or its band, if the column belongs to a band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#IValueListOwner#IsDropDownList">
            <summary>
            True if this is a drop down list type where
            there is no edit control
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#ILayoutItem#IsVisible">
            <summary>
            Indicates whether this column is visible.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#Anchor">
            <summary>
            If the display area of the item is larger than the item, this property indicates where to anchor the item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#Fill">
            <summary>
            <p>Fill indicates whether to resize the item to fill the extra spance if the layout item's display area is larger than its size,</p> 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#Insets">
            <summary>
            Indicates the padding around the layout item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#OriginX">
            <summary>
            <p>OriginX and OriginY define where the layout item will be placed in the virtual grid of the grid-bag layout. OriginX specifies the location horizontally while specifies the location vertically. These locations are the coordinates of the cells in the virtual grid that the grid-bag layout represents.</p>
            <p>The leftmost cell has OriginX of 0. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/> specifies that the item be placed just to the right of the item that was added to the layout manager just before this item was added. </p>
            <p>The default value is <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/>. OriginX should be a non-negative value.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#OriginY">
            <summary>
            <p>OriginX and OriginY define where the layout item will be placed in the virtual grid of the grid-bag layout. OriginX specifies the location horizontally while specifies the location vertically. These locations are the coordinates of the cells in the virtual grid that the grid-bag layout represents.</p>
            <p>The topmost cell has OriginY of 0. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/> specifies that the item be placed just below the item that was added to the layout manager just before this item was added.</p>
            <p>The default value is <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/>. OriginY should be a non-negative value.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#SpanX">
            <summary>
            <p>Specifies the number of cells this item will span horizontally. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Remainder"/> specifies that this item be the last one in the row and thus occupy remaining space.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#SpanY">
            <summary>
            <p>Specifies the number of cells this item will span vertically. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Remainder"/> specifies that this item be the last one in the column and thus occupy remaining space.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#WeightX">
            <summary>
            Indicates how the extra horizontal space will be distributed among items. Default value is 0.0. Higher values give higher priority. The weight of the column in the virtual grid the grid-bag layout represents is the maximum WeightX of all the items in the row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Infragistics#Win#Layout#IGridBagConstraint#WeightY">
            <summary>
            Indicates how the extra vertical space will be distributed among items. Default value is 0.0. Higher values give higher priority. The weight of the column in the virtual grid the grid-bag layout represents is the maximum WeightY of all the items in the column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.SizeResolved">
            <summary>
            Resolved header size. This property returns the actual width and the height of the header.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed">
            <summary>
            Specifies whether the header is fixed. When a header is fixed column(s) associated with the header remain in view when the grid is scrolled horizontally. This property is settable on column headers and group headers. If there are groups, then the Fixed property settings off the group headers will be used and fixed property settings off the column headers will be ignored. Attempting to set it on a BandHeader object will lead to a NotSupportedException. NOTE: This property is ignored in Row-Layout mode as headers can't be fixed in Row-Layout mode. You must enable the fixed-headers functionality by setting <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders"/> to true in order for this property to have any effect.
            </summary>
            <remarks>
            <p class="body">Specifies whether the header is fixed. When a header is fixed column(s) associated with the header remain in view when the grid is scrolled horizontally.</p>
            <p class="body">Specifies whether the header is fixed. This property is settable on column headers and group headers. Attempting to set it on a BandHeader object will lead to a NonSupportedException.</p>
            <p calss="body">You must enable the fixed-headers functionality by setting <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders"/> to true in order for this property to have any effect.</p>
            <p class="body">NOTE: This property is ignored in Row-Layout mode as headers can't be fixed in Row-Layout mode. Also if there are groups, then the Fixed settings off the column headers will be ignored and Fixed settings off the group headers will be used.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.FixedHeaderIndicator"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.FixedHeaderIndicator">
            <summary>
            Specifies whether the user is allowed to fix or unfix the header. NOTE: This property is ignored in Row-Layout mode as headers can't be fixed in Row-Layout mode.
            </summary>
            <remarks>
            <p class="body">FixedHeaderIndicator property specifies whether the user is allowed to fix or unfix the header.</p>
            <p class="body">NOTE: This property is ignored in Row-Layout mode as headers can't be fixed in Row-Layout mode.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator"/></p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase">
            <summary>
            The Accessible object for a column header.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.#ctor(Infragistics.Win.UltraWinGrid.HeaderBase,Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.GetMarshallingControl">
            <summary>
            Returns the control used to synchronize accessibility calls.
            </summary>
            <returns>A control to be used to synchronize accessibility calls.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>An AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (Nothing in Visual Basic) if no object is at the tested location.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.Help">
            <summary>
            Gets a description of what the object does or how the object is used.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.Name">
            <summary>
            The accessible name for the data area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderBase.HeaderAccessibleObjectBase.Value">
            <summary>
            Returns the caption
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeader.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeader.GetBandHeaderHeight">
            <summary>
            Calculate and return the height of this band headers,
            without column or group headers
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeader.GetBandHeaderHeight(System.Boolean)">
            <summary>
            Calculate and return the height of this band headers,
            without column or group headers
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeader.ShouldSerializeVisiblePosition">
            <summary>
            Returns false since we never need to serialize the visible position
            of a band header
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.Band">
            <summary>
            Returns the UltraGridBand that the object belongs to, if any. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Band</b> property of an object refers to a specific band in the grid as defined by an UltraGridBand object. You use the <b>Band</b> property to access the properties of a specified UltraGridBand object, or to return a reference to the UltraGridBand object that is associated with the current object.</p>
            <p class="body">UltraGridBand objects are the foundation of the hierarchical data structure used by UltraWinGrid. Any row or cell in the grid must be accessed through its UltraGridBand object. Bands are also used to apply consistent formatting and behavior to the rows that they comprise. A UltraGridBand object is used to display all the data rows from a single level of a data hierarchy. UltraGridBand objects contain multiple sets of child UltraGridRow objects that actually display the data of the recordset. All of the rows that are drawn from a single Command in the DataEnvironment make up a band.</p>
            <p class="body">The rows of a band are generally displayed in groups of one more in order to show rows from subsequent bands that are linked to rows in the current band via the structure of the data hierarchy. For example, if a hierarchical recordset has Commands that display Customer, Order and Order Detail data, each one of these Commands maps to its own UltraGridBand in the UltraWinGrid. The rows in the Customer band will appear separated by any Order data rows that exist for the customers. By the same token, rows in the Order band will be appear separated to make room for Order Detail rows. How this looks depends on the ViewStyle settings selected for the grid, but the concept of visual separation is readily apparent when the UltraWinGrid is used with any hierarchical recordset.</p>
            <p class="body">Although the rows in a band may appear to be separated, they are treated contiguously. When selecting a column in a band, you will see that the cells of that column become selected in all rows for the band, regardless of any intervening rows. Also, it is possible to collapse the hierarchical display so that any children of the rows in the current band are hidden.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.Height">
            <summary>
            Returns the height of the band header.
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For a Header object, this property is read-only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.VisiblePosition">
            <summary>
            Returns or sets the visible position of a header.
            </summary>
            <remarks>
            <p class="body">For band headers, this property is read-only and always returns zero.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.SizeResolved">
            <summary>
            Resolved header size. This property returns the actual width and the height of the header.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject">
            <summary>
            The Accessible object for a column header.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.BandHeader,Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeader.BandHeaderAccessibleObject.Band">
            <summary>
            Returns the associated UltraGridBand object.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandHeadersUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridBand,System.Boolean,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="parent">Parent element</param>
            <param name="band">Associated <b>Band</b></param>
            <param name="forceAlignLeft">True to adjust based on the ColScrollRegion</param>
            <param name="rowsContext">Associated rows</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridBand,System.Boolean,Infragistics.Win.UltraWinGrid.RowsCollection,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
            <param name="parent">Parent element</param>
            <param name="band">Associated <b>Band</b></param>
            <param name="forceAlignLeft">True to adjust based on the ColScrollRegion</param>
            <param name="rowsContext">Associated rows</param>
            <param name="rowContext">The row this header is attached to.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the element or null.  
            </summary>
            <param name="type">The requested type or null to pick up default context object. </param>
            <param name="checkParentElementContexts">If true will walk up the parent chain looking for the context.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.ClipChildren">
            <summary>
            Overridden. Returning true causes all drawing of this element's child elements to be
            expicitly clipped to the area inside this elements borders
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.Band">
            <summary>
            The UltraGridBand object represents all the rows that occur at a single level of a hierarchical data set. Bands can be expanded or collapsed to display the data in the rows they contain.
            </summary>
            <remarks>
            <p class="body">The UltraGridBand object represents all the records at one level of a hierarchical recordset. Bands are the foundation of hierarchical data in the UltraWinGrid. When bound to a recordset, each band corresponds to a single Command. (A band can also be considered as roughly equivalent to the table or query level of organization within a database.) Although the rows in a band may be visually separated (appearing grouped under the rows of the next higher band in the hierarchy) they are in fact one set of records. In the data hierarchy of the grid, bands come after the grid itself, but before rows and cells.</p>
            <p class="body">There is always at least one UltraGridBand present in the UltraWinGrid, even when it is displaying a single-level (flat) recordset. Most of the properties that apply to the control at the topmost (grid) level also apply to the UltraGridBand object, since the band rather than the control is the primary container object for data. There is also broad support for applying different formatting and behavior attributes to individual bands. Since a band is effectively "a grid within a grid" you may want to have bands be markedly different from one another. For example, one band might display column headers and row selectors for each group of records, while another might display only data cells.</p>
            <p class="body">Bands can be displayed either horizontally or vertically within the grid, depending on the setting of the <b>ViewStyleBand</b> property. You can also hide entire bands from view by setting the <b>Hidden</b> property of the UltraGridBand object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandHeadersUIElement.BorderSides">
            <summary>
            <see cref="P:Infragistics.Win.UIElement.BorderSides"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandsSerializer">
            <summary>
            Contains a flat collection of Band objects, one per hierarchical recordset. 
            This object is used internally by UltraGrid for serialization/deserisalization.
            </summary> 
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandsCollection">
            <summary>
            Returns a flat collection of Band objects, one per hierarchical recordset. 
            This property is read-only at run-time.
            </summary><remarks><para>The Bands property is used to access the collection 
            of Band objects associated with an Layout object or the UltraGrid. Band 
            objects are used to display all the data rows from a single level of a data 
            hierarchy.</para><para>Each Band object in the collection can be accessed 
            by using its Index or Key values. Using the Key value is preferable, because 
            the order of an object within the collection (and therefore its Index value) 
            may change as objects are added to and removed from the collection.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            constructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.OnDispose">
            <summary>
            Called when this object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.ToString">
            <summary>
            Returns a "" string so that property window display nothing 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.DirtyOrigins">
            <summary>
            Flags the collection so that the band origins
            will be recalculated the next time VerifyBandOrigins
            is called
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.IsReadOnly">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.OriginsDirty">
            <summary>
            Returns true if band origins need to be recalculated
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.Extent">
            <summary>
            Returns the Band's Width
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.Layout">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandsCollection.AllowDuplicateKeys">
            <summary>
            Returns true if the collection allows 2 or more items to have the same key value.
            </summary>
            <remarks>
            In BandsCollection, this property is overridden to return true because we do
            want to allow different bands with the same keys in the collection.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsSerializer.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            constructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsSerializer.Add(System.Object)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandEnumerator">
            <summary>
            Enumerator for the BandsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandEnumerator.#ctor(Infragistics.Win.UltraWinGrid.BandsCollection)">
            <summary>
            constructor
            </summary>
            <param name="bands"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandsCollectionUITypeEditor">
            <summary>
            BandsCollectionUITypeEditor prevents the default collection type editor
            from displaying an ellipsis button.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollectionUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Used to determine the type of UIEditor that will be displayed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle specifying the type of UIEditor.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandsCollectionConverter">
            <summary>
            Summary description for BandsCollectionConverter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollectionConverter.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns true
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandsCollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns porperty descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand,System.String)">
            <summary>
            constructor
            </summary>
            <param name="band"></param>
            <param name="name"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Returns band object
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.Category">
            <summary>
            Gets category
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.ResourceName">
            <summary>
            Gets/SEts resource name
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.ResourceValue">
            <summary>
            Gets resource value
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.ComponentType">
            <summary>
            Gets component type
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.IsReadOnly">
            <summary>
            Return false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandPropertyDescriptor.PropertyType">
            <summary>
            Gets property type
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Serialization.Binder">
            <summary>
            Controls class loading and mandates what class to load.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Serialization.Binder.BindToType(System.String,System.String)">
            <summary>
            Controls the binding of a serialized object to a type
            </summary>
            <param name="assemblyName">Specifies the Assembly name of the serialized object</param>
            <param name="typeName">Specifies the Type name of the serialized object.</param>
            <returns>The type of the object the formatter creates a new instance of.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ButtonConnectorUIElement">
            <summary>
            	Summary description for ButtonConnectorUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ButtonConnectorUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>ButtonConnectorUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ButtonConnectorUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ButtonConnectorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ButtonConnectorUIElement.BorderSides">
            <summary>
            <see cref="P:Infragistics.Win.UIElement.BorderSides"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ButtonConnectorUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement">
            <summary>
            CaptionAreaUIElement
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            constructor
            </summary>
            <param name="parent">parent UI element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            overridden InitAppearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.BorderSides">
            <summary>
            <see cref="P:Infragistics.Win.UIElement.BorderSides"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.AccessibilityInstance">
            <summary>
            Returns the accesible object representing the data area of the grid.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.CaptionAreaAccessibleObject">
            <summary>
            The Accessible object for the grid's caption ares.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.CaptionAreaAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.CaptionAreaUIElement)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.CaptionAreaAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.CaptionAreaAccessibleObject.Value">
            <summary>
            Returns the caption
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CaptionAreaUIElement.CaptionAreaAccessibleObject.Grid">
            <summary>
            Returns the associated grid control.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardAreaUIElement">
            <summary>
            The CardAreaUIElement contains RowUIElements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Win.UltraWinGrid.CardAreaUIElement"/> class.
            </summary>
            <param name="parent">The UIElement of which this element is a child.</param>
            <param name="firstRow">A reference to the first <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridRow"/> being displayed by this instance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.GetAdjustmentRange(System.Drawing.Point,Infragistics.Win.UIElementAdjustmentRangeParams@)">
            <summary>
            Returns the range limits for adjusting the element in either or both
            dimensions. It also returns the initial rects for the vertical and horizontal
            bars that will need to be inverted during the mouse drag operation.
            </summary>
            <param name="point">The point where the mouse is in client coordinates</param>
            <param name="range">Returned limits</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance for the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnDispose">
            <summary>
            Called when the object is being disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnElementAdjustmentStart(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called when a mousedown is received and a resize operation is started..
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnNewDeltaY(System.Int32)">
            <summary>
            Called when the the Y delta has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnMousePanVertical(System.Int32)">
            <summary>
            Called when the element is panned in the up or down direction.
            </summary>
            <param name="delta">The amount by which the element was panned.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnMousePanHorizontal(System.Int32)">
            <summary>
            Called when the element is panned in the left or right direction.
            </summary>
            <param name="delta">The amount by which the element was panned.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.InitializeRow(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Initializes our FirstVisibleRow with the UltraGridRow that represents the first row in the card area.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.ScrollCardArea(System.Int32)">
            <summary>
            Scrolls the card area 'columnsToScroll' columns.  Supply a positive number to scroll forward or a negative number to scroll backward.
            </summary>
            <param name="columnsToScroll"></param>
            <returns>True if the card area was scrolled</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnScrollValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the scrollbar control's OnValueChanged event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles user interactivity with the scrollbar
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaUIElement.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.SupportsUpDownAdjustmentsFromBottomBorder">
            <summary>
            True if this element supports up and down adjustments by grabbing the bottom border.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.ClipChildren">
            <summary>
            Returns whether this element's child elements are clipped
            by its bounding rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.SupportsVerticalMousePanning">
            <summary>
            Returns whether this element is supporting vertical mouse panning
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.SupportsHorizontalMousePanning">
            <summary>
            Returns whether this element is supporting horizontal mouse panning
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.Rows">
            <summary>
            Returns the rows collection that conatins all sibling rows
            even rows that are not visible (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.ScrollHandler">
            <summary>
            Returns the event handler that notifies Scroll
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.ScrollValueChangedHandler">
            <summary>
            Returns the event handler that notifies ValueChanged
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaUIElement.SubObjectPropChangeHandler">
            <summary>
            Returns the event handler that notifies OnSubObjectPropChanged
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement">
            <summary>
            UIElement that contains RowUIElements for the CardView style.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement"/> class.
            </summary>
            <param name="parent">The parent UIElement (see <see cref="P:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.CardAreaUIElement"/>)</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.ClipChildren">
            <summary>
            Returns whether this element's child elements are clipped
            by its bounding rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.CardAreaUIElement">
            <summary>
            Returns the <see cref="P:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement.CardAreaUIElement"/> that contains this <see cref="T:Infragistics.Win.UltraWinGrid.CardAreaScrollRegionUIElement"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardCaptionUIElement">
            <summary>
            Summary description for CardCaptionUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance for the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Overridden. Called when element is double clicked. Expands or collapses the associated card.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.OnMouseEnter">
            <summary>
            Called when the mouse enters this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.OnMouseLeave">
            <summary>
            Called when the mouse leaves this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Used by an element to render using the system theme. This method will not
            be invoked if the themes are not supported.
            </summary>
            <param name="drawParams">UIElementDrawParams</param>
            <returns>Returning true will prevent the invocation of the DrawBackColor,
            DrawImageBackground, DrawBorders, DrawImage and DrawForeground. Return
            false when themes are not supported by the element or if unable to 
            render using the system theme.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardCaptionUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardExpansionUIElement">
            <summary>
            UI element used as a button in compressed card view to allow the user to expand and collapse individual cards.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>CardExpansionUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance for the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.GetImageAttributes(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Gets the image attributes used for drawing the image
            </summary>
            <remarks>This method can be overridden in dervied classes to supply the image attributes.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse up message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Used by an element to render using the system theme. This method will not
            be invoked if the themes are not supported.
            </summary>
            <param name="drawParams">UIElementDrawParams</param>
            <returns>Returning true will prevent the invocation of the DrawBackColor,
            DrawImageBackground, DrawBorders, DrawImage and DrawForeground. Return
            false when themes are not supported by the element or if unable to 
            render using the system theme.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.OnMouseEnter">
            <summary>
            Called when the mouse enters this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.OnMouseLeave">
            <summary>
            Called when the mouse leaves this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Overridden. Called when element is double clicked.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.Image">
            <summary>
            Overridden. Returns an image.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardExpansionUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement">
            <summary>
            Summary description for CardLabelAreaUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance for the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.OnElementAdjustmentStart(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called when a mousedown is received and a resize operation is started..
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.ClipChildren">
            <summary>
            Returning true causes all drawing of this element's children to be explicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardLabelAreaUIElement.SupportsLeftRightAdjustmentsFromRightBorder">
            <summary>
            True if this element supports left to right adjustments by grabbing the right border
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardLabelUIElement">
            <summary>
            Summary description for CardLabelUIElement.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeaderUIElement">
            <summary>
            HeaderUIElement
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.HeaderBase)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
            <param name="header"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the
            element or null. 
            </summary> 
            <param name="type">The requested type or null to pick up default context object. </param>
            <param name="checkParentElementContexts"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
            <param name="drawParams"><see cref="T:Infragistics.Win.UIElementDrawParams"/></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.IntersectInvalidRect(System.Drawing.Rectangle)">
            <summary>
            Overridden. Returns the intersection of the element's rect with the invalid rect for the
            current draw operation.
            </summary>
            <param name="invalidRect">Invalid rect</param>
            <returns>The intersection of the element's rect with the invalid rect.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.Contains(System.Drawing.Point,System.Boolean)">
            <summary>
            Checks if the point is over the element. This may be 
            overridden in derived classes for specialized hit test logic.
            </summary>
            <param name="point">In client coordinates</param>
            <param name="ignoreClipping">Specifieds if we should ignore clipping or not</param>
            <returns>Returns true if the point is over the element.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.GetAdjustableCursor(System.Drawing.Point)">
            <summary>
            The cursor to use over the adjustable area of the element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.GetAdjustmentRange(System.Drawing.Point,Infragistics.Win.UIElementAdjustmentRangeParams@)">
            <summary>
            Returns the range limits for adjusting the element in either or both
            dimensions. It also returns the initial rects for the vertical and horizontal
            bars that will need to be inverted during the mouse drag operation.
            </summary>
            <param name="point">point</param>
            <param name="range">Returned limits</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.SupportsLeftRightAdjustmentsFromPoint(System.Drawing.Point)">
            <summary>
            Returns true if the element can be moved or resized horizontally
            by clicking on the passed in mouse point
            </summary>
            <param name="point">In client coordinates</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.SupportsUpDownAdjustmentsFromPoint(System.Drawing.Point)">
            <summary>
            Returns true if the element can be moved or resized vertically
            by clicking on the passed in mouse point
            </summary>
            <param name="point">In client coordinates</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Overridden OnDoubleClick.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden method. Has logic for column dragging.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.OnCaptureAborted">
            <summary>
            Overridden method.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeaderUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse up message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.Header">
            <summary>
            Returns the Header object associated with the UIElement. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Header</b> property of an object refers to a column or group header, as defined by an Header object. You use the <b>Header</b> property to access the properties of a specified Header object, or to return a reference to a Header object.</p>
            <p class="body">A Header object represents a column or group header that specifies information about the column or group, and can also serve as the interface for functionality such as moving, swapping or sorting the column or group. Group headers have the added functionality of serving to aggregate multiple columns under a single heading.</p> 
            <p class="body">The <b>Header</b> property provides access to the header that is associated with an object. In some instances, the type of header may be ambiguous, such as when accessing the <b>Header</b> property of a UIElement object. You can use the <b>Type</b> property of the Header object returned by the <b>Header</b> property to determine whether the header belongs to a column or a group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.ClipSelf">
            <summary>
            Returning true causes all drawing of this element to be expicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.Region">
            <summary>
            Returns the region of this element. The deafult returns the element's
            Rect as a region. This method can be overriden to supply an irregularly
            shaped region 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.Enabled">
            <summary>
            Gets whether this element is enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.Adjustable">
            <summary>
            CUIElementHeader:IsMoveable
            Returns true header can be resized
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.RequiresSeparator">
            <summary>
            Returns a boolean indicating if the item requires the rendering a separator.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.ActiveThemeMouseTracking">
            <summary>
            Indicates if the element supports hot tracking over the header.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.HeaderState">
            <summary>
            Indicates the state of the header.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeaderUIElement.SelectableItem">
            <summary>
            If the context for this element is a selectable item
            (e.g. a grid row, cell or header) it is returned. The
            default implementation walks up the parent chain calling
            this method recursively until a selectable item is found
            or the control element is reached
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Used by an element to render using the system theme. This method will not
            be invoked if the themes are not supported.
            </summary>
            <param name="drawParams">UIElementDrawParams</param>
            <returns>Returning true will prevent the invocation of the DrawBackColor,
            DrawImageBackground, DrawBorders, DrawImage and DrawForeground. Return
            false when themes are not supported by the element or if unable to 
            render using the system theme.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the
            element or null. 
            </summary> 
            <param name="type">The requested type or null to pick up default context object. </param>
            <param name="checkParentElementContexts"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CardLabelUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CardLabelUIElement.SelectableItem">
            <summary>
            If the context for this element is a selectable item
            (e.g. a grid row, cell or header) it is returned. The
            default implementation walks up the parent chain calling
            this method recursively until a selectable item is found
            or the control element is reached
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridCardSettings">
            <summary>
            Used to hold card view setting properties for a band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Constructor
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetCardScrollbars">
            <summary>
            Resets the CardScrollbars property to its default value of Horizontal
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetWidth">
            <summary>
            Resets Width to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetStyle">
            <summary>
            Resets Style to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetShowCaption">
            <summary>
            Resets ShowCaption to its default value (true).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetMaxCardAreaRows">
            <summary>
            Resets MaxCardAreaRows to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetMaxCardAreaCols">
            <summary>
            Resets MaxCardAreaCols to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetLabelWidth">
            <summary>
            Resets LabelWidth to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetCaptionLines">
            <summary>
            Resets CaptionLines to its default value (1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetCaptionField">
            <summary>
            Resets CaptionField to its default value (null).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetAutoFit">
            <summary>
            Resets AutoFit to its default value (false).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetAllowSizing">
            <summary>
            Resets AllowSizing to its default value (true).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ResetAllowLabelSizing">
            <summary>
            Resets AllowLabelSizing to its default value (true).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeCardScrollbars">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeWidth">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeStyle">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeShowCaption">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeMaxCardAreaRows">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeMaxCardAreaCols">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeLabelWidth">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeCaptionLines">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeAutoFit">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeAllowSizing">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeAllowLabelSizing">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShouldSerializeCaptionField">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ToString">
            <summary>
            Returns a null string
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.CaptionField">
            <summary>
            Returns or sets the name of the field used to supply the text for the caption area of a card.
            </summary>
            <remarks>
            <p class="body">When a band is displayed in card view, each card can display a caption. You can use the <b>CaptionField</b> property to specify the data field that will be used to set the caption text of the card. You can then choose whether or not to display that data field on the card itself. (Data displayed in the card's caption cannot be edited.)</p>
            <p class="body">If you want to set the card's caption to something other than the value of one of the data fields, you can do so through code in the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeRow"/> event. Simply set the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.CardCaption"/> property of the UltraGridRow object to the text you want to appear in the card's caption.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.AllowLabelSizing">
            <summary>
            Returns or sets whether card labels can be sized in the horizontal dimension.
            </summary>
            <remarks>
            <p class="body">You can determine whether the width of the label area can be changed by using the <b>AllowLabelSizing</b> property. If this property is set to allow label sizing, the user can resize the area occupied by the labels in card view by positioning their mouse pointer over the right edge of the label area then clicking and dragging to the left or right.</p>
            <p class="body">All labels which are displayed shared the same width. In a card view with standard labels, sizing the label area on any card will resize the label area used by all cards. (In merged label card view, only one label area exists.) You can determine which view is in effect by setting the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> property of the CardSettings object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.AllowSizing">
            <summary>
            Returns or sets whether cards can be sized in the horizontal dimension.
            </summary>
            <remarks>
            <p class="body">The <b>AllowResizing</b> property is used to determine whether the width of cards in the card view can be changed by the user. All cards in a band share the same width. Resizing a single card changes the with of all the cards.</p>
            <p class="body">If this property is set to allow card resizing, the user can resize a card's width by positioning the mouse pointer over the right edge of the card, then clicking and dragging to the left or right.</p>
            <p class="body">If this property is set to allow card resizing, the user can resize a card's width by positioning the mouse pointer over the right edge of the card, then clicking and dragging to the left or right.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.AutoFit">
            <summary>
            Returns or sets whether cards will be automatically increased in size to use all the width available in the card area.
            </summary>
            <remarks>
            <p class="body">When card view is used for a band, the cards that correpond to data records appear in a rectangular section of the grid called the card area. The horizontal size of the card area is determined by the number of cards being displayed, but it is also dependent on the visible size of the grid. The card area will always extend horizontally from its left origin to the right edge of the control. If there are more cards than can fit within the available area, a horizontal scroll bar appears.</p>
            <p class="body">Cards are arranged in the card area in one of three ways, depending on the setting of the <b>UltraGridCardSettings</b> object's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> property. However they are arranged, the number of cards that can fit within the visible card area is determined by the width of the cards themselves. (All cards share the same width.)</p>
            <p class="body">The <b>AutoFit</b> property specifies whether cards will expand to fill the card area based on their width. When <b>AutoFit</b> is True, the cards "snap" to specific size when being resized. The control calculates how many cards can fill the area and then divides their widths evenly, until the width is changed enough to alter the number of cards that will fit in the area.</p>
            <p class="body">For example, suppose you have a card view band that is displaying three "stacks" of cards, and has <b>AutoFit</b> set to True. The cards' width is set to take up one-third of the card area. Then, suppose click on the right edge of a card and begin reducing the width. At first, nothing will happen, as the width remains at one-third of the available card area width. However, as you pass a threshold point, the control will determine that four cards can be displayed in the card area, and the width of all cards will be changed to one-fourth of the card area's width. If you begin to widen the cards, four will be displayed horizontally until the threshold width is passed, when the display will snap to show three cards across.</p>
            <p class="body">If <b>AutoFit</b> is set to False, card width will not be automatically adjusted, and you will see blank parts of the card area where no cards are being displayed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.CaptionLines">
            <summary>
            Returns or sets the number of lines in a card's caption.
            </summary>
            <remarks>
            <p class="body">The <b>CaptionLines</b> property specifies the number of lines of text in the caption area of the cards in card view. The setting of this property applies to all cards in the band.</p> 
            <p class="body">The setting of this property allocates the space for the specified number of lines in the card caption. The caption area of the card will be enlarged vertically to accommodate the specified number of lines whether or not there is actually enough text to fill that many lines. Even cards with no text in their caption will display an area sufficient to show the specified number of lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.LabelWidth">
            <summary>
            Returns or sets the width of the card label area.
            </summary>
            <remarks>
            <p class="body">In standard card view, this is the width of the label area for each card. In merged card view, this is the width of the common label area. The setting of this property will change when the label area is resized by the user.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.MaxCardAreaRows">
            <summary>
            Returns or sets the maximum number of cards displayed in the vertical dimension within the card area.
            </summary>
            <remarks>
            <p class="body">When a band is in card view mode, the card area is the container for the cards that are displayed. The vertical size of the card area is fixed (the card area only scrolls horizontally) but it can be changed by the user. Clicking the bottom edge of the card area and dragging resizes the card area's vertical dimension.</p>
            <p class="body">The cards in the card area will re-arrange themselves when it is resized. By default, the control will display as many rows of cards as will fit in the space, based on the size of a card with all fields visible. Using the <b>MaxCardAreaRows</b> property, you can limit the number of rows of cards that will be displayed. Once the maximum number of rows are visible, further expanding the height of the card area will only reveal more blank space.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.MaxCardAreaCols">
            <summary>
            Returns or sets the maximum number of cards displayed in the horizontal dimension within the card area.
            </summary>
            <remarks>
            <p class="body">When a band is in card view mode, the <b>MaxCardAreaCols</b> property specifies the maximum number of "stacks" of cards that will be visible in the card area. This property applies to visibility only; it does not limit the number of cards that will be displayed.</p>
            <p class="body">The default behavior is to display as many cards as will fit within the width of the card area, based on the width of the cards. So for example, if you have a card area that is wide enough to display six card widths across, and you set <b>MaxCardAreaCols</b> to 4, only 4 cards across will be displayed at one time. You can then scroll horizontally to see more of the cards, but only four "stacks" of cards will be visible at once.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.ShowCaption">
            <summary>
            Returns or sets whether card captions should be displayed.
            </summary>
            <remarks>
            <p class="body">The text of the card caption is determined by the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.CaptionField"/><b>CaptionField</b> property of the <b>CardSettings</b> object or by setting the value of the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.CardCaption"/> property of the UltraGridRow object to the text you want to appear in the card's caption. You can also specify the height of the caption using the <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.CaptionLines"/> property.</p>
            <p class="body"><b>Note </b>In compressed card view style captions are always displayed and this property has no effect.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Width">
            <summary>
            Returns or sets the width of every card in the card area.
            </summary>
            <remarks>
            <p class="body">When a band is in card view mode, all the cards share a common width. The width of the card will depend on whether each card is displaying labels (as determined by the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> property) and may be affected by the setting of the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.AutoFit"/> property. By default, the user can resize the width of any card at run time, and all of the cards will be resized to use the new width.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style">
            <summary>
            Returns or sets the style of the card.
            </summary>
            <remarks>
            <p class="body">When you place a band in card view mode, the data from each row from that band is displayed as a card. These cards are arranged in a rectangular card view area, which replaces the row in the visible grid. The column headers of the band become the labels for the cards.  The cards are arranged in "stacks" or columns of cards, with each stack consisting of one or more "layers" or rows of individual cards. The <b>Style</b> property specifies how the cards will be arranged within the card view area.</p>
            <p class="body">There are three styles of card display. Standard Labels style displays the data labels on each card. Cards are arranged into columns (or "stacks") each having an identical number of rows of cards (or "levels") and each card is the the same height. In Merged Labels style, there is one area for labels on the left side of the card area and the cards themselves contain only the data. Merged Labels style also displays symmetrical stacks of cards with a fixed number of levels that share a common height.</p>
            <p class="body">When using the Variable Height style, labels are displayed on each card, but the height of the individual cards changes based on the contents of the card. If a data field has an empty value (a data value of DBNULL or an empty string for string fields) that field does not appear on the card. Note that when using  Variable Height style there is no way to add values to empty fields, since empty fields are inaccessible.</p>
            <p class="body">Each stack of cards in the Variable Height view style may contain a different number of levels, and the levels may not line up into neat rows and columns as they do with the other styles. Because the number of levels per stack is variable, there is a difference in the way certain properties are applied in this mode. For example, the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.MaxCardAreaRows"/> property determines the maximum number of levels that will be displayed based on the height of a theoretical stack made up of cards with all their fields visible, rather than on the height of any actual stack that is being displayed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.CardScrollbars">
            <summary>
            Specifies whether scrollbars in card-view are visible.
            </summary>
            <remarks>
            <p class="body">You can use <b>CardScrollbars</b> property to control the scrollbars in card area.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.CardScrollbars"/>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridCell">
            <summary>
            This class represents a cell in the grid (a specific column
            in a specific row)
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridCell.column">
            <summary>
            column this cell belongs to
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.OnDispose">
            <summary>
            Called when the object is disposed of.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.Infragistics#Shared#IKeyedSubObject#OnRemovedFromCollection(Infragistics.Shared.KeyedSubObjectsCollectionBase)">
            <summary>
            Called when this object is being removed from the passed
            in collection. This implementation does nothing.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.Infragistics#Shared#IKeyedSubObject#OnAddedToCollection(Infragistics.Shared.KeyedSubObjectsCollectionBase)">
            <summary>
            Called when this object is being added to the passed
            in collection. This implementation does nothing.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.ResolveAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the object.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraWinGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as UltraWinGrid.Appearance</p>
            <p class="code">Set objAppearance = UltraWinGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p> 
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the object.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraWinGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as Infragistics.Win.Appearance</p>
            <p class="code">Set objAppearance = UltraGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p> 
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.Refresh">
            <summary>
             Refreshes the row cache or the display, depending on the value of the Action parameter.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.GetText(Infragistics.Win.UltraWinMaskedEdit.MaskMode)">
            <summary>
            Returns the text for the object using the specified mask mode
            </summary>
            <remarks>
            <p class="body">There may be times when you need to work with the text of an object in a particular format, but do not wish to change the settings of any of the masking properties (<b>MaskClipMode</b>, <b>MaskDataMode</b> or <b>MaskDisplayMode</b>). For example, if you want to retrieve the text of an object with all literals and prompt characters intact, but don't want to change the way data will be sent to the the database and don't want to use the clipboard. This is the purpose of the <b>GetText</b> method.</p>
            <p class="body"><b>GetText</b> returns a string value, containing the text of the object, in the format you specify. When you invoke the <b>GetText</b> method, you pass it a <i>maskmode</i> parameter that determines how the object's text will be returned. This gives you the ability to bypass the settings of the object's masking properties and determine on an ad hoc basis whether to use prompt characters, literals or just the raw text the user has entered.</p>
            </remarks>
            <param name="maskMode"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CancelUpdate">
            <summary>
            Cancels the update of the row or cell when data has been changed (similar to pressing ESC).
            </summary>
            <remarks>
            <p class="body">When the <b>CancelUpdate</b> method is invoked for a cell, the cell's contents return to their original value. The <b>OriginalValue</b> property of the UltraGridCell can be used to determine what this value is before invoking the method.</p>
            <p class="body">When the <b>CancelUpdate</b> method is invoked for a row, any changes made to the cells of the active row are removed. The cells display their original values, and the row is taken out of edit mode. The row selector picture changes from the "Write" image <img src="row selector write.gif" width="21" height="19" align="baseline" border="0"></img> back to the "Current" image <img src="row selector current.gif" width="21" height="19" align="baseline" border="0"></img>.  The <b>DataChanged</b> property will be set to false.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
             Called when a property has changed on a sub object
            </summary>
            <param name="propChange"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            Returns the UIElement object that is associated with an object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body">The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UIElement object residing at specific coordinates.</p>
            <p class="body">The <b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement. </p>
            <p class="body">The <b>GetUIElement</b> method does not take into account the presence of a pop-up edit window or the drop-down portion of a combo if these elements are present, and will never return a UIElement that corresponds to one of these elements. The <b>GetUIElementPopup</b> method can be invoked to return a reference to a popup window's UIElement.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.Activate">
            <summary>
            Activates cell. 
            </summary>
            <returns>Returns true if the operation was cancelled.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.IsMergedWith(Infragistics.Win.UltraWinGrid.UltraGridCell)">
            <summary>
            Returns true if this cell is merged with the specified cell. If the specified cell is the same as this cell then returns true even if this cell is not merged with any other cell.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.GetMergedCells">
            <summary>
            Returns the cells that are merged with this cell, excluding this cell. If this cell is not merged with any other cell then returns null.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Band">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Appearance">
            <summary>  
            <see cref="T:Infragistics.Win.Appearance"/> 
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.HasAppearance">
            <summary>
            True if an appearance object has been allocated
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.ButtonAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the cells in this column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.DataChanged">
            <summary>  
            Returns a value that determines whether the data in a cell or row has been changed, but not committed to the data source. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns True when a cell or row's data has changed, but has not yet been committed to the data source; otherwise, it returns False.</p>
            <p class="body">When the value of a cell is changed, either programmatically by setting its <b>Value</b> property, or by user interaction, this property is set to True and the <b>BeforeCellUpdate</b> and <b>AfterCellUpdate</b> events are generated. Note that the cell's new value is not necessarily committed to the data source at this time, however, since various factors such as the type of record locking employed by the data source, as well as the value of the <b>UpdateMode</b> property, can affect when the actual update occurs. Once the data source is actually updated, the <b>BeforeRowUpdate</b> and <b>AfterRowUpdate</b> events are generated and this property is set back to False.</p>
            <p class="body">The <b>OriginalValue</b> property of the cell can be used to determine a cell's value before it was changed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.DroppedDown">
            <summary>  
            Returns or sets a value that determines whether a cell's dropdown list is displayed.
            </summary>
            <remarks>
            <p class="body">Use this property to cause a cell's dropdown list to be dropped down programmatically, or to determine whether the list is currently displayed.</p>
            <p class="body">When a cell's dropdown list is dropped down, the <b>BeforeCellListDropDown</b> event is generated.</p>
            <p class="body">When a cell's dropdown list is closed, the<b>AfterCellListCloseUp</b>event is generated.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Activation">
            <summary>  
            Returns or sets a value that determines how an object will behave when it is activated.
            </summary>
            <remarks>
            <p class="body">The <b>Activation</b> property of the UltraGridCell object is subordinate to the settings of the Activation properties of the UltraGridRow and UltraGridColumn objects that contain the cell. If either the cell's row or column has its <b>Activation</b> property set to False, the cell cannot be activated, regardless of its own setting for <b>Activation</b>. The setting of the other type of parent also has no effect; setting <b>Activation</b> to False on a cell's row makes the cell inactive regardless of the setting of its column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.IgnoreRowColActivation">
            <summary>
            Specifies whether to ignore the activation settings of the row and column for this cell. Normally if the row or column's Activation is set to Disabled, then the cell uses that even if the cell's Activation is set to something else. Basically the cell ends up using most restrictive of the activation settings. Setting this property to true will cause the cell to use it's Activation settings and ignore the row's and column's activation settings.
            </summary>
            <remarks>
            <p class="body">Specifies whether to ignore the activation settings of the row and column for this cell. Normally if the row or column's Activation is set to Disabled, then the cell uses that even if the cell's Activation is set to something else. Basically the cell ends up using most restrictive of the activation settings. Setting this property to true will cause the cell to use it's Activation settings and ignore the row's and column's activation settings.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Height">
            <summary>
            <see cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Height"/> 
            </summary> 
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Selected">
            <summary>  
            Returns or sets a value that determines whether the cell is selected.
            </summary>  
            <remarks>
            <p class="body">Setting the <b>Selected</b> property of an object causes it to become selected. This property can also be used to determine whether the object has been selected.</p>
            <p class="body">Depending on the settings of the selection style property that applies to this object (<b>SelectTypeCell</b>) and maximum selection property (<b>MaxSelectedCells</b>) changing the value of the <b>Selected</b> property may affect the selection of other objects within the band or the control.</p>
            <p class="body">For example, if <b>SelectTypeRow</b> is set to 2 (SelectTypeSingle) so that only one row may be selected at a time, when you set the <b>Selected</b> property of an UltraGridRow object to True, the <b>Selected</b> properies of all other UltraGridRow objects will be set to False. As another example, if you have set the <b>MaxSelectedRows</b> property to 3, then attempt to set the <b>Selected</b> property to True for four rows, a run-time error will occur when you set the <b>Selected</b> property to True for the fourth row.</p>
            <p class="body">When an object is selected or deselected, the <b>BeforeSelectChange</b> event is generated.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.TabStop">
            <summary>  
            Returns or sets a value that determines whether the user can give focus to an object by pressing the TAB key.
            </summary>  
            <remarks>
            <p class="body">Use this property to specify whether the user can navigate to a cell or the cells in a column by pressing the TAB key.</p>
            <p class="body">The <b>TabNavigation</b> property is used to specify how the control will respond when the TAB key is pressed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.IsTabStop">
            <summary>
            Whether this cell can be tabbed to (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Text">
            <summary>  
            Returns the text of the cell. If the cell is in edit mode, it returns the text in the editor being used for editing the cell.
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.OriginalValue">
            <summary>  
            Returns the original value of the cell. This property is read-only at run-time. This property is not available at design-time.
            </summary>  
            <remarks>
            <p class="body"><b>OriginalValue</b> returns the cell's original value before it was last set. NOTE: While in edit mode, <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Value"/> property returns the value in the binding list and not the current value in the editor control being used for editing the cell. For example, if the user enters edit mode on a cell with the value of 1 and changes the value to 2, <b>Value</b> property will still retrun 1. To get to the modified value use the underlying editor's value property. <b>OriginalValue</b> property returns the value of the cell before it's value was set last time.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Value">
            <summary>  
            Returns or sets the underlying data value of a cell. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">Use this property to retrieve or modify a cell's value. When the value of a cell is changed, the <b>BeforeCellUpdate</b> and the <b>AfterCellUpdate</b> events are generated and the cell's <b>DataChanged</b> property is set to True. Note that the cell's new value is not necessarily committed to the data source when this property is set, however, since various factors such as the type of record locking employed by the data source, as well as the value of the <b>UpdateMode</b> property, can affect when the actual update occurs.</p>
            <p class="body">The <b>OriginalValue</b> property of the cell can be used to determine the cell's value before it was changed.</p>
            <p class="body">The <b>GetText</b> method can be invoked to return the formatted value of a cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Width">
            <summary>  
            Returns or sets the width of an object in container units.
            </summary>
            <remarks>
            <p class="body">The <b>Width</b> property is used to determine the horizontal dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            </remarks>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.SelStart">
            <summary>  
            Returns or sets the starting point of text selected or the position of the insertion point if no text is selected in a cell being edited.
            </summary>
            <remarks>
            <p class="body">This property, in conjunction with the <b>SelLength</b> and <b>SelText</b> properties, is useful for tasks such as setting the insertion point, establishing an insertion range, selecting substrings, or clearing text in the cell being edited.</p>
            <p class="body">The valid range for this property is 0 to the length of the cell text. Attempting to set this property to a value outside that range will reset this property to the highest acceptable value.</p>
            <p class="body">This property can only be set or retrieved when the control is in edit mode, which can be determined by using the <b>IsInEditMode</b> property. If the control is in edit mode, the <b>ActiveCell</b> property can be used to determine which cell is currently being edited. If the control is not in edit mode, attempting to use this property will generate an error.</p>
            <p class="body">Setting this property changes the selection to an insertion point and sets the <b>SelLength</b> property to 0.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Activated">
            <summary>
            Indicates whether this is the active cell
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.SelLength">
            <summary>  
            Returns or sets the number of characters selected in a cell being edited.
            </summary>  
            <remarks>
            <p class="body">This property, in conjunction with the <b>SelStart</b> and <b>SelText</b> properties, is useful for tasks such as setting the insertion point, establishing an insertion range, selecting substrings, or clearing text in the cell being edited.</p>
            <p class="body">The valid range for this property is 0 to the length of the cell text. Attempting to set this property to a value outside that range will reset this property to the highest acceptable value.</p>
            <p class="body">This property can only be set or retrieved when the control is in edit mode, which can be determined by using the <b>IsInEditMode</b> property. If the control is in edit mode, the <b>ActiveCell</b> property can be used to determine which cell is currently being edited. If the control is not in edit mode, attempting to use this property will generate an error.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.SelText">
            <summary>  
            Returns or sets the selected text of the cell being edited. Note: The cell must be in edit mode and the editor being used for the cell must support selectable text. Otherwise this property will throw a NotSupportedException.
            </summary>
            <remarks>
            <p class="body">This property, in conjunction with the <b>SelLength</b> and <b>SelStart</b> properties, is useful for tasks such as setting the insertion point, establishing an insertion range, selecting substrings, or clearing text in the cell being edited.</p>
            <p class="body">Setting this property to a new value sets the <b>SelLength</b> property to 0 and replaces the selected text with the specified text.</p>
            <p class="body">This property can only be set or retrieved when the control is in edit mode, which can be determined by using the <b>IsInEditMode</b> property. If the control is in edit mode, the <b>ActiveCell</b> property can be used to determine which cell is currently being edited. If the control is not in edit mode, attempting to use this property will generate an error.</p>
            <p class="body">Note: Accessing this property will throw an exception if the cell is not in edit mode or the underlying editor being used does not support selectable text, that is its <see cref="P:Infragistics.Win.EmbeddableEditorBase.SupportsSelectableText"/> must return true.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.IsInEditMode">
            <summary>
            Returns a value that determines whether a cell in the grid is currently being edited. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property indicates whether a cell is in edit mode. The <b>ActiveCell</b> property can be used to determine which cell is in edit mode.</p>
            <p class="body">The <b>BeforeEnterEditMode</b> event is generated before a cell enters edit mode.</p>
            <p class="body">The <b>BeforeExitEditMode</b> event is generated before a cell exits edit mode.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.IsActiveCell">
            <summary>
            Property: Get IsActiveCell
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.InCommitEditValue">
            <summary>
            Returns true if we are in CommitEditValue method.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CanEnterEditMode">
            <summary>
            Returns true if the cell can enter edit mode
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Row">
            <summary>
            Returns the UltraGridRow object associated with the cell. This property is not available at design time. This property is read-only at run time.
            </summary>
            <remarks>
            <p class="body">The <b>Row</b> property of an object refers to a specific row in the grid as defined by an UltraGridRow object. You use the <b>Row</b> property to access the properties of a specified UltraGridRow object, or to return a reference to the UltraGridRow object that is associated with the current object.</p>
            <p class="body">An UltraGridRow object represents a single row in the grid that displays the data from a single record in the underlying data source. The UltraGridRow object is one mechanism used to manage the updating of data records either singly or in batches (the other is the UltraGridCell object). When the user is interacting with the grid, one UltraGridRow object is always the active row, and determines both the input focus of the grid and the position context of the data source to which the grid is bound.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Column">
            <summary>
            Returns the UltraGridColumn object associated with the cell. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Editor">
            <summary>
            Use this property to set the editor that will be used for rendering and editing the cell. This property returns null if it wasn't set to an editor before. By default, <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Editor"/> property off the associated column is used for rendering and editing the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.EditorResolved">
            <summary>
            Returns the editor used for rendering and editing the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.ValueList">
            <summary>
            Gets or sets the cell specific value list. Default is to use the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ValueList"/> off the associated column. If this property is not set to a value list, it returns null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.ValueListResolved">
            <summary>
            Retruns the resolved value list.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Style">
            <summary>
            Specifies the column style of the cell.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Style"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnStyle"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.StyleResolved">
            <summary>
            Returns the resolved style based on this value list settings of the cell and the column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.EditorControl">
            <summary>
            Control that implements IProvidesEmbeddableEditor. Attempt to set a control that
            does not implement IProvidesEmbeddableEditor interface will cause an exception.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.EditorControlResolved">
            <summary>
            Returns the resolved editor control. If the EditorControl property is set on the cell then it returns the value of that property otherwise it returns the value of the EditorControl property of the associated column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellDisplayStyle">
            <summary>
            Specifies what to display in cells associated with this column.
            </summary>
            <remarks>
            <p class="body"></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Hidden">
            <summary>
            Specifies whether the cell is hidden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.AccessibilityObject">
            <summary>
            Returns the accessible object representing the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.ToolTipText">
            <summary>
            Specifies the text to display in the tooltip that's displayed when the user hovers mouse over the cell.
            </summary>
            <remarks>
            <p class="body">Specifies the text to display in the tooltip that's displayed when the user hovers mouse over the cell.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TipStyleCell"/></p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject">
            <summary>
            The Accessible object for a cell.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraGridCell)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.GetMarshallingControl">
            <summary>
            Returns the control used to synchronize accessibility calls.
            </summary>
            <returns>A control to be used to synchronize accessibility calls.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>An AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (Nothing in Visual Basic) if no object is at the tested location.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.DefaultAction">
            <summary>
            Gets a string that describes the default action of the object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Help">
            <summary>
            Gets a description of what the object does or how the object is used.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Name">
            <summary>
            The accessible name for the data area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Value">
            <summary>
            Returns the caption
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridCell.CellAccessibleObject.Cell">
            <summary>
            Returns the associated cell.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellButtonUIElement">
            <summary>
            UI Element for displaying cell buttons
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellButtonUIElement.#ctor(Infragistics.Win.UltraWinGrid.CellUIElement)">
            <summary>
            Initializes a new <b>CellButtonUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellButtonUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            overridden initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellButtonUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellButtonUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellButtonUIElement.OnClick">
            <summary>
            overridden method to handle OnClick event
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellButtonUIElement.Column">
            <summary>
            Returns the UltraGridColumn object.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellButtonUIElement.Row">
            <summary>
            Returns the UltraGridColumn object.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellButtonUIElement.DrawsFocusRect">
            <summary>
            Returns true if this element needs to draw a focus rect. This should 
            be overridden since the default implementation always returns false. 
            </summary>
            <remarks>Even if this property returns true the focus will not be drawn unless the control has focus.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellButtonUIElement.IsPressed">
            <summary>
            Returns true if the button is currently pressed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.EditButtonUIElement">
            <summary>
            UI element that is used for displaying EditButton column style
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EditButtonUIElement.#ctor(Infragistics.Win.UltraWinGrid.CellUIElement)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EditButtonUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            overridden initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EditButtonUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EditButtonUIElement.OnClick">
            <summary>
            overridden method for handling OnClick event. It fires
            the OnButtonClick event on the grid
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EditButtonUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            no focus is drawn for a CellButtonUIElement
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.EditButtonUIElement.Column">
            <summary>
            Returns the UltraGridColumn object.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.EditButtonUIElement.Row">
            <summary>
            Returns the UltraGridColumn object.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.EditButtonUIElement.IsPressed">
            <summary>
            returns true if the button is pressed at the moment
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellsCollection">
            <summary>
            Returns a reference to a collection of Cell objects. This property is 
            read-only at run-time. This property is not available at design-time.
            </summary><remarks><para>This property returns a reference to a collection of 
            Cell objects that can be used to retrieve references to the Cell objects that, 
            for the Row object, belong to a row, or for the Selected object, are 
            currently selected. You can use this reference to access any of the returned 
            collection's properties or methods, as well as the properties or methods of 
            the objects within the collection.</para><para>For the Row object, the 
            returned collection provides a way to work with the cells that constitute 
            the row.</para><para>For the Selected object, as cells are selected and 
            deselected, their corresponding Cell objects are added to and removed from 
            the SelectedCells collection returned by this property. When a cell is 
            selected or deselected, the BeforeSelectChange event is generated.</para>
            <para>The Count property of the returned collection can be used to determine 
            the number of cells that either belong to a row or are currently 
            selected.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            constructor
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.HasCell(System.Int32)">
            <summary>
            Returns true if the cell has already been created for
            this column
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.HasCell(System.String)">
            <summary>
            Returns true if the cell has already been created for
            this column
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.HasCell(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Returns true if the cell has already been created for
            this column
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the item in the collection that has the
            passed in key or -1 if key not found.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.GetItem(System.String)">
            <summary>
            Returns the cell of the columns that has the key
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.GetItem(System.Int32)">
            <summary>
            Returns the cell at the specified index
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.SynchronizeWithColumnsColection">
            <summary>
            Set count to the columns count
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellsCollection.OnDispose">
            <summary>
            Overridden. Disposes cells contained in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.IsReadOnly">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.Item(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            indexer (by column)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellsCollection.Count">
            <summary>
            Overridden. Returns the number of elements in this collection.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellEnumerator">
            <summary>
            Enumerator for the CellsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellEnumerator.#ctor(Infragistics.Win.UltraWinGrid.CellsCollection)">
            <summary>
            constructor
            </summary>
            <param name="cells"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellEnumerator.#ctor(Infragistics.Win.UltraWinGrid.SelectedCellsCollection)">
            <summary>
            constructor
            </summary>
            <param name="cells"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next cell in the collection.
            </summary>
            <returns><b>True</b> if the enumerator was successfully advanced to the next element; <b>false</b> if the enumerator has passed the end of the collection</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellUIElement">
            <summary>
            The ui element class for representing cells.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Initializes a new <b>CellUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="column">Associated <b>Column</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element may not draw an image background
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element may not draw its back color
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default foreground rendering - does nothing
            </summary>
            <param name="drawParams"><see cref="T:Infragistics.Win.UIElementDrawParams"/></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the element or null. 
            </summary>
            <param name="type"></param>
            <param name="checkParentElementContexts"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.PositionImageElement(System.Drawing.Image,Infragistics.Win.ImageUIElement,System.Drawing.Rectangle,Infragistics.Win.HAlign,Infragistics.Win.VAlign)">
            <summary>
            Creates a new image element if passed in imageElem is null and assigns it to imageElem. It
            positions the passed in image in the rect keeping the aspect ratio. It sets the image elem's
            Rect property to the calculated rect of the image element.
            </summary>
            <param name="image"></param>
            <param name="imageElem"></param>
            <param name="workRect"></param>
            <param name="hAlign"></param>
            <param name="vAlign"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.IntersectInvalidRect(System.Drawing.Rectangle)">
            <summary>
            Returns the intersection of the element's rect with the invalid rect for the
            current draw operation.
            </summary>
            <param name="invalidRect">Invalid rect</param>
            <returns>The intersection of the element's rect with the invalid rect.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.Contains(System.Drawing.Point,System.Boolean)">
            <summary>
            Checks if the point is over the element. This may be 
            overridden in derived classes for specialized hit test logic.
            </summary>
            <param name="point">In client coordinates</param>
            <param name="ignoreClipping">Specifieds if we should ignore clipping or not</param>
            <returns>Returns true if the point is over the element.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            overridden initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnBeforeDraw">
            <summary>
            A virtual method that gets called before the element draw process starts.
            </summary>
            <remarks>This is for notification purposes, the default implementation does nothing.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnAfterDraw(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            A virtual method that gets called after the element draw operation finishes.
            </summary>
            <remarks>This is for notification purposes, the default implementation does nothing.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse up message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnClick">
            <summary>
            Overridden OnClick metod.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnMouseHover">
            <summary>
            overridden method called whenever the mouse hovers on the element
            it displays a tooltip for the cell
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnMouseEnter">
            <summary>
            Forces a redraw if activebuttons is true.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnMouseLeave">
            <summary>
            Forces a redraw if activebuttons is true.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnDispose">
            <summary>
            Overridden. Called when the element is disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.GetAdjustmentRange(System.Drawing.Point,Infragistics.Win.UIElementAdjustmentRangeParams@)">
            <summary>
            Returns the range limits for adjusting the element in either or both
            dimensions. It also returns the initial rects for the vertical and horizontal
            bars that will need to be inverted during the mouse drag operation.
            </summary>
            <param name="point">point</param>
            <param name="range">Returned limits</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.SupportsLeftRightAdjustmentsFromPoint(System.Drawing.Point)">
            <summary>
            Returns true if the element can be moved or resized horizontally
            by clicking on the passed in mouse point
            </summary>
            <param name="point">In client coordinates</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.SupportsUpDownAdjustmentsFromPoint(System.Drawing.Point)">
            <summary>
            Returns true if the element can be moved or resized vertically
            by clicking on the passed in mouse point
            </summary>
            <param name="point">In client coordinates</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.GetAdjustableCursor(System.Drawing.Point)">
            <summary>
            The cursor to use over the adjustable area of the element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Overridden OnDoubleClick.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.Row">
            <summary>
            The UltraGridRow object represents a row of data in the grid. An UltraGridRow corresponds to a single record in an underlying data source. This property is read-only at run-time.
            </summary>
            <remarks>
            <p class="body">The UltraGridRow object represents a single row of data, and corresponds to a single record in the underlying recordset. Rows occupy a position in the data hierarchy of the UltraWinGrid between Cells and Bands. The UltraGridRow object is always the child of an UltraGridBand object, and its children are UltraGridCell objects.</p>
            <p class="body">Much of the data-binding functionality of the grid involves working with the UltraGridRow object. Whenever an UltraGridRow object is loaded by the grid, the <b>InitializeRow</b> event is fired.</p>
            <p class="body">UltraGridRow objects can influence the formatting of the cells they contain through the setting of the UltraGridRow's <b>CellAppearance</b> property. Rows can also be formatted independently of the cells they contain. Frequently, cells are drawn from the top of the row to the bottom and are aligned edge to edge so that they occupy the entire area of the row; the row itself is not visible because cells are always "above" the row in the grid's z-order. However it is possible to specify spacing between and around cells that lets the underlying UltraGridRow object show through. Only then will formatting applied directly to the UltraGridRow object be visible to the user.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.Column">
            <summary>
            Returns the UltraGridColumn object. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.DrawsFocusRect">
            <summary>
            Returns true if this  element needs to draw a focus rect. This should 
            be overridden since the default implementation always returns false. 
            </summary>
            <remarks>Even if this property returns true the focus will not be drawn unless the control has focus.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.HasCell">
            <summary>
            Returns true if the cell has already been created for
            this column and row
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.Cell">
            <summary>
            Returns the cell associated with the object. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Cell</b> property of an object refers to a specific cell in the grid as defined by an UltraGridCell object. You use the <b>Cell</b> property to access the properties of a specified UltraGridCell object, or to return a reference to an UltraGridCell object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.IsElementDrawn">
            <summary>
            Overridden. Returns false if this cell element is under a merged cell element.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.ClipSelf">
            <summary>
            Returning true causes all drawing of this element to be expicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.Region">
            <summary>
            Returns the region of this element. The deafult returns the element's
            Rect as a region. This method can be overriden to supply an irregularly
            shaped region 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.BorderSides">
            <summary>
            Overridden property that returns an appropriate Border3DSide
            structure for drawing the borders for the cell UI element
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.WantsMouseHoverNotification">
            <summary>
            Return true if this element wants to be notified when the mouse hovers over it. This property is read-only.
            </summary>
            <remarks>Returns true since cell ui elemnts need MouseHover notifications for showing the tooltips.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.SelectableItem">
            <summary>
            Returns the row if cellClickAction is 'RowSelect', the cell otherwise.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.Adjustable">
            <summary>
            CUIElementHeader:IsMoveable
            Returns true header can be resized
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellUIElement.AccessibilityInstance">
            <summary>
            Returns the accesible object representing this row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridChildBand">
            <summary>
            The UltraGridChildBand object contains a collection of child row's from
            a single band with a common parent row. For example, if band 0 was   
            'Customers' and it had 2 child bands, say 'Orders' and 'Invoices'.
            Customer 12345 would have 2 UltraGridChildBand objects, one containing a
            collection of all of its orders and the other containing a collection
            of all of its invoices.  
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridChildBand.OnDispose">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridChildBand.Band">
            <summary>
            Returns the UltraGridBand that the object belongs to, if any. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Band</b> property of an object refers to a specific band in the grid as defined by an UltraGridBand object. You use the <b>Band</b> property to access the properties of a specified UltraGridBand object, or to return a reference to the UltraGridBand object that is associated with the current object.</p>
            <p class="body">UltraGridBand objects are the foundation of the hierarchical data structure used by UltraWinGrid. Any row or cell in the grid must be accessed through its UltraGridBand object. Bands are also used to apply consistent formatting and behavior to the rows that they comprise. An UltraGridBand object is used to display all the data rows from a single level of a data hierarchy. UltraGridBand objects contain multiple sets of child UltraGridRow objects that actually display the data of the recordset. All of the rows that are drawn from a single Command in the DataEnvironment make up a band.</p>
            <p class="body">The rows of a band are generally displayed in groups of one more in order to show rows from subsequent bands that are linked to rows in the current band via the structure of the data hierarchy. For example, if a hierarchical recordset has Commands that display Customer, Order and Order Detail data, each one of these Commands maps to its own UltraGridBand in the UltraWinGrid. The rows in the Customer band will appear separated by any Order data rows that exist for the customers. By the same token, rows in the Order band will be appear separated to make room for Order Detail rows. How this looks depends on the <b>ViewStyle</b> settings selected for the grid, but the concept of visual separation is readily apparent when the UltraWinGrid is used with any hierarchical recordset.</p>
            <p class="body">Although the rows in a band may appear to be separated, they are treated contiguously. When selecting a column in a band, you will see that the cells of that column become selected in all rows for the band, regardless of any intervening rows. Also, it is possible to collapse the hierarchical display so that any children of the rows in the current band are hidden.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridChildBand.ParentRow">
            <summary>
            Returns the parent row. 
            <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridRow"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridChildBand.Index">
            <summary>
            The index of this row in its parent collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridChildBand.Rows">
            <summary>
            The collection of child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridChildBand.Key">
            <summary>
            The internally assigned key value for the UltraGridChildBand. This key is the same as the key of the UltraGridBand object associated with this UltraGridChildBand object. The <b>Key</b> property is read-only for the <b>UltraGridChildBand</b> object.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ChildBandsCollection">
            <summary>
            This is a collection of all ChildBand objects that relate
            to a specific parent row.
            
            For example, if band 0 was 'Customers' and it had 2 child 
            bands, say 'Orders' and 'Invoices'. customer 12345 would 
            have 2 ChildBand objects, one containing a collection of 
            all of its orders and the other containing a collection
            of all of its invoices.  
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ChildBandsCollection.OnDispose">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.IsReadOnly">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.ParentRow">
            <summary>
            Returns the parent row. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.List">
            <summary>
            The list that contains the item references 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.Count">
            <summary>
            Returns the number of elements in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.Item(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            indexer (by band object)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.HasChildRows">
            <summary>
            Returns true if there are any rows in any of the
            childband rows collections
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.FirstRow">
            <summary>
            Returns the first child row (across child bands)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.LastRow">
            <summary>
            Returns the last child row (across child bands)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.Enumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandsCollection.AllowDuplicateKeys">
            <summary>
            Returns true if the collection allows 2 or more items to have the same key value.
            </summary>
            <remarks>
            In BandsCollection, this property is overridden to return true because we do
            want to allow different bands with the same keys in the collection.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ChildBandEnumerator">
            <summary>
            Enumerator for the ChildBandsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ChildBandEnumerator.#ctor(Infragistics.Win.UltraWinGrid.ChildBandsCollection)">
            <summary>
            constructor
            </summary>
            <param name="ChildBands"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ChildBandEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollbarUIElement">
            <summary>
            ColScrollbarUIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollbarUIElement.ColScrollRegion">
            <summary>
            Returns the ColScrollRegion object to which a UIElement belongs. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion to which the UIElement belongs. You can use this reference to access any of the returned colscrollregion's  properties or methods.</p>
            <p class="body">If the UIElement does not belong to a colscrollregion, Nothing is returned.</p>
            <p class="body">The <b>RowScrollRegion</b> property can be used to return a reference to a RowScrollRegion object to which a UIElement belongs.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollRegion">
            <summary>
            Defines a region that scrolls columns. Adjacent column scroll regions are separated by splitter bars.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ScrollRegionBase">
            <summary>
               Summary description for ScrollRegionBase.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.collectionValue">
            <summary>
            collections of scroll regions
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.scrollbarRectValue">
            <summary>
            scroll bar rectangle
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.scrollbarRectSet">
            <summary>
            indicates whether the scrollbarRect member var is set
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.scrollbarPositionDirty">
            <summary>
            internal flag used to indicate if the scrollbar position
            is dirty either resulting from rows being added or bands
            expanded
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.regenerating">
            <summary>
            internal flag indicating if rows/headers are being regenerated
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.originCached">
            <summary>
            internal flag indicating if origin is currently cached
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.scrolling">
            <summary>
            internal state flag indicating if scrolling is taking place
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.regeneratedDuringScrolling">
            <summary>
            internal flag indicating whether rows are being regenerated
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.eventInterrupted">
            <summary>
            internal flag indicating whether a event has be interrupted
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.dirtyGridElement">
            <summary>
            internal flag used for optimization purposes
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.cachedScrollOriginValue">
            <summary>
            internally used by scrolling code to cache scroll origin
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.extentLastResize">
            <summary>
            cached value for width of last scroll region resize
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.scrollBarInfoValue">
            <summary>
            scroll bar control for the scroll region
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollRegionBase.clonedFromRegion">
            <summary>
            If this instance is a clone, then clonedFromRegion references the instance
            that it was cloned from
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ShouldSerializeHidden">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ResetHidden">
            <summary>
            Resets Hidden to its default value (False.)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ShouldSerializeScrollbar">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ResetScrollbar">
            <summary>
            Resets Scrollbar to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ShouldSerializeSizingMode">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ResetSizingMode">
            <summary>
            Resets SizingMode to its default value (Free).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ResetScrollInfo">
            <summary>
            Abstract function that is overridden in ColScrollRegion 
            and RowScrollRegion to provide proper code for resetting
            the scroll information and scrollbar state
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ShowScrollbar(System.Boolean,System.Boolean)">
            <summary>
            Virtual method that is called from PositionScrollbar to 
            sshow/hide the scrollbar
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.Layout">
            <summary>
            Returns the Layout object that determines the layout of the object. This property is read-only at run-time.
            </summary>
            <remarks>
            <p class="body">The Layout property of an object is used to access the Layout object that determines the settings of various properties related to the appearance and behavior of the object. The Layout object provides a simple way to maintain multiple layouts for the grid and apply them as needed. You can also save grid layouts to disk, the registry or a storage stream and restore them later.</p>
            <p class="body">The Layout object has properties such as <b>Appearance</b> and <b>Override</b>, so the Layout object has sub-objects of these types, and their settings are included as part of the layout. However, the information that is actually persisted depends on how the settings of these properties were assigned. If the properties were set using the Layout object's intrinsic objects, the property settings will be included as part of the layout. However, if a named object was assigned to the property from a collection, the layout will only include the reference into the collection, not the actual settings of the named object. (For an overview of the difference between named and intrinsic objects, please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</p>
            <p class="body">For example, if the Layout object's <b>Appearance</b> property is used to set values for the intrinsic Appearance object like this:</p>
            <p class="code">UltraGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</p>
            <p class="body">Then the setting (in this case, <b>ForeColor</b>) will be included as part of the layout, and will be saved, loaded and applied along with the other layout data. However, suppose you apply the settings of a named object to the Layout's <b>Appearance</b> property in this manner:</p>
            <p class="code">UltraWinGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.Appearances("New1").ForeColor = vbBlue</p>
            <p class="code">UltraWinGrid1.Layout.Appearance = UltraWinGrid1.Appearances("New1")</p>
            <p class="body">In this case, the ForeColor setting will not be persisted as part of the layout. Instead, the layout will include a reference to the "New1" Appearance object and use whatever setting is present in that object when the layout is applied.</p>
            <p class="body">By default, the layout includes a copy of the entire Appearances collection, so if the layout is saved and restored using the default settings, the object should always be present in the collection when it is referred to. However, it is possible to use the <b>Load</b> and <b>Save</b> methods of the Layout object in such a way that the collection will not be re-created when the layout is applied. If this is the case, and the layout contains a reference to a nonexistent object, the default settings for that object's properties will be used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ClonedFrom">
            <summary>
            If this is a cloned region then ClonedFrom is the
            region it was cloned from
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.IsClone">
            <summary>
            True if this is a temporary clone of the region passed
            into one of the 'Before' scroll events 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.IsVerticalScrollbar">
            <summary>
            Returns true for regions with vertical scrollbars and
            false for regions with horizontal scrollbars
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.Origin">
            <summary>
            The origin of this ScrollRegionBase in client coordinates
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.IsFirstVisibleRegion">
            <summary>
            Returns true if this is the first visible region (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.IsLastVisibleRegion">
            <summary>
            Returns true if this is the last visible region (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.IsActiveScrollRegion">
            <summary>
            Returns true if this scroll region is active. In the case of the row scroll region returns 
            true if this instance is the same as the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveRowScrollRegion"/>. 
            Likewise for the column scroll region.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band. Also, changing the <b>Hidden</b> property of an object affects all instances of that object. For example, a hidden column or row is hidden in all scrolling regions.</p>
            <p class="body">There may be instances where the <b>Hidden</b> property cannot be changed. For example, you cannot hide the currently active rowscrollregion or colscrollregion. If you attempt to set the <b>Hidden</b> property of the active rowscrollregion to True, an error will occur.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.Rect">
            <summary>
            overall rect of this scroll region base
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.Scrollbar">
            <summary>
            Returns or sets a value that indicates whether a scroll bar will be displayed for a scrolling region.
            </summary>
            <remarks>
            <p class="body">This property determines whether a scroll bar should be displayed for a scrolling region.</p>
            <p class="body">When a colscrollregion is scrolled, the <b>BeforeColRegionScroll</b> event is generated. When a rowscrollregion is scrolled, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">A scrolling region can be scrolled programmatically, even if no scroll bars are displayed, by invoking its <b>Scroll</b> method.</p>
            <p class="body">The user can be prevented from scrolling a colscrollregion or rowscrollregion, even if its scroll bars are displayed, by setting the <i>cancel</i> argument of the <b>BeforeColRegionScroll</b> or <b>BeforeRowRegionScroll</b> event, respectively, to True.</p>
            <p class="body">The current, as well as maximum, position of a colscrollregion's scroll bar can be determined by its <b>Range</b> and <b>Position</b> properties, respectively.</p>
            <p class="body">The <b>ScrollBars</b> property can be used to set the value of the <b>ScrollBar</b> property for all colscrollregions and rowscrollregions that have their <b>ScrollBar</b> property set to 0 (ScrollBarDefault).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.SizingMode">
            <summary>
            Returns or sets a value that indicates whether the user can resize two adjacent scrolling regions with the splitter bar. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">When this property is set for a colscrollregion, it either frees or restricts the splitter bar between that colscrollregion and the one to its right, unless the current colscrollregion is the rightmost region, in which case the splitter bar between that colscrollregion and the one to its right is affected.</p>
            <p class="body">When a colscrollregion is sized, the <b>BeforeColRegionSize</b> event is generated.</p>
            <p class="body">When this property is set for a rowscrollregion, it either frees or restricts the splitter bar between that rowscrollregion and the one beneath it, unless the current rowscrollregion is the bottommost region, in which case the splitter bar between that rowscrollregion and the one above it is affected.</p>
            <p class="body">When a rowscrollregion is sized, the <b>BeforeRowRegionSize</b> event is generated.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.ScrollbarResolved">
            <summary>
            Returns the resolved scrollbar enumerator
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionBase.HasExclusiveItems">
            <summary>
            Returns true if this is an exclusive region
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.#ctor(System.Int32)">
            <summary>
            contructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ResetExclusiveWidth">
            <summary>
            Resets member variables at the start of a metrics recalc.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.GetClientHeight(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Returns the height of the client area of this region in container
            coords.
            </summary>
            <param name="rsr"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.GetClientWidth(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Returns the width of the client area of this region in container
            coords.
            </summary>
            <param name="rsr"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Returns the RowColRegionIntersectionUIElement object
            </summary>
            <param name="rsr">An optional RowScrollRegion. If 'null' will use the active RowScrollRegion. </param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.Scroll(Infragistics.Win.UltraWinGrid.ColScrollAction)">
            <summary>
            Scrolls a scrolling region by the specified increment.
            </summary>
            <remarks>
            <p class="body">Invoke this method to scroll a scrolling region.</p>
            <p class="body">When a colscrollregion is scrolled, the value of the colscrollregion's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated</p>
            <p class="body">The <b>ScrollCellIntoView</b>, <b>ScrollColIntoView</b>, <b>ScrollGroupIntoView</b>, <b>ScrollHeaderIntoView</b> and <b>ScrollRowIntoView</b> methods can be invoked to scroll an object into a scrolling region's viewable area. </p>
            </remarks>
            <param name="action"> </param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollCellIntoView(Infragistics.Win.UltraWinGrid.UltraGridCell,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Scrolls the specified cell into view for a scrolling region.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a cell is viewable in a column or row scrolling region.</p>
            <p class="body">If this method is invoked for a colscrollregion and the column is already in the viewable area of the region, this method does not perform any scrolling.</p>
            <p class="body">If the colscrollregion is scrolled as a result of invoking this method, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated. If the rowscrollregion is scrolled as a result of invoking this method, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollColIntoView</b>, <b>ScrollGroupIntoView</b>, <b>ScrollHeaderIntoView</b> and <b>ScrollRowIntoView</b> methods can also be invoked to scroll an object into a scrolling region's viewable area.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollCellIntoView(Infragistics.Win.UltraWinGrid.UltraGridCell,Infragistics.Win.UltraWinGrid.RowScrollRegion,System.Boolean)">
            <summary>
            Scrolls the specified cell into view for a scrolling region.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a cell is viewable in a column or row scrolling region.</p>
            <p class="body">If this method is invoked for a colscrollregion and the column is already in the viewable area of the region, this method does not perform any scrolling.</p>
            <p class="body">If the colscrollregion is scrolled as a result of invoking this method, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated. If the rowscrollregion is scrolled as a result of invoking this method, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollColIntoView</b>, <b>ScrollGroupIntoView</b>, <b>ScrollHeaderIntoView</b> and <b>ScrollRowIntoView</b> methods can also be invoked to scroll an object into a scrolling region's viewable area.</p>
            </remarks>
            <param name="cell"></param>
            <param name="rowScrollRegion"></param>
            <param name="leftAlign"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollColIntoView(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Scrolls the specified column into view for a colscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a column is viewable in a column scrolling region.</p>
            <p class="body">If the column is already in the viewable area of the column scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If the colscrollregion is scrolled as a result of invoking this method, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollCellIntoView</b>, <b>ScrollGroupIntoView</b> and <b>ScrollHeaderIntoView</b> methods can also be invoked to scroll an object into a colscrollregion's viewable area.</p>
            </remarks>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollColIntoView(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Scrolls the specified column into view for a colscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a column is viewable in a column scrolling region.</p>
            <p class="body">If the column is already in the viewable area of the column scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If the colscrollregion is scrolled as a result of invoking this method, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollCellIntoView</b>, <b>ScrollGroupIntoView</b> and <b>ScrollHeaderIntoView</b> methods can also be invoked to scroll an object into a colscrollregion's viewable area.</p>
            </remarks>
            <param name="column"> </param>
            <param name="leftAlign"> </param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollGroupIntoView(Infragistics.Win.UltraWinGrid.UltraGridGroup)">
            <summary>
            Scrolls the specified group into view for a colscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a group is viewable in a column scrolling region. If the group is already in the viewable area of the column scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If invoking this method does cause the column scrolling region to be scrolled, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollCellIntoView</b>, <b>ScrollColIntoView</b> and <b>ScrollHeaderIntoView</b> methods can also be invoked to scroll an object into a column scrolling region's viewable area.</p>
            </remarks>
            <param name="group"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollGroupIntoView(Infragistics.Win.UltraWinGrid.UltraGridGroup,System.Boolean)">
            <summary>
            Scrolls the specified group into view for a colscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a group is viewable in a column scrolling region. If the group is already in the viewable area of the column scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If invoking this method does cause the column scrolling region to be scrolled, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollCellIntoView</b>, <b>ScrollColIntoView</b> and <b>ScrollHeaderIntoView</b> methods can also be invoked to scroll an object into a column scrolling region's viewable area.</p>
            </remarks>
            <param name="group"></param>
            <param name="leftAlign"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ResetScrollInfo">
            <summary>
            sets the scroll information and scroll bar properties in accords with
            the state of the scroll region
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollHeaderIntoView(Infragistics.Win.UltraWinGrid.HeaderBase,System.Boolean)">
            <summary>
            Scrolls the specified header into view for a colscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a column or group header is viewable in a column scrolling region.</p>
            <p class="body">If the header is already in the viewable area of the column scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If the colscrollregion is scrolled as a result of invoking this method, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollCellIntoView</b>, <b>ScrollColIntoView</b> and <b>ScrollGroupIntoView</b> methods can also be invoked to scroll an object into a colscrollregion's viewable area.</p>
            </remarks>
            <param name="header"> </param>
            <param name="leftAlign"> </param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollRowIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Scrolls the specified row into view for a rowscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a row is viewable in a rowscrollregion.</p>
            <p class="body">If the row is already in the viewable area of the row scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If the rowscrollregion is scrolled as a result of invoking this method, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b> and <b>ScrollCellIntoView</b> methods can also be invoked to scroll an object into a rowscrollregion's viewable area.</p>
            </remarks>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ScrollRowIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Scrolls the specified row into view for a rowscrollregion.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a row is viewable in a rowscrollregion.</p>
            <p class="body">If the row is already in the viewable area of the row scrolling region, this method does not perform any scrolling.</p>
            <p class="body">If the rowscrollregion is scrolled as a result of invoking this method, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b> and <b>ScrollCellIntoView</b> methods can also be invoked to scroll an object into a rowscrollregion's viewable area.</p>
            </remarks>
            <param name="row"></param>
            <param name="rsr"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.Split">
            <summary>
            Splits a scrolling region into two scrolling regions. 
            </summary>
            <remarks>
            <p class="body">Invoke this method to split one scrolling region into two scrolling regions. This method returns a ColScrollRegion object or a RowScrollRegion object that corresponds to the new scrolling region that is created by the split.</p>
            <p class="body">ColScrollRegions are split from right to left, with the new region created by the split appearing to the left of the existing region. RowScrollRegions are split from bottom to top, with the new region created by the split appearing above the existing region.</p>
            <p class="body">Specifying <i>width</i> when splitting a ColScrollRegion will set the width of the new region (leftmost of the two resulting ColScrollRegions.) Specifying <i>height</i> when splitting a RowScrollRegion will set the height of the new region (topmost of the two resulting RowScrollRegions.)</p>
            <p class="body">When a ColScrollRegion is split, the <b>BeforeColRegionSplit</b> and the <b>AfterColRegionSplit</b> events are generated. When a RowsScrollRegion is split, the <b>BeforeRowRegionSplit</b> and the <b>AfterRowRegionSplit</b> events are generated.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.Split(System.Int32)">
            <summary>
            Splits a scrolling region into two scrolling regions. 
            </summary>
            <remarks>
            <p class="body">Invoke this method to split one scrolling region into two scrolling regions. This method returns a ColScrollRegion object or a RowScrollRegion object that corresponds to the new scrolling region that is created by the split.</p>
            <p class="body">ColScrollRegions are split from right to left, with the new region created by the split appearing to the left of the existing region. RowScrollRegions are split from bottom to top, with the new region created by the split appearing above the existing region.</p>
            <p class="body">Specifying <i>width</i> when splitting a ColScrollRegion will set the width of the new region (leftmost of the two resulting ColScrollRegions.) Specifying <i>height</i> when splitting a RowScrollRegion will set the height of the new region (topmost of the two resulting RowScrollRegions.)</p>
            <p class="body">When a ColScrollRegion is split, the <b>BeforeColRegionSplit</b> and the <b>AfterColRegionSplit</b> events are generated. When a RowsScrollRegion is split, the <b>BeforeRowRegionSplit</b> and the <b>AfterRowRegionSplit</b> events are generated.</p>
            </remarks>
            <param name="extent">Specifying 0 for extent will split the specified region in half. </param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Position">
            <summary>
            Returns or sets the position of a scroll bar in a colscrollregion. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The valid range for this property is from 0 to the value of the colscrollregion's <b>Range</b> property, inclusive. This property equals the <strong>Range</strong> property when the scroll bar is in its rightmost position.</p>
            <p class="body">In addition to using this property, a colscrollregion can be scrolled by invoking its Scroll method. When a colscrollregion is scrolled, the <b>BeforeColRegionScroll</b> event is generated.</p>
            <p class="body">A colscrollregion's scroll bar can be hidden by setting the colscrollregion's <b>ScrollBar</b> property to 3 (ScrollBarHide). When a colscrollregion's scroll bar is not displayed, the value of this property is  0.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.IsVerticalScrollbar">
            <summary>
            Returns false since this region has a horizontal scrollbar
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.IsActiveScrollRegion">
            <summary>
            Returns true if the column scroll region is the same instance as the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveColScrollRegion"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.VisibleHeaders">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Rect">
            <summary>
            The overall rect of this column scrolling region
            (spanning all row scrolling regions)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Height">
            <summary>
            Returns or sets the height of an object in container units.
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For the ColScrollRegion object, this property returns the height available to row data. This value excludes the height of the grid's outer border. The height occupied by the scrollbars does not affect the value of this property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Width">
            <summary>
            Returns or sets the width of an object in container units.
            </summary>
            <remarks>
            <p class="body">The <b>Width</b> property is used to determine the horizontal dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For the ColScrollRegion object, this property always includes the vertical scrollbar's <b>Width</b> for the RowScrollRegion.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Left">
            <summary>
            Returns the distance between the left edge of an object and the left edge of the control. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">For the ColScrollRegion object, the value returned is expressed in terms of the coordinate system specified by the control's container.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Range">
            <summary>
            Returns a scroll bar's maximum, or rightmost, position in a colscrollregion. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property indicates the value of a scroll bar's <b>Position</b> property when the scroll box is in its rightmost position.</p>
            <p class="body">The value of this property, itself, is the width of the area not in view in the colscrollregion, expressed in terms of the coordinate system set by the scale mode of the control's container.</p>
            <p class="body">When the total area is viewable in the colscrollregion, this value of this property is 0. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegion.Index">
            <summary>
            The index of this region in the col scroll regions collection
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollRegion.ColScrollRegionTypeConverter">
            <summary>
            ColScrollRegion type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ColScrollRegionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegion.ColScrollRegionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection">
            <summary>
            Collection of all column scrolling regions in a layout
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase">
            <summary>
            Collection of all row scrolling regions in a layout
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.Layout">
            <summary>
            Returns the Layout object that determines the layout of the object. 
            This property is read-only at run-time.
            </summary><remarks><para>The Layout property of an object is used to access 
            the Layout object that determines the settings of various properties 
            related to the appearance and behavior of the object. The Layout object 
            provides a simple way to maintain multiple layouts for the grid and 
            apply them as needed. You can also save grid layouts to disk, the 
            registry or a storage stream and restore them later.</para><para>The 
            Layout object has properties such as Appearance and Override, so the 
            Layout object has sub-objects of these types, and their settings are 
            included as part of the layout. However, the information that is 
            actually persisted depends on how the settings of these properties were 
            assigned. If the properties were set using the Layout object's intrinsic 
            objects, the property settings will be included as part of the layout. 
            However, if a named object was assigned to the property from a 
            collection, the layout will only include the reference into the collection, 
            not the actual settings of the named object. 
            (For an overview of the difference between named and intrinsic objects, 
            please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</para>
            <para>
            For example, if the Layout object's Appearance property is used to 
            set values for the intrinsic Appearance object like this:</para><pre>
            UltraGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</pre><para>
            Then the setting (in this case, ForeColor) will be included as part 
            of the layout, and will be saved, loaded and applied along with the 
            other layout data. However, suppose you apply the settings of a named 
            object to the UltraGridLayout's <b>Appearance</b> property in this manner:</para>
            <p class="code">UltraGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraGrid1.Appearances("New1").ForeColor = System.Drawing.Color.Blue</p>
            <p class="code">UltraGrid1.Layout.Appearance = UltraGrid1.Appearances("New1")</p>
            <para>In this case, the ForeColor setting will not be persisted as 
            part of the layout. Instead, the layout will include a reference to 
            the "New1" Appearance object and use whatever setting is present in 
            that object when the layout is applied.</para><para>By default, the 
            layout includes a copy of the entire Appearances collection, so if the 
            layout is saved and restored using the default settings, the object 
            should always be present in the collection when it is referred to. 
            However, it is possible to use the Load and Save methods of the Layout object 
            in such a way that the collection will not be re-created when the layout 
            is applied. If this is the case, and the layout contains a reference to 
            a nonexistent object, the default settings for that object's properties 
            will be used.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.ScrollRegionBaseEnumerator">
            <summary>
            inner class implements IEnumerator interface
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.ScrollRegionBaseEnumerator.#ctor(Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase)">
            <summary>
            constructor
            </summary>
            <param name="rowScrollRegions"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ScrollRegionsCollectionBase.ScrollRegionBaseEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.Add(System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.Clear">
            <summary>
             Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.OnDispose">
            <summary>
            Called when this object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.Remove(Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Remove a ColScrollRegion from a ColScrollRegions collection.
            </summary>
            <remarks>
            <p class="body">Use this method to remove a ColScrollRegion object from an ColScrollRegions collection.</p>
            <p class="body">Removing a colscrollregion from the control will cause the <b>BeforeColRegionRemoved</b> event to be generated.</p>
            <p class="body">To add a ColScrollRegion object to a ColScrollRegions collection, invoke the colscrollregion's <b>Split</b> method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.Reset">
            <summary>
            Resets all properties back to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.CopyTo(Infragistics.Win.UltraWinGrid.ColScrollRegion[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.IsReadOnly">
            <summary>
            overridden property that indicates whether this collection is
            read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.Item(System.Int32)">
            <summary>
            ColScrollRegion Indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.IsSplitBoxVisible">
            <summary>
            True if the splitter box to the left of the horizontal
            scrollbar is visible. This property is read-only and is 
            determined based on the number of ColScrollRegions
            and the value of the layout's <b>MaxColScrollRegions</b>
            property.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.InitialCapacity">
            <summary>
            
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.ColScrollRegionEnumerator">
            <summary>
            inner class implements IEnumerator interface
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.ColScrollRegionEnumerator.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection)">
            <summary>
            constructor
            </summary>
            <param name="colScrollRegions"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection.ColScrollRegionEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColSplitBoxUIElement">
            <summary>
            The element that appears to the left of the horizontal
            scrollbar that is used fro spliiting ColScrollRegions
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitBoxUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.ColScrollRegionsCollection)">
            <summary>
            contructor
            </summary>
            <param name="parent"></param>
            <param name="colScrollRegions"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitBoxUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden.
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitBoxUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitBoxUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColSplitBoxUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement">
            <summary>
            The element that appears to the left of the horizontal
            scrollbar that is used for spliiting ColScrollRegions
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden.
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="colScrollRegion">Associated <b>ColScrollRegion</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.SupportsLeftRightAdjustmentsFromPoint(System.Drawing.Point)">
            <summary>
            Returns true if the element can be moved or resized horizontally
            </summary>
            <param name="point">In client coordinates</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.ColScrollRegion">
            <summary>
            Returns the ColScrollRegion object to which a UIElement belongs. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion to which the UIElement belongs. You can use this reference to access any of the returned colscrollregion's  properties or methods.</p>
            <p class="body">If the UIElement does not belong to a colscrollregion, Nothing is returned.</p>
            <p class="body">The <b>RowScrollRegion</b> property can be used to return a reference to a RowScrollRegion object to which a UIElement belongs.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColSplitterBarUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridColumn">
            <summary>
            An object that represents a single column of data.
            </summary>
            <remarks>
            <p class="body">The <b>Column</b> property of an object refers to a specific column in the grid as defined by an UltraGridColumn object. You use the <b>Column</b> property to access the properties of a specified UltraGridColumn object, or to return a reference to an UltraGridColumn object.</p>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, dropdown list, calendar, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.String)">
            <summary>
            Constructor used only for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.String,System.Int32)">
            <summary>
            Constructor used only for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.String,System.Int32,System.Object)">
            <summary>
            Constructor used only for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.String,System.Int32,System.Object,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor used only for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.String,System.Int32,System.Object,System.Int32,Infragistics.Win.UltraWinGrid.SortIndicator,System.Boolean)">
            <summary>
            Constructor used only for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.String,System.Int32,System.Object,System.Int32,System.Int32,System.Int32,System.Int32,Infragistics.Win.UltraWinGrid.SortIndicator,System.Boolean)">
            <summary>
            Constructor used only for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.Reset">
            <summary>
            Resets the properties of the object to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeHidden">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetHidden">
            <summary>
            Resets Hidden to its default value (False.)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeHiddenWhenGroupBy">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetHiddenWhenGroupBy">
            <summary>
            Resets the property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeHeader">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetHeader">
            <summary>
            Resets Header to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeWidth">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetWidth">
            <summary>
            Resets Width to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeFormat">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetFormat">
            <summary>
            Resets Format to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeKey">
            <summary>
            Returns True if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetKey">
            <summary>
            Resets Key to its default value ("").
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeCellActivation">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetCellActivation">
            <summary>
            Resets Activation to its default value (Allow Edit).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeCellButtonAppearance">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetCellButtonAppearance">
            <summary>
            Resets CellButtonAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeValueList">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetValueList">
            <summary>
            Resets the ValueList property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeCellAppearance">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetCellAppearance">
            <summary>
            Reset Cells appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeAutoEdit">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetAutoEdit">
            <summary>
            Resets AutoEdit to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMinDate">
            <summary>
            Resets MinDate to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaxDate">
            <summary>
            Reset MaxDate to tis default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMinValue">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMinValue">
            <summary>
            Resets MinValue to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaxValue">
            <summary>
            Resets MaxValue to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaxValue">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeAutoSizeEdit">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetAutoSizeEdit">
            <summary>
            Resets AutoSizeEdit to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeButtonDisplayStyle">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetButtonDisplayStyle">
            <summary>
            Resets ButttonDisplayStyle to its default value (OnMouseEnter).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeCase">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetCase">
            <summary>
            Reset Case to its default value (unchanged).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeColSpan">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetColSpan">
            <summary>
            Resets ColSpan to its default value (1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaskClipMode">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaskClipMode">
            <summary>
            Resets MaskClipMode to its default value (raw data).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaskDataMode">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaskDataMode">
            <summary>
            Resets MaskDataMode to its default value (raw).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaskDisplayMode">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaskDisplayMode">
            <summary>
            Resets MaskDisplayMode to its default value (raw).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeUseEditorMaskSettings">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetUseEditorMaskSettings">
            <summary>
            Resets the UseEditorMaskSettings property to its default value of false.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeFieldLen">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetFieldLen">
            <summary>
            Reset FieldLen to its default value (0).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ConvertValueToDataType(System.Object)">
            <summary>
            Converts valueToConvert to the underlying data type of the column.
            If the column is bound, it will use the property descriptor's 
            PropertyType otherwise it will use the DataType.
            </summary>
            <returns>
            Returns the converted value, otherwise null if conversion was 
            unsuccessful.
            </returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeDataType">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetDataType">
            <summary>
            Resets DataType to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeProportionalResize">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetProportionalResize">
            <summary>
            Resets ProportionalResize to its default value (False).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeLevel">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetLevel">
            <summary>
            Resets Level to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeLockedWidth">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetLockedWidth">
            <summary>
            Reset LockedWidth to its default value (False).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaskLiteralsAppearance">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaskListeralsAppearance">
            <summary>
            Reset Cells appearance
            </summary>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaskLiteralsAppearance">
            <summary>
            Reset Cells appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaskInput">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaskInput">
            <summary>
            Resets MaskInput to its default value ("").
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeNullable">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetNullable">
            <summary>
            Resets Nullable to its default value (Automatic).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeNullText">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetNullText">
            <summary>
            Resets NullText to its default value ("null").
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormatWithMaskMode(System.String,Infragistics.Win.UltraWinMaskedEdit.MaskMode)">
            <summary>
            Formats the text with the MaskInput mask. If the column does not
            have any mask, then it returns text.
            </summary>
            <param name="text"></param>
            <param name="maskMode"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializePromptChar">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetPromptChar">
            <summary>
            Resets PromptChar to its default value (_).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializePadChar">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetPadChar">
            <summary>
            Resets PadChar to its default value ( ).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeSortIndicator">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetSortIndicator">
            <summary>
            Reset sort Indicator to none
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeStyle">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetStyle">
            <summary>
            Resets Style to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeTabStop">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetTabStop">
            <summary>
            Resets TabStop to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeVertScrollBar">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetVertScrollBar">
            <summary>
            Resets VertScrollBar to its default value (False).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMinWidth">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMinWidth">
            <summary>
            Resets MinWidth to its default value (0, meaning there is no minimum).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMaxWidth">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMaxWidth">
            <summary>
            Resets MaxWidth to its default value (0, meaning there is no minimum).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeCellMultiLine">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetCellMultiLine">
            <summary>
            Resets CellMultiLine to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.GetSynchedColsRightCoordRange(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Looks thru the linked list on synchronized columns and
            returns the min/max and curr right hand coord 
            </summary>
            <param name="rightMostCurr"></param>
            <param name="rightMostMin"></param>
            <param name="leftMostMax"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.RemoveFromLinkedList">
            <summary>
            used for keeping track of synced list
            removes this from the ColumnHeader liked lists
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.GetRelatedVisibleColumn(Infragistics.Win.UltraWinGrid.VisibleRelation)">
            <summary>
            Get the next/previous/first or last column in this band based on each column header's <see cref="P:Infragistics.Win.UltraWinGrid.ColumnHeader.VisiblePosition"/>.
            </summary>
            <param name="relation">The relation the requested column has to this colum.</param>
            <returns>The related column.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.InternalSwapPosition(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.PositionInfo,Infragistics.Win.UltraWinGrid.PositionInfo)">
            <summary>
            
            </summary>
            <param name="swapColumn"></param>
            <param name="thisColInfo"></param>
            <param name="swapColInfo"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeAllowRowFiltering">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetAllowRowFiltering">
            <summary>
            Resets AllowRowFiltering to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeAllowRowSummaries">
            <summary>
             Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetAllowRowSummaries">
            <summary>
            Resets AllowRowSummaries to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeIsGroupByColumn">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetIsGroupByColumn">
            <summary>
            Reset property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeAllowGroupBy">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetAllowGroupBy">
            <summary>
            Reset property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.GetMinWidth">
            <summary>
            Returns the minwidth value. If minwidth is zero it returns the default minimum
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize(System.Int32)">
            <summary>
            Resizes the column based on the cell values in first nRows rows in the band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize(Infragistics.Win.UltraWinGrid.RowsCollection,System.Int32)">
            <summary>
            Resizes the column based on the cell values in first nRows rows in the band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize(Infragistics.Win.UltraWinGrid.PerformAutoSizeType)">
            <summary>
            Resizes the column based on cell values in either currently visible rows or all rows depending on the value of autoSizeType argument.
            </summary>
            <param name="autoSizeType"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize">
            <summary>
            Resizes the column based on cell values in currently visible rows.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.CalculateAutoResizeWidth(Infragistics.Win.UltraWinGrid.PerformAutoSizeType,System.Boolean)">
            <summary>
            Calculates the autoresize width.
            </summary>
            <param name="autoSizeType">Auto-size type.</param>
            <param name="includeHeader">Whether to include the header width.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.CalculateAutoResizeWidth(System.Int32,System.Boolean)">
            <summary>
            Calculates the auto-size width of the column based on the cell values in first nRows rows in the band.
            </summary>
            <param name="nRows">Number of rows to base the auto-size calculations on.</param>
            <param name="includeHeader">Whether to include the header width.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ToString">
            <summary>
            Returns the key of the column
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeEditorControl">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetEditorControl">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetAutoSizeMode">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeAutoSizeMode">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeRowLayoutColumnInfo">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetRowLayoutColumnInfo">
            <summary>
            Resets the RowLayoutColumnInfo property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetCellDisplayStyle">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeCellDisplayStyle">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeDefaultCellValue">
            <summary>
            Returns true of the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetDefaultCellValue">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeShowInkButton">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetShowInkButton">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeShowCalculatingText">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetShowCalculatingText">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeFormula">
            <summary>
            Returns true if this property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetFormula">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeFormulaErrorValue">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetFormulaErrorValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaErrorValue"/> property to its default value of <b>null</b> (<b>Nothing</b> in VB).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeFormulaErrorAppearance">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetFormulaErrorAppearance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaErrorAppearance"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMergedCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMergedCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMergedCellContentArea">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMergedCellContentArea">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMergedCellStyle">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMergedCellStyle">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeMergedCellEvaluationType">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetMergedCellEvaluationType">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShouldSerializeSupportDataErrorInfo">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.ResetSupportDataErrorInfo">
            <summary>
            Resets the property to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Band">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band. Also, changing the <b>Hidden</b> property of an object affects all instances of that object. For example, a hidden column or row is hidden in all scrolling regions.</p>
            <p class="body">There may be instances where the <b>Hidden</b> property cannot be changed. For example, you cannot hide the currently active rowscrollregion or colscrollregion. If you attempt to set the <b>Hidden</b> property of the active rowscrollregion to True, an error will occur.</p>
            <p class="body">This property is ignored for chaptered columns; that is, columns whose <b>DataType</b> property is set to 136 (DataTypeChapter).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HiddenWhenGroupBy">
            <summary>
            Determines if this column will be hidden when it is a groupby column. 
            By default groupby columns are hidden.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByColumnsHidden"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Header">
            <summary>
            Returns the Header object associated with the column. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Header</b> property of an object refers to a column or group header, as defined by an Header object. You use the <b>Header</b> property to access the properties of a specified Header object, or to return a reference to an Header object.</p>
            <p class="body">A Header object represents a column or group header that specifies information about the column or group, and can also serve as the interface for functionality such as moving, swapping or sorting the column or group. Group headers have the added functionality of serving to aggregate multiple columns under a single heading.</p> 
            <p class="body">The <b>Header</b> property provides access to the header that is associated with an object. In some instances, the type of header may be ambiguous, such as when accessing the <b>Header</b> property of a UIElement object. You can use the <b>Type</b> property of the Header object returned by the <b>Header</b> property to determine whether the header belongs to a column or a group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Width">
            <summary>
            Determines the width of the column.
            </summary>
            <remarks>
            <p class="body">The <b>Width</b> property is used to determine the horizontal dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">When proportional resizing is used for the UltraGridColumn and UltraGridGroup objects, the width of the column increases or decreases proportionally as the area occupied by the column changes size, due to the resizing of adjacent columns or of the grid itself. This property is ignored for chaptered columns; that is, columns whose <b>DataType</b> property is set to 136 (DataTypeChapter).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Extent">
            <summary>
            Property: gets column extent
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.IsChaptered">
            <summary>
            Returns true if this is a chaptered column (represents a child
            set of rows)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.PropertyDescriptor">
            <summary>
            The property descriptor is used for data binding
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Level">
            <summary>
            Returns or sets the level of a band in which a column resides.
            </summary>
            <remarks>
            <p class="body">Typically, each data record in a band occupies a single row of the grid, with all of the cells stretching from left to right. In some circumstances, you may want to have a single record occupy more than one row. For example, if you have address data stored in a record, you may want to have the first and last name fields on one level, the street address on a second level, and city, state and postal code fields on a third level. The <b>LevelCount</b> property is used to specify how many levels of data a band will display for each record in the data source. The <b>Level</b> property is used to determine which level of the band a column occupies.</p>
            <p class="body">Levels work in conjunction with groups to create blocks of fields within a band. If you do not have any groups specified for a band, the <b>Level</b> property will have no effect. If one or more groups are specified (and column moving is enabled within the group or band) you can re-arrange fields vertically within the group by dragging their column headers to different levels.</p>
            <p class="body">This property is 0-based; to specify that a column should reside in the first level of a band, set this property to 0.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.IsFirstVisibleColumnOnLevel">
            <summary>
            Returns true if this is the first visible column on this level.
            Note: Multiple levels are only supported within groups.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Index">
            <summary>
            The index of this column in the band's column collection
            </summary>
            <remarks>
            <p class="body">The <b>Index</b> property is set by default to the order of the creation of objects in a collection. The index for the first object in a collection will always be zero.</p>
            <p class="body">The value of the <b>Index</b> property of an object can change when objects in the collection are reordered, such as when objects are added to or deleted from the collection. Since the <b>Index</b> property may change dynamically, it may be more useful to refer to objects in a collection by using its <b>Key</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Format">
            <summary>
            Returns or sets a string used to control the formatting of displayed text.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormatInfo"/>
            <remarks>
            <p class="body">The <b>Format</b> property is similar to the Visual Basic <b>Format</b> function, and supports all of the named arguments and literal strings supported by that function when the UltraGrid is being used in Visual Basic. In other host environments, the <b>Format</b> property provides a subset of the <b>Format</b> function's capabilites, including the use of named arguments.</p>
            <p class="body">The <b>Format</b> property applies only to cells that are not in edit mode.</p>
            <p class="body">For a list of the named formats that are supported by the <b>Format</b> property, see the <a href="ms-help://Infragistics.Win.UltraWinGrid.v3/Infragistics.Win.UltraWinGrid.v3/format_strings.htm">Format Strings</a> topic. There are predefined formats for <a href="ms-help://Infragistics.Win.UltraWinGrid.v3/Infragistics.Win.UltraWinGrid.v3/format_strings.htm#predefnum">numeric</a> and <a href="ms-help://Infragistics.Win.UltraWinGrid.v3/Infragistics.Win.UltraWinGrid.v3/format_strings.htm#predefdate">date/time</a> formats.</p>
            <p class="body">Literal strings (for example, "mm/dd/yy" ) are supported for date/time data types, but are not supported for numeric or boolean data types. Literal strings cannot contain "mixing" of characters, i.e., valid date characters and valid time characters cannot be intermingled within the same literal string. So, for example, "mm/dd/yyyy" is a valid string and "hh:nn:ss tt" is a valid string but "mm/dd/yy hh:nn:ss tt" is not valid.</p>
            <p class="body">If the data type of the value being displayed in the cell is date/time, literal format strings are first checked for the presence of the following characters: 'h', 'n', 's' and 't'. If the literal format string contains any of these characters, the format string is assumed to represent a time, and the data is formatted as such. In the absence of these characters, the literal format string is assumed to represent a date.</p>
            <p class="body">For a list of the characters used to construct a literal format string, refer to the <a href="ms-help://Infragistics.Win.UltraWinGrid.v3/Infragistics.Win.UltraWinGrid.v3/format_strings.htm">Format Strings</a> topic. You can construct <a href="ms-help://Infragistics.Win.UltraWinGrid.v3/Infragistics.Win.UltraWinGrid.v3/format_strings.htm#userdefnum">numeric</a> and <a href="ms-help://Infragistics.Win.UltraWinGrid.v3/Infragistics.Win.UltraWinGrid.v3/format_strings.htm#userdefdate">date/time</a> format strings using the information provided.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormatInfo">
            <summary>
            Gets or sets the culture specific information used to determine how values are formatted.
            </summary>
            <value>An object that implements the IFormatProvider interface, such as the CultureInfo class.</value>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Format"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.IsReadOnly">
            <summary>
            Returns whether the column is read only (based on its bindings)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Group">
            <summary>
            Returns or sets the UltraGridGroup object that the column is associated with. This property is not available at design-time. 
            </summary>
            <remarks>
            <p class="body">The <b>Group</b> property of an object refers to a specific group of columns in the grid as defined by an UltraGridGroup object. You use the <b>Group</b> property to access the properties of a specified UltraGridGroup object, or to return a reference to an UltraGridGroup object. An UltraGridGroup is a group of columns that appear together in the grid, and can be resized, moved or swapped together as a unit. Columns in the same group share a group header, and can be arranged into a multi-row layout within the group, with different columns occupying different vertical levels within a single row of data. UltraGridGroups also help with the logical arrangement of columns within the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.IsBound">
            <summary>
            Indicators whether this is a bound or unbound column.
            This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Key">
            <summary>
            Returns or sets a value that uniquely identifies an object in a collection.
            </summary>
            <remarks>
            <p class="body">The <b>Key</b> property is a unique, user-defined object identification string that can be used interchangeably with the <b>Index</b> of an object when accessing it through code. If you attempt to assign a value to the <b>Key</b> property is not unique in the collection, an error will occur.</p>
            <p class="body">The value of the <b>Index</b> property of an object can change when objects in the collection are reordered, such as when you add or remove objects. If you expect the <b>Index</b> property to change dynamically, refer to objects in a collection using the <b>Key</b> property. In addition, you can use the <b>Key</b> property to make your program "self-documenting" by assigning meaningful names to the objects in a collection.</p>
            <p class="body">You can set the <b>Key</b> property when you use the <b>Add</b> method to add an object to a collection. In some instances, the <b>Key</b> property of an object may be blank if that object does not appear in a collection.</p>
            <p class="body">Also, note that the uniqueness of keys is only enforced when the <b>Key</b> property is set to a value. If a collection supports objects with blank keys, that collection may contain multiple objects that whose <b>Key</b> property is empty. In that case, you must use <b>Index</b> property to differentiate between the objects that have blank keys.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellActivation">
            <summary>
            Returns or sets a value that determines how an object will behave when it is activated.
            </summary>
            <remarks>
            <p class="body">The <b>Activation</b> property of the UltraGridCell object is subordinate to the settings of the Activation properties of the UltraGridRow and UltraGridColumn objects that contain the cell. If either the cell's row or column has its <b>Activation</b> property set to False, the cell cannot be activated, regardless of its own setting for <b>Activation</b>. The setting of the other type of parent also has no effect; setting <b>Activation</b> to False on a cell's row makes the cell inactive regardless of the setting of its column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the cells in a band or the grid.
            <see cref="T:Infragistics.Win.Appearance"/>
            </summary>
            <remarks>
            <p class="body">The <b>CellAppearance</b> property is used to specify the appearance of all the cells in a band or the grid. When you assign an Appearance object to the <b>CellAppearance</b> property, the properties of that object will be applied to all the cells belonging to the object specified. You can use the <b>CellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the cells, for example:</p> 
            <p class="code">UltraWinGrid1.Override.CellAppearance.BackColor = vbYellow</p>
            <p class="body">Because you may want the cells to look different at different levels of a hierarchical record set, <b>CellAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different cell appearances for each band by assigning each Band object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the cells of that band will use the grid-level setting of <b>CellAppearance</b>.</p>
            <p class="body">You can override the <b>CellAppearance</b> setting for specific cells by setting the <b>Appearance</b> property of the UltraGridCell object directly. The cell will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>CellAppearance</b> property of the band it occupies.</p>
            <p class="body">If any of the properties of the Appearance object specified for the <b>CellAppearance</b> property are set to default values, the properties from the Appearance object of the row containing the cell are used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellButtonAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the cells in this column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HasCellButtonAppearance">
            <summary>
            Returns true if an CellButtonAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ValueList">
            <summary>
            Returns a reference to a ValueList object containing the list of values used by a column. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a ValueList object that can be used to set properties of, and invoke methods on, the valuelist that is associated with a column. You can use this reference to access any of the returned valuelist's properties or methods.</p>
            <p class="body">This property is also used to assign a particular valuelist object to a column. Once assigned, the valuelist enables a column to use the dropdown list styles and intelligent data entry, specified by the <b>Style</b> and <b>AutoEdit</b> properties, respectively, of the column for which this property is set.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HasValueList">
            <summary>
            Returns true if a ValueList object has been created
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HasCellAppearance">
            <summary>
            Returns true if an CellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AutoEdit">
            <summary>
            Determines if the column will support <b>AutoEdit</b> (automatic value completion).
            </summary>
            <remarks>
            <p class="body">This property applies only to columns that have their <b>ValueList</b> property set to a populated value list. When a list of pre-defined values exists for the column, setting the <b>AutoEdit</b> property to True will enable automatic edit value completion for the cells of that column, based on the values in the value list.</p>
            <p class="body">When <b>AutoEdit</b> is True and the user types a character in a cell's editing area, the control will search the contents of the ValueList to see if it contains a value that begins with the same character. If it does, this value will appear in the editing area, with all of its characters highlighted except the one that the user typed. If the user types a second character, the control will check to see if it is the next highlighted character is in the value that appeared. If it is, the value stays and the character typed becomes deselected. If the second character does not appear in the value, the control searches the ValueList again for a value that begins with the first two characters that were typed. If one exists, it appears in the edit area; otherwise the selected text is removed and no more searching takes place. This process continues until the user shifts the input focus away from the cell.</p>
            <p class="body"><div align="center"><img src="autoedit.gif" width="96" height="37" alt="" border="0"></img></div></p>
            <p class="body">If no ValueList is specified for the column, the <b>AutoEdit</b> property has no effect.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MinDate">
            <summary>
            Specifies the minimum date that may be entered in the cell. Only applies when the <b>Style</b> of the cell is set to StyleDropDownCalendar.
            </summary>
            <remarks>
            <p class="body">When you are using the dropdown calendar column style, you can use the <b>MinDate</b> property to specify the lower boundary for a date range that will be accepted by the control. When a date range is stipulated, and a date that is outside that range is entered or selected by the user, the <b>Error</b> event will fire when the cell loses focus. The dropdown calendar control that appears in columns with the appropriate style (StyleDropDownCalendar) will reject a date setting that occurs before the date specified by <b>MinDate</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaxDate">
            <summary>
            Specifies the maximum date that may be entered in the cell. Only applies when the <b>Style</b> of the cell is set to StyleDropDownCalendar
            </summary>
            <remarks>
            <p class="body">When you are using the dropdown calendar column style, you can use the <b>MaxDate</b> property to specify the upper boundary for a date range that will be accepted by the control. When a date range is stipulated, and a date that is outside that range is entered or selected by the user, the <b>Error</b> event will fire when the cell loses focus. The dropdown calendar control that appears in columns with the appropriate style (StyleDropDownCalendar) will reject a date setting that occurs after the date specified by <b>MaxDate</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MinValue">
            <summary>
            Specifies the minimum value that can be entered in the cell. Default value is null meaning no minimum constraint. The object assigned to this property should be the same type as the column's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.DataType"/> or compatible otherwise it won't be honored.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaxValue">
            <summary>
            Specifies the maximum value that can be entered in the cell. Default value is null meaning no maximum constraint. The object assigned to this property should be the same type as the column's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.DataType"/> or compatible otherwise it won't be honored.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AutoSizeEdit">
            <summary>
            Determines if the column will allow auto-expanding pop-up edit windows.
            </summary>
            <remarks>
            <p class="body">One of the features the UltraWinGrid offers is the ability to expand a cell when it is in edit mode to provide a greater area for the user to enter data. This is controlled by the <b>AutoSizeEdit</b> property. When set to True, text editing for any cell takes place in a pop-up window that expands to accommodate the amount of text being entered. When the user shifts the input focus away, the edit window disappears and the cell is shown normally.</p>
            <p class="body">The attributes of the pop-up edit window are determined by the properties of the <see cref="T:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs"/> object. Available properties let you specify the starting and maximum height and width of the pop-up window. This object is available only inside of the <b><see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeAutoSizeEdit"/></b> event, where it is accessed via the e object of the event.</p>
            <p class="body"><div align="center"><img src="autosize.gif" width="156" height="72" alt="" border="0"></img></div></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ButtonDisplayStyle">
            <summary>
            Returns or sets a value that determines how cell buttons are displayed for a column's cells.
            </summary>
            <remarks>
            <p class="body">This property is used to indicate how cell buttons are displayed for the cells of a column. Setting 1 (ButtonDisplayStyleAlways) always displays the buttons while the other settings cause the buttons to be displayed only as a result of user interaction with the control.</p>
            <p class="body">This property only has an effect if the column's <b>Style</b> property is set to 2 (StyleEditButton), 4 (StyleDropDown), 5 (StyleDropDownList), 6 (StyleDropDownValidate), 7 (StyleDropDownButton), or 8 (StyleDropDownCalendar).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Case">
            <summary>
            Returns or sets the case to use when editing or displaying column text.
            </summary>
            <remarks>
            <p class="body">The <b>Case</b> property specifies whether the column should display text in a specific case and change the case of the text being edited. This property actually changes the case of edited text; if you set <b>Case</b> to a non-zero value, any text you edit or enter will be stored in the database as either all uppercase or all lowercase. Note that while the text is displayed using the specified case, the changed case text is not committed back into the database unless a change is made to the value of the cell. Simply placing the cell into edit mode will not change the data to the displayed case.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ColSpan">
            <summary>
            Returns or sets a value that determines the number of columns to skip when synchronizing columns across multiple bands.
            </summary>
            <remarks>
            <p class="body">This property performs a function similar to the COLSPAN attribute used in HTML tables. <b>ColSpan</b> is commonly used with the multi-band vertical view style when a band is indented from its parent. You can use it to "unlock" column synchronization for the first column in the child band so that it does not become too narrow by aligning itself with the edge of a column that ends directly above it in the parent band.</p>
            <p class="body"><b>ColSpan</b> and column synchronization have no effect on bands that contain groups; only bands that do not have groups will participate in column synchronization.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaskClipMode">
            <summary>
            Returns or sets a value that determines how cell values for a column will be copied to the clipboard when data masking is in enabled.
            </summary>
            <remarks>
            <p class="body">This property is used to determine how mask literals and prompt characters are handled when the text of a masked cell is copied to the Windows clipboard. Based on the setting of this property, the text in the clipboard will contain no prompt characters or literals (just the raw data), the data and just the literals, the data and just the prompt characters, or all the text including both prompt characters and literals. The formatted spacing of partially masked values can be preserved by indicating to include literals with padding, which includes data and literal characters, but replaces prompt characters with spaces.</p>
            <p class="body">The <b>MaskInput</b> property is used to specify how data input will be masked for the cells in a column. The mask usually includes literal characters that are used to delimit the data entered by the user. This property has no effect unless the <b>MaskInput</b> property is set, meaning that data masking is enabled. </p>
            <p class="body">When data masking is enabled, the <b>MaskDataMode</b> property determines how cell values are stored by the data source, the <b>MaskDisplayMode</b> property indicates how cell values are displayed, and the <b>PromptChar</b> property specifies which character will be used to prompt the user to input data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaskDataMode">
            <summary>
            Returns or sets a value that determines how cell values for a column will be stored by the data source when data masking is enabled.
            </summary>
            <remarks>
            <p class="body">This property is used to determine how mask literals and prompt characters are handled when a cell values are stored by the data source. Based on the setting of this property, the text in the clipboard will contain no prompt characters or literals (just the raw data), the data and just the literals, the data and just the prompt characters, or all the text including both prompt characters and literals. The formatted spacing of partially masked values can be preserved by indicating to include literals with padding, which includes data and literal characters, but replaces prompt characters with spaces.</p>
            <p class="body">Generally, simply the raw data is committed to the data source and data masking is used to format the data when it is displayed. In some cases, however, it may be appropriate in your application to store mask literals as well as data.</p>
            <p class="body">The <b>MaskInput</b> property is used to specify how data input will be masked for the cells in a column. The mask usually includes literal characters that are used to delimit the data entered by the user. This property has no effect unless the <b>MaskInput</b> property is set, meaning that data masking is enabled.</p>
            <p class="body">When data masking is enabled, the <b>MaskClipMode</b> property determines how cell values are copied to the clipboard, the <b>MaskDisplayMode</b> property indicates how cell values are displayed, and the <b>PromptChar</b> property specifies which character will be used to prompt the user to input data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaskDisplayMode">
             <summary>
            Returns or sets a value that determines cell values will be displayed when the cells are not in edit mode and data masking is enabled.
             </summary>
             <remarks>
             <p class="body">This property is used to determine how mask literals and prompt characters are displayed when a cell is not in edit mode. Based on the setting of this property, the text in the clipboard will contain no prompt characters or literals (just the raw data), the data and just the literals, the data and just the prompt characters, or all the text including both prompt characters and literals. The formatted spacing of partially masked values can be preserved by indicating to include literals with padding, which includes data and literal characters, but replaces prompt characters with spaces.</p>
             <p class="body">Generally, prompt characters disappear when a cell is no longer in edit mode, as a visual cue to the user. In some cases, however, it may be appropriate in your application to display mask literals as well as data when a cell is no longer in edit mode.</p>
             <p class="body">The <b>MaskInput</b> property is used to specify how data input will be masked for the cells in a column. The mask usually includes literal characters that are used to delimit the data entered by the user. This property has no effect unless the <b>MaskInput</b> property is set, meaning that data masking is enabled. You should also note that masking can only be applied to single-line cells. If a cell is displaying ultiple lines of text, no masking will be applied to the cell.</p>
             <p class="body">When data masking is enabled, the <b>MaskClipMode</b> property determines how cell values are copied to the clipboard, the <b>MaskDataMode</b> property indicates how cell values are stored by the data source, and the <b>PromptChar</b> property specifies which character will be used to prompt the user to input data.</p>
             </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.UseEditorMaskSettings">
            <summary>
            Specifies whether to use the editor's mask related settings rather than the column's mask settings. Default value of this property is false.
            </summary>
            <remarks>
            <p class="body">By default the UltraGrid maskes use of MaskDataMode, MaskDisplayMode and MaskClipMode settings of the column ignoring any settings off the editor's default owner. This is due to the fact that the associated <b>MaskMode</b> enum doesn't have Default as its member. You can override this default behavior by setting this property to <b>true</b>. When this property is set to <b>true</b>, UltraGrid will always use the settings off the editor's owner. This fascilitates different mask data/display/clip modes on different cells of the same column by using the cell's Editor property and specifying the mask settings on the editors assigned to cells of the column. This property will also change the resolution order for MaskInput property. It will use the editor's MaskInput settings if they are non-nulls or else use the column's MaskInput settings.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FieldLen">
            <summary>
            Returns or sets the maximum length of the text that can be entered into a cell. Zero indicates that there is no limit.
            </summary>
            <remarks>
            <p class="body">The <b>FieldLen</b> property gives you the ability to limit the amount of text that can be entered in column cells. You can use this property to enforce database-specific or application specific limitations.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.DataType">
            <summary>
            Returns the column's underlying data type. This property is read-only for bound columns.
            </summary>
            <remarks>
            <p class="body">You can use this property to determine what type of data from the data source is expected or supplied by the field that is bound to the column. <b>DataType</b> values correspond to the standard data field types available through the data provider.</p>
            <p class="body">When this property is set to 136 (DataTypeChapter), the Hidden, Locked, Width, MinWidth, MaxWidth, and Selected properties are ignored for the column.</p>
            <p class="body">This property cannot be set to 72 (DataTypeGuid) or 136 (DataTypeChapter) for unbound columns.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ProportionalResize">
            <summary>
            Determines adjustment of column width when a group is resized.
            </summary>
            <remarks>
            <p class="body">When a group is resized, all columns with this property set to True and the <b>AllowColSizing</b> property of their band set to 2 (AllowColSizingSync) or 3 (AllowColSizingFree) will have their width's adjusted proportionally. If no columnin the group satisfies these conditions, the rightmost column in a band with its <b>AllowColSizing </b>property set to 2 (AllowColSizingSync) or 3 (AllowColSizingFree) will be adjusted when the group is resized.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.LockedWidth">
            <summary>
            Determines if the width of the column can be changed by the user.
            </summary>
            <remarks>
            <p class="body">You can use the <b>LockedWidth</b> property to disable user resizing of a column. Columns can still be resized through code even when this property is True. Note that setting this property to True may disable the resizing of other columns than the one specified. If the specified column is synchronized with a column in a child band, that column will also become locked. Similarly, setting the <b>LockedWidth</b> property to True for certain columns in a group may result in the user being unable to resize the group, depending on the position of the locked columns.</p>
            <p class="body">This property is ignored for chaptered columns; that is, columns whose <b>DataType</b> property is set to 136 (DataTypeChapter).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaskInput">
            <summary>
            Determines the input mask for the cell. Default is null.
            </summary>
            <remarks>
            <p class="body">When an input mask is defined, placeholders are defined by the <b>PromptChar</b> property. When inputting data, the user can only replace a placeholder with a character that is of the same type as the one specified in the input mask. If the user enters an invalid character, the control rejects the character and generates the <b>Error</b> event. The control can distinguish between numeric and alphabetic characters for validation, but cannot validate for valid content, such as the correct month or time of day.</p>
            <p class="body">When data masking is enabled, the <b>MaskClipMode</b> property determines how cell values are copied to the clipboard, the <b>MaskDataMode</b> property specifies how cell values are stored by the data source, and the <b>MaskDisplayMode</b> property indicates how cell values are displayed.</p>
            <p class="body">Data masking can only be used in cells that display a single line of text. If you have set a cell to display multiple lines of text, data masking will be disabled.</p>
            <p class="body">Default value for this property is null (Nothing in Visual Basic). When set to null, the grid cells will pickup any mask from the embeddable editor assigned to the column cells belong to. If this property is set to "" (empty string), then cells will not pickup any mask from the embeddable editors and default mask for the underlying editor will be used.</p>
            <p class="Body">The input mask can consist of the following characters:</p>
            <p>
            <table border="1" cellpadding="3" width="100%" class="FilteredItemListTable">
            <thead>
            <tr><td class="body" width="23%"><p>Character</p></td><td class="body" width="66%"><p>Description</p></td></tr></thead>
            <tbody>
            <tr><td class="body" width="23%"><p>#</p></td><td class="body" width="66%"><p>Digit placeholder. Character must be numeric (0-9) and entry is required. </p></td></tr>
            <tr><td class="body" width="23%"><p>.</p></td><td class="body" width="66%"><p>Decimal placeholder. The actual character used is the one specified as the decimal placeholder by the system's international settings. This character is treated as a literal for masking purposes. </p></td></tr>
            <tr><td class="body" width="23%"><p>,</p></td><td class="body" width="66%"><p>Thousands separator. The actual character used is the one specified as the thousands separator by the system's international settings. This character is treated as a literal for masking purposes.</p></td></tr>
            <tr><td class="body" width="23%">:</td><td class="body" width="66%">Time separator. The actual character used is the one specified as the time separator by the system's international settings. This character is treated as a literal for masking purposes</td></tr>
            <tr><td class="body" width="23%">/</td><td class="body" width="66%">Date separator. The actual character used is the one specified as the date separator by the system's international settings. This character is treated as a literal for masking purposes.</td></tr>
            <tr><td class="body" width="23%">\</td><td class="body" width="66%">Treat the next character in the mask string as a literal. This allows you to include the '#', '&amp;', 'A', and '?' characters in the mask. This character is treated as a literal for masking purposes.</td></tr>
            <tr><td class="body" width="23%">&amp;</td><td class="body" width="66%">Character placeholder. Valid values for this placeholder are ANSI characters in the following ranges: 32-126 and 128-255 (keyboard and foreign symbol characters).</td></tr>
            <tr><td class="body" width="23%"><img src="-gtsign.gif" width="10" height="14" alt="&gt;" border="0"></img></td><td class="body" width="66%">Convert all the characters that follow to uppercase.</td></tr>
            <tr><td class="body" width="23%"><img src="-ltsign.gif" width="10" height="14" alt="&lt;" border="0"></img></td><td class="body" width="66%">Convert all the characters that follow to lowercase.</td></tr>
            <tr><td class="body" width="23%">A</td><td class="body" width="66%">Alphanumeric character placeholder. For example: a-z, A-Z, or 0-9. Character entry is required.</td></tr>
            <tr><td class="body" width="23%">a</td><td class="body" width="66%">Alphanumeric character placeholder. For example: a-z, A-Z, or 0-9. Character entry is not required.</td></tr>
            <tr><td class="body" width="23%">9</td><td class="body" width="66%">Digit placeholder. Character must be numeric (0-9) but entry is not required.</td></tr>
            <tr><td class="body" width="23%">-</td><td class="body" width="66%">Minus sign when followed by a number section defined by series of 'n's (like in "-nn,nnn.nn") indicates that negative numbers are allowed. When not followed by a series of 'n's, it's taken as a literal. Minus sign will only be shown when the number is actually negative.</td></tr>
            <tr><td class="body" width="23%">+</td><td class="body" width="66%">Plus sign when followed by a number section defined by series of 'n's (like in "-nn,nnn.nn") indicates that negative numbers are allowed. However, it differs from '-' in the respect that it will always show a '+' or a '-' sign depending on whether the number is positive or negative.</td></tr>
            <tr><td class="body" width="23%">C</td><td class="body" width="66%">Character or space placeholder. Character entry is not required. This operates exactly like the '&amp;' placeholder, and ensures compatibility with Microsoft Access.</td></tr>
            <tr><td class="body" width="23%">?</td><td class="body" width="66%">Letter placeholder. For example: a-z or A-Z. Character entry is not required.</td></tr>
            <tr><td class="body" width="23%">Literal</td><td class="body" width="66%">All other symbols are displayed as literals; that is, they appear as themselves.</td></tr>
            <tr><td class="body" width="23%">n</td><td class="body" width="66%">Digit placeholder. A group of n's can be used to create a numeric section where numbers are entered from right to left. Character must be numeric (0-9) but entry is not required.</td></tr>
            <tr><td class="body" width="23%">mm, dd, yy</td><td class="body" width="66%">Combination of these three special strings can be used to define a date mask. mm for month, dd for day, yy for two digit year and yyyy for four digit year. Examples: mm/dd/yyyy, yyyy/mm/dd, mm/yy.</td></tr>
            <tr><td class="body" width="23%">hh, mm, ss, tt</td><td class="body" width="66%">Combination of these three special strings can be used to define a time mask. hh for hour, mm for minute, ss for second, and tt for AM/PM. Examples: hh:mm, hh:mm tt, hh:mm:ss.</td></tr>
            </tbody></table></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaskLiteralsAppearance">
            <summary>
            If the cell has MaskInput set or is using a UltraMaskedEdit control
            then this appearance will be applied to the literal chars while in
            edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HasMaskLiteralsAppearance">
            <summary>
            Returns true if an CellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Nullable">
            <summary>
            Determines how the control stores null or empty data in the database.
            </summary>
            <remarks>
            <p class="body">Different databases deal with null values in different ways. Since the UltraGrid is designed to work with a variety of data sources, it has the ability to query the back end and find out which way to store null values. Depending on the type of connection to the database, this can have a significant impact on performance. If you know how the database handles the storage of null values, you can improve performance by setting the <b>Nullable</b> property to either 1 (NullableNull) or 2 (NullableEmptyString). Setting this value to 0 (NullableAutomatic) will provide a greater range of compatibility, but performance will suffer.</p>
            <p class="body">If the database does not support null values, and you attempt to force the storage of nulls by setting <b>Nullable</b> to 1 (NullableNull), an error will result. If you encounter problems when you attempt to save a record that contains a null value, you can change the setting of <b>Nullable</b> which should fix the problem. In any case, you should implement error-checking code to insure that the storage operation succeeded.</p>
            <p class="body">The setting of this property controls how the UltraWinGrid control will attempt to store the null value. In some cases, the mechanism used for data binding may change the null value before actually committing it to the database.</p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.NullTextResolved">
            <summary>
            Returns the string that will actually be used for cells that are null in this column..
            </summary>
            <remarks>
            You can use this property to customize the text displayed to the user when a null value is present in a cell. For example, you may want the cell to display "(empty)" or "no value". The default setting for this property is "null".
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.NullText">
            <summary>
            Returns or sets the string displayed in cells with null values.
            </summary>
            <remarks>
            You can use this property to customize the text displayed to the user when a null value is present in a cell. For example, you may want the cell to display "(empty)" or "no value". The default setting for this property is "null".
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HasMask">
            <summary>
            Whether this columns has a mask
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.PromptChar">
            <summary>
            Returns or sets a value that determines the prompt character used during masked input.
            </summary>
            <remarks>
            <p class="body">Use this property to set the character used to indicate that user input is required at a specific location in the input mask. Although you can use any character, the standard input prompt character is the underscore.</p>
            <p class="body">This property will only accept a single character. If an attempt is made to assign a multi-character string to it, an error will occur.</p>
            <p class="body">The <b>MaskInput</b> property is used to specify how data input will be masked for the cells in a column. The mask usually includes literal characters that are used to delimit the data entered by the user. This property has no effect unless the <b>MaskInput</b> property is set, meaning that data masking is enabled.</p>
            <p class="body">When data masking is enabled, the <b>MaskClipMode</b> property determines how cell values are copied to the clipboard, the <b>MaskDataMode</b> property indicates how cell values are stored by the data source, and the <b>MaskDisplayMode</b> property specifies how cell values are displayed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.PadChar">
            <summary>
            Determines the pad character used for formatting text with mask
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.GroupByEvaluator">
            <summary>
            Property used to do non-default group by comparisons. 
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HiddenWhenGroupBy"/>
            <remarks>
            <p>This GroupByEvaluator object will be used for determining which rows are included in group by rows.</p>
            <p></p>
            <p>Care should be taken to ensure that the GroupByEvaluator is logically consistent with the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.SortComparer"/>. For example, if the sort comparer does a case insensitive sort the group by evaluator logic should be case-insensitive as well.</p>
            <p>The following example shows how to implement a IGroupByEvaluator so that rows are grouped by the 1st 2 characters of a string field:</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.GroupByComparer">
            <summary>
            Property used for specifying a customer comparer to sort group-by rows.
            </summary>
            <remarks>
            <p>This IComparer instance will be used for sorting group-by rows associated with this column if this column were a group-by column.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.GroupByEvaluator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.SortComparer"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.SortComparer">
            <summary>
            Property used to do non-default sort comparisons. 
            </summary>
            <remarks>
            This SortComparer object will be used for sorting the rows by this column. 
            <p></p>
            <p>The values passed in the ICompare.Compare will be UltraGridCell objects needing comparison.</p>
            <p></p>
            <p>Care should be taken to ensure that the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.GroupByEvaluator"/> is logically consistent with the <b>SortComparer</b>. For example, if the sort comparer does a case insensitive sort the group by evaluator logic should be case-insensitive as well.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.SortIndicator">
            <summary>
            Returns or sets a value that indicates the sorted order of the column.
            </summary><remarks><para>The UltraGrid can automatically sort the contents of 
            columns without the addition of any code. While the UltraGrid can sort the data 
            in columns automatically, it also gives you to tools to implement your own sorting 
            behavior through code.</para>
            <para>Column headers can display a sort indicator in a column's 
            header. When clicked and the <b>HeaderClickAction</b> property is set to  
            HeaderClickAction.SortSingle or HeaderClickAction.SortMulti, the 
            <b>SortIndicator</b> property is set to specify the order in which the column 
            should be sorted, and the column is added to a special Columns collection 
            just for sorted columns. If automatic sorting is disabled, in addition to 
            adding the column to the Columns collection accessed by <b>SortedCols</b>, the 
            control fires the <b>BeforeSortChange</b> and <b>AfterSortChange</b> events so that you 
            can examine the contents of the collection, check the value of the 
            <b>SortIndicator</b> property of each column, and perform the sort.</para></remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Style">
            <summary>
            Determines the style of the column.
            </summary>
            <remarks>
            <p class="body">This property specifies what type of cell will be used to display and input data for the column.</p>
            <p class="body">The setting of this property for a column may affect other aspects of the control's operation. For example, using one of the dropdown styles requires the <b>ValueList</b> property of the column to be set in order to fill the dropdown list with text. It will also cause the <b>CellListSelect</b> event to be fired whenever an item is selected from the list. Similarly, setting this property to one of the button styles will cause the control to fire the <b>ClickCellButton</b> event.</p>
            <p class="body"><div align="center"><img src="colstyles.gif" width="444" height="172" alt="" border="0"></img></div></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.TabStop">
            <summary>
            Determines if the cells in the column can get focus when tabbing through the columns.
            </summary>
            <remarks>
            <p class="body">Use this property to specify whether the user can navigate to a cell or the cells in a column by pressing the TAB key.</p>
            <p class="body">The <b>TabNavigation</b> property is used to specify how the control will respond when the TAB key is pressed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.VertScrollBar">
            <summary>
            Returns or sets a value that determines if a vertical scrollbar is displayed in a multiline cell.
            </summary>
            <remarks>
            <p class="body">This property can be used to allow the user to scroll a column whose cells contain too much text to be displayed at once.</p>
            <p class="body">If the <b>CellMultiLine</b> property, which is used to indicate whether a cell's text should be displayed in multiple lines, is set to False for the column, this property is ignored.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MinWidth">
            <summary>
            Returns or sets the minimum width for a column.
            </summary>
            <remarks>
            <p class="body">The <b>MinWidth</b> property limits the width of the object to no less than the value specified. Setting the value of <b>MinWidth</b> to 0 indicates that there is no minimum width limit for the object, although a 120 twip minimum is imposed system-wide.</p>
            <p class="body">You cannot set <b>MinWidth</b> to a value greater than that specified by the <b>MaxWidth</b> property.</p>
            <p class="body">This property is ignored for chaptered columns; that is, columns whose <b>IsChaptered</b> property returns <b>true</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MaxWidth">
            <summary>
            Returns or sets the maximum width of the object in container units.
            </summary>
            <remarks>
            <p class="body">The <b>MaxWidth</b> property limits the width of the object to no more than the value specified. Setting the value of <b>MaxWidth</b> to 0 indicates that there is no maximum width limit for the object, or that the object's width is limited only by available screen area.</p>
            <p class="body">If the object has a <b>MinWidth</b> property, you cannot set <b>MaxWidth</b> to a value less than that specified by the <b>MinWidth</b> property.</p>
            <p class="body">This property is ignored for chaptered columns; that is, columns whose <b>IsChaptered</b> property returns <b>true</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellMultiLine">
            <summary>
            Determines if the cell's data should be displayed in a multi-line format.
            </summary>
            <remarks>
            <p class="body">This property controls the display of multiple lines of text in edit cells in the band or the grid controlled by the specified override. When True, text will wrap in the area of the cell. If the <b>RowSizing</b> property is set to automatically resize the row, the row will expand in height until all lines of text are displayed (or the number of lines specified by the <b>RowSizingAutoMaxLines</b> property is reached).</p>
            <p class="body">The <b>CellMultiLine</b> property does not pertain to multi-line editing, only display. Also, you should note that setting a cell to multi-line mode will disable data masking. Only single-line cells can be masked (using the <b>MaskInput</b> and <b>MaskDisplayMode</b> properties.)</p>
            <p class="body"><div align="center"><img src="multiline.gif" width="96" height="63" alt="" border="0"></img></div></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellMultiLineResolved">
            <summary>
            Returns the resolved value, if the band's Override value 
            is default it will call the Layout's GetDefaultCellMultiLine 
            method.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Layout">
            <summary>
            Returns the UltraGridLayout object that determines the layout of the object. 
            This property is read-only at run-time.
            </summary><remarks><para>The <b>Layout</b> property of an object is used to access 
            the UltraGridLayout object that determines the settings of various properties 
            related to the appearance and behavior of the object. The UltraGridLayout object 
            provides a simple way to maintain multiple layouts for the grid and 
            apply them as needed. You can also save grid layouts to disk, the 
            registry or a storage stream and restore them later.</para><para>The 
            UltraGridLayout object has properties such as Appearance and Override, so the 
            UltraGridLayout object has sub-objects of these types, and their settings are 
            included as part of the layout. However, the information that is 
            actually persisted depends on how the settings of these properties were 
            assigned. If the properties were set using the UltraGridLayout object's intrinsic 
            objects, the property settings will be included as part of the layout. 
            However, if a named object was assigned to the property from a 
            collection, the layout will only include the reference into the collection, 
            not the actual settings of the named object. 
            (For an overview of the difference between named and intrinsic objects, 
            please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</para></remarks><example><para>
            For example, if the UltraGridLayout object's Appearance property is used to 
            set values for the intrinsic Appearance object like this:</para><pre>
            UltraGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</pre><para>
            Then the setting (in this case, ForeColor) will be included as part 
            of the layout, and will be saved, loaded and applied along with the 
            other layout data. However, suppose you apply the settings of a named 
            object to the SSLayout's Appearance property in this manner:</para>
            <pre>SSUltraGrid1.Appearances.Add "New1"
            SSUltraGrid1.Appearances("New1").ForeColor = vbBlue
            SSUltraGrid1.Layout.Appearance = SSUltraGrid1.Appearances("New1")</pre>
            <para>In this case, the ForeColor setting will not be persisted as 
            part of the layout. Instead, the layout will include a reference to 
            the "New1" Appearance object and use whatever setting is present in 
            that object when the layout is applied.</para><para>By default, the 
            layout includes a copy of the entire SSAppearances collection, so if the 
            layout is saved and restored using the default settings, the object 
            should always be present in the collection when it is referred to. 
            However, it is possible to use the Load and Save methods of the UltraGridLayout object 
            in such a way that the collection will not be re-created when the layout 
            is applied. If this is the case, and the layout contains a reference to 
            a nonexistent object, the default settings for that object's properties 
            will be used.</para></example>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AllowRowFiltering">
            <summary>
            Set this to DefaultableBoolean.False to explicitly disable
            row filtering on this column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AllowRowSummaries">
            <summary>
            Indicates whether to allow the user to be able to specify a summary for this column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AllowGroupByResolved">
            <summary>
            Determines whether columns from this band can be dragged into
            the GroupByBox to become GroupBy columns. If resolved to default
            will assume 'Yes'.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AllowGroupBy">
            <summary>
            Determines whether columns from this band can be dragged into
            the GroupByBox to become GroupBy columns. If resolved to default
            will assume 'Yes'.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.IsGroupByColumn">
            <summary>
            Indicates whether rows are grouped by this column or not.
            (Whether this is a group by column or not).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.TempIsGroupByColumn">
            <summary>
            This property is used by SortedColumnsCollection logic for
            adding a groupby column
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.EditorOwnerInfo">
            <summary>
            Returns an object that can be used to information about a value from the owner.
            </summary>
            <remarks>This is an instance of a class that the owner derives from EditorOwnerInfoBase.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Editor">
            <summary>
            Gets or sets the editor that this column will use for editing and
            displaying cells. By default or when it's assigned null it will get 
            the editor from the EditorControl property.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.EditorControl">
            <summary>
            Control that implements IProvidesEmbeddableEditor. Attempt to set a control that
            does not implement IProvidesEmbeddableEditor interface will cause an exception.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#IValueListsCollectionProvider#Control">
            <summary>
            Returns the grid control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#IValueListsCollectionProvider#ValueLists">
            <summary>
            Returns the value lists off the display layout if one has been created. Null otherwise.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.AutoSizeMode">
            <summary>
            Specifies column autosizing mode. If <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowColSizing"/> is set to None, then this is ignored.
            </summary>
            <remarks>
            <p class="body">
            When set the None, the user is not allowed to auto resize a column. If set to VisibleRows, then the column is resized based on the data in the visible rows. If set to SiblingRowsOnly, then the column is autoresized based on data in all the sibling rows. If set to AllRowsInBand, then the column is auto resized based on data in all rows in the band.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo">
            <summary>
            Gets the instance of RowLayoutColumnInfo associated with this column.
            </summary>
            <remarks>
            <p>You can set various properties in the returned object to customize where the cell associated with this column shows up.</p>
            <p>By default all the columns are visible. Set <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Hidden"/> to true to hide the column.</p>
            <p>Set <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout"/> property to true to turn on the row-layout functionality.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.IsVisibleInLayout">
            <summary>
            Indicates whether this column is visible in row-layout mode.
            </summary>
            <remarks>
            <p class="body">Set <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Hidden"/> to true to hide a column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#ILayoutItem#IsVisible">
            <summary>
            Indicates whether this column is visible.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#Anchor">
            <summary>
            If the display area of the item is larger than the item, this property indicates where to anchor the item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#Fill">
            <summary>
            <p>Fill indicates whether to resize the item to fill the extra spance if the layout item's display area is larger than its size,</p> 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#Insets">
            <summary>
            Indicates the padding around the layout item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#OriginX">
            <summary>
            <p>OriginX and OriginY define where the layout item will be placed in the virtual grid of the grid-bag layout. OriginX specifies the location horizontally while specifies the location vertically. These locations are the coordinates of the cells in the virtual grid that the grid-bag layout represents.</p>
            <p>The leftmost cell has OriginX of 0. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/> specifies that the item be placed just to the right of the item that was added to the layout manager just before this item was added. </p>
            <p>The default value is <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/>. OriginX should be a non-negative value.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#OriginY">
            <summary>
            <p>OriginX and OriginY define where the layout item will be placed in the virtual grid of the grid-bag layout. OriginX specifies the location horizontally while specifies the location vertically. These locations are the coordinates of the cells in the virtual grid that the grid-bag layout represents.</p>
            <p>The topmost cell has OriginY of 0. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/> specifies that the item be placed just below the item that was added to the layout manager just before this item was added.</p>
            <p>The default value is <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/>. OriginY should be a non-negative value.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#SpanX">
            <summary>
            <p>Specifies the number of cells this item will span horizontally. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Remainder"/> specifies that this item be the last one in the row and thus occupy remaining space.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#SpanY">
            <summary>
            <p>Specifies the number of cells this item will span vertically. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Remainder"/> specifies that this item be the last one in the column and thus occupy remaining space.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#WeightX">
            <summary>
            Indicates how the extra horizontal space will be distributed among items. Default value is 0.0. Higher values give higher priority. The weight of the column in the virtual grid the grid-bag layout represents is the maximum WeightX of all the items in the row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Infragistics#Win#Layout#IGridBagConstraint#WeightY">
            <summary>
            Indicates how the extra vertical space will be distributed among items. Default value is 0.0. Higher values give higher priority. The weight of the column in the virtual grid the grid-bag layout represents is the maximum WeightY of all the items in the column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellSizeResolved">
            <summary>
            Resolved cell size. This property returns the actual width and the height of the cells associated with the column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.CellDisplayStyle">
            <summary>
            Specifies what to display in cells associated with this column.
            </summary>
            <remarks>
            <p class="body"></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.DefaultCellValue">
            <summary>
            Gets or sets the default cell value that will be assigned when new rows are added via the add-row feature or the add-new box.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShowInkButton">
            <summary>
            Specifies whether ink buttons get shown in cells.
            </summary>
            <remarks>
            <p class="body">You can use <b>ShowInkButton</b> property to explicitly turn on or turn off inck buttons.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ShowCalculatingText">
            <summary>
            Specifies whether cells or summaries in the column will display "#Calculating" in when calculating with an UltraCalcManager.
            </summary>
            <remarks>
            <p class="body">You can use <b>ShowCalculatingText</b> property to explicitly turn on or turn off the display of the text during calculations.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Formula">
            <summary>
            Specifies the formula. <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property must be set to a valid instance of <see cref="T:Infragistics.Win.CalcEngine.IUltraCalcManager"/> for this property to have any affect.
            </summary>
            <remarks>
            <p class="body">Note: <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property must be set to a valid instance of <see cref="T:Infragistics.Win.CalcEngine.IUltraCalcManager"/> for this property to have any affect.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.Formula"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaValueConverter">
            <summary>
            Interface for providing custom logic for converting formula results and the formula source values.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaErrorValue">
            <summary>
            Specifies the value to assign to the data source if the column’s formula evaluates to an error. If the column doesn’t have Formula set, this property is ignored.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaErrorAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the cells containing formula errors.
            </summary>
            <remarks>
            <p class="body">The <b>FormulaErrorAppearance</b> property is used to specify the appearance of the cells with formula errors.</p> 
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FormulaErrorAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the merged cells.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellContentArea"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellStyle"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellContentArea">
            <summary>
            Specifies whether to position the contents of a merged cell in the entire area of the merged cell or just the visible area of the merged cell. Default is resolved to <b>VirtualRect</b>.
            </summary>
            <remarks>
            <b class="body">Specifies whether to position the contents of a merged cell in the entire area of the merged cell or just the visible area of the merged cell. Default is resolved to <b>VirtualRect</b>.</b>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellStyle">
            <summary>
            Specifies if and how cell merging is performed. Default is resolved to Never.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellContentArea"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellEvaluationType">
            <summary>
            Specifies whether to merge cells based on their values or display text.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellStyle"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellEvaluator">
            <summary>
            Used for specifying custom logic for determining which cells should merge.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.SupportDataErrorInfo">
            <summary>
            Specifies whether to make use of IDataErrorInfo interface implemented on the underlying row objects to display error info in the associated cells.
            </summary>
            <remarks>
            <p class="body">Specifies whether to make use of IDataErrorInfo interface implemented on the underlying row objects to display error info in the associated cells.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowSelectorAppearance"/></p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridColumn.UltraGridColumnTypeConverter">
            <summary>
            UltraGridColumn type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.UltraGridColumnTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.UltraGridColumnTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.UltraGridColumnTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns property descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.IGroupByEvaluator">
            <summary>
            Interface to be used for determining how rows are grouped.
            </summary>
            <remarks>
            <p>The following example shows how to implement a IGroupByEvaluator so that rows are grouped by the 1st 2 characters of a string field:</p>
            <p></p>
            <pre>
            private void ultraGrid1_InitializeLayout(object sender, Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs e)
            {
            	// set the view style to outlook group by
            	e.Layout.ViewStyleBand = ViewStyleBand.OutlookGroupBy;
            	
            	Infragistics.Win.UltraWinGrid.UltraGridColumn column;
            	
            	// get the CompanyName column
            	column = e.Layout.Bands[0].Columns["CompanyName"];
            
            	// set the GroupByEvaluator on the column to an instance of MyGroupByEvaluator 
            	column.GroupByEvaluator = new MyGroupByEvaluator();
            
            	// set the column's HiddenWhenGroupBy property to false since we are
            	// grouping by the 1st 2 characters of each string we want the full
            	// company name to show in each row
            	//
            	column.HiddenWhenGroupBy = DefaultableBoolean.False;
            }
            
            public class MyGroupByEvaluator : Infragistics.Win.UltraWinGrid.IGroupByEvaluator
            {
            	public object GetGroupByValue( UltraGridGroupByRow groupbyRow, UltraGridRow row )
            	{
            		string val;
            
            		// get the default value from the groupbyRow
            		if (groupbyRow.Value == null )
            			val = "";
            		else
            			val = groupbyRow.Value.ToString();
            
            		// if it is longer than 2 characters truncate it
            		if ( val.Length > 2 )
            			val = val.Substring( 0, 2 );
            
            		// Convert the string to uppercase for display 
            		// in the groupbyrow description.
            		return val.ToUpper();
            	}
            
            	public bool DoesGroupContainRow( UltraGridGroupByRow groupbyRow, UltraGridRow row )
            	{
            		// get the related cell's value as a string
            		string cellValue = row.Cells[groupbyRow.Column].Value.ToString();
            
            		// if it is longer than 2 characters truncate it
            		if ( cellValue.Length > 2 )
            			cellValue = cellValue.Substring(0, 2);
            
            		// Do a case insensitive compare
            		return string.Compare(groupbyRow.Value.ToString(), cellValue, true) == 0;
            	}
            }
            </pre>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.IGroupByEvaluator.GetGroupByValue(Infragistics.Win.UltraWinGrid.UltraGridGroupByRow,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Returns the value that will be used to initialize a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow"/>
            </summary>
            <param name="groupByRow">The new group by row.</param>
            <param name="row">The first row to be included in a new group by row.</param>
            <returns>The value to use as the new group by row's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Value"/>.</returns>
            <remarks>
            <p>In order to keep the default value use the following code:</p>
            <p></p>
            <pre>
            public object GetGroupByValue( UltraGridGroupByRow groupByRow, UltraGridRow row )
            {
            	return groupByRow.Value;
            }
            </pre>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.IGroupByEvaluator.DoesGroupContainRow(Infragistics.Win.UltraWinGrid.UltraGridGroupByRow,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Method for determining if a row should be included in a group by row.
            </summary>
            <param name="groupByRow">The group by row that contains other rows.</param>
            <param name="row">The row to be tested</param>
            <returns>True if the row should be considered part of this group.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnUITypeEditor">
            <summary>
            UITypeEditor for the UltraGridColumn objects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Used to determine the type of UIEditor to display.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>Enum specifying the type of editor to display.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Used to edit and convert the value as needed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">Current value</param>
            <returns>Edited value</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnDataTypeUITypeEditor">
            <summary>
            UITypeEditor for selecting the data type of unbound columns.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnDataTypeUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Used to edit the value and convert the value as needed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">Current value</param>
            <returns>Edited value.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.IMergedCellEvaluator">
            <summary>
            Interface that can be implemented to specify custom logic for determining which cells get merged.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellEvaluator"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.IMergedCellEvaluator.ShouldCellsBeMerged(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Returns true if the cells of row1 and row2 associated with the column should be merged.
            </summary>
            <param name="row1"></param>
            <param name="row2"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Design.ColumnEditorControlReferenceConverter">
            <summary>
            ReferenceConverter used for Column's EditorControl property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.ColumnEditorControlReferenceConverter.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.ColumnEditorControlReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a value indicating whether a particular value can be added to the standard values collection.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns>true if the value is allowed and can be added to the standard values collection; false if the value cannot be added to the standard values collection.</returns>
            <remarks>
            This reference converter is used for column's EditorControl property. This method returns true for values implementing <see cref="T:Infragistics.Win.IProvidesEmbeddableEditor"/> ineterface and returning an instance of <see cref="T:Infragistics.Win.EmbeddableEditorBase"/> through the <see cref="P:Infragistics.Win.IProvidesEmbeddableEditor.Editor"/> property that supports rendering the column's data type.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.ColumnEditorControlReferenceConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns false so the expansion indicator doesn't show up in the property grid. 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnEditorDialog">
            <summary>
            Summary description for ColumnEditorDialog.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnEditorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnEditorDialog.#ctor(Infragistics.Win.UltraWinGrid.ColumnsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="columns">ColumnsCollection</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnEditorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnEditorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnFilter">
            <summary>
            ColumnFilter class
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFilter.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.FilterLogicalOperator)">
            <summary>
            Constructor.
            </summary>
            <param name="column">This column's values will be compared against the filter conditions in this column filter.</param>
            <param name="logicalOperator">How to combine the filter conditions in this column filter.</param>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.ColumnFilter.FilterConditions"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterLogicalOperator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFilter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFilter.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFilter.Column">
            <summary>
            Returns the column that will be used to get the associated value in
            rows when evaluating filter conditions.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFilter.FilterConditions">
            <summary>
            Filter conditions that will be evaluated when filtering rows.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFilter.LogicalOperator">
            <summary>
            LogicalOperator that will be used for combining FilterConditions.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection">
            <summary>
            ColumnFiltersCollection class. UltraGridBand.ColumnFilters and RowsCollection.ColumnFilters return objects of this type.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Constructor
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the item in the collection that has the
            passed in key or -1 if key not found.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.GetItem(System.String)">
            <summary>
            Returns the cell of the columns that has the key
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.GetItem(System.Int32)">
            <summary>
            Returns the cell at the specified index
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.ClearAllFilters">
            <summary>
            Clears filters associated with all the columns.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.InitialCapacity">
            <summary>
            Property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.IsReadOnly">
            <summary>
            Returns true if the collection is read-only. This is used
            to make the All property read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.Count">
            <summary>
            Overridden. Returns the count.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnFiltersCollection.Item(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            indexer (by column)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnHeader">
            <summary>
            The class represents the header for a specific column
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.OnDispose">
            <summary>
            Called when the object is disposed of.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.StartDragNoSelection(System.Boolean)">
            <summary>
            start a drag operation on the single column
            </summary>
            <param name="isGroupByButton">whether we are 
            dragging a GroupByButton in a group by box</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.StartDrag">
            <summary>
            start a drag operation on column
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.RemoveFromCollection(Infragistics.Win.UltraWinGrid.Selected)">
            <summary>
            Removes itself to passed-in collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ShouldSerializeVisiblePosition">
            <summary>
            Returns true if the visible position doesn't match the column index
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.Band">
            <summary>
            The header owner's band object. This property
            is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.Draggable">
            <summary>
            Property: Returns true only if Draggable
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.Group">
            <summary>
            Returns the UltraGridGroup object that the object is associated with.  This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Group</b> property of an object refers to a specific group of columns in the grid as defined by an UltraGridGroup object. You use the <b>Group</b> property to access the properties of a specified Group object, or to return a reference to a Group object. A Group is a group of columns that appear together in the grid, and can be resized, moved or swapped together as a unit. Columns in the same group share a group header, and can be arranged into a multi-row layout within the group, with different columns occupying different vertical levels within a single row of data. Groups also help with the logical arrangement of columns within the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.Height">
            <summary>
            Returns the height of the column header.
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For a Header object, this property is read-only. In a particular band, each column header has the same height. This height is determined by taking the largest height that results from the resolution of each column's header's <b>Appearance</b> attributes and the band's <b>ColHeaderLines</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.VisiblePositionWithinBand">
            <summary>
            The overall visible position of the column within its band (read-only).
            </summary>
            <remarks>If groups are displayed this will be the relative position of the column within the group plus the total number of columns from all preceeding groups. The value returned includes columns that are hidden.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.VisiblePosition">
            <summary>
            Returns or sets the visible position of a header.
            </summary>
            <remarks>
            <p class="body">This property can be used to specify the ordinal positions of groups and columns.</p>
            <p class="body">For group headers, this property returns or sets the position of the group within that group's band. For column headers, this property returns or sets the position of the column within its group, if the column belongs to a group, or its band, if the column belongs to a band.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Header"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.SizeResolved">
            <summary>
            Resolved header size. This property returns the actual width and the height of the header.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.RowFilterDropDownOwner.Infragistics#Win#IValueListOwner#IsDropDownList">
            <summary>
            True if this is a drop down list type where
            there is no edit control
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject">
            <summary>
            The Accessible object for a column header.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.ColumnHeader,Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.DefaultAction">
            <summary>
            Gets a string that describes the default action of the object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeader.ColumnHeaderAccessibleObject.Column">
            <summary>
            Returns the associated column.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnsCollection">
            <summary>
            Returns a reference to a collection of Column objects. This property 
            is read-only at run-time. This property is not available at design-time.
            </summary><remarks><para>This property returns a reference to a 
            collection of UltraGridColumn objects that can be used to retrieve references 
            to the Column objects that, for the Band and Group objects, belong to a band 
            or a group, respectively, or for the Selected object, that are 
            currently selected. You can use this reference to access any of the 
            returned collection's properties or methods, as well as the properties or 
            methods of the objects within the collection.</para><para>For the Selected 
            object, as columns are selected and deselected, their corresponding 
            Column objects are added to and removed from the SelectedCols collection 
            returned by this property. When a column is selected or deselected, the 
            BeforeSelectChange event is generated.</para><para>The Count property of 
            the returned collection can be used to determine the number of columns 
            that either belong to a band or a group or are currently selected.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            constructor
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.OnDispose">
            <summary>
            Called when this object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Add">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridColumn"/>
                  to the collection.
               </para>
            </summary>
            <exception cref="T:System.ArgumentNullException">
               The <paramref name="Column"/>argument was <see langword="null"/>.
            </exception>
            <returns>The newly added column</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Add(System.Object)">
            <summary>
            Add method required during de-serialization. 
            </summary>
            <remarks>Should not be called outside InitializeComponent.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.AddRange(System.Object[])">
            <summary>
            Add method required during de-serialization. 
            </summary>
            <remarks>Should not be called outside InitializeComponent.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Add(System.String)">
            <summary>
            Adds a column to the column collection.
            </summary>
            <returns>The newly added column.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a column into the column collection
            </summary>
            <param name="index"></param>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Add(System.String,System.String)">
            <summary>
            Adds a column to the column collection.
            </summary>
            <returns>The newly added column.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Remove(System.Int32)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Remove(System.String)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a column from the collection
            </summary>
            <param name="index">Index to be removed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.ClearUnbound">
            <summary>
            Clears the unbound columns in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnsCollection.Remove(System.Object)">
            <summary>
            Remove a column from the collection
            </summary>
            <param name="value">Must be a Column object</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.IsReadOnly">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.Band">
            <summary>
            Associated band object read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.IsFixedSize">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.BoundColumnsCount">
            <summary>
            The total number of bound columns in the collection.
            Note: they are always first in the collection before
            any unbound columns.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnsCollection.UnboundColumnsCount">
            <summary>
            The total number of unbound columns in the collection.
            Note: they always follow the bound columns
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnEnumerator">
            <summary>
            Enumerator for the ColumnsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnEnumerator.#ctor(Infragistics.Win.UltraWinGrid.ColumnsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="columns"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ComboDropDownControl">
            <summary>
            Used as the control for the drop down portion
            of the UltraCombo control.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboDropDownControl.#ctor(Infragistics.Win.UltraWinGrid.UltraCombo)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboDropDownControl.OnResize(System.EventArgs)">
            <summary>
            Called when grid itself resizes.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboDropDownControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Calls the ControlUIElement's draw method
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboDropDownControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Does nothing since the background is drawn in OnPaint
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboDropDownControl.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ComboDropDownControl.Cursor">
            <summary>
            Returns the cursor that is to be used for this control.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraComboAction">
            <summary>
            Enumerates the possible actions that can be performed on the combo
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.ToggleDropdown">
            <summary>
            Toggle Drop Down 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.Dropdown">
            <summary>
            Drop Down 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.CloseDropdown">
            <summary>
            Close Drop Down 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.UndoChange">
            <summary>
            Undo Change 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.NextRow">
            <summary>
            Next Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.PrevRow">
            <summary>
            Previous Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.FirstRow">
            <summary>
            First Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.LastRow">
            <summary>
            Last Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.PageUp">
            <summary>
            Scroll the list up one page
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboAction.PageDown">
            <summary>
            Scroll the list down one page
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraComboState">
            <summary>
            Bit flags that describe the state of the control. For example, if
            the first cell in the second row is active but not in edit mode bits
            Row, Cell, and FirstCell will be set. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboState.IsDroppedDown">
            <summary>
            The list is dropped down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboState.Row">
            <summary>
            A row is selected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboState.HasEdit">
            <summary>
            DdropDownSttyle is not a drop down list
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ComboKeyActionMapping">
            <summary>
            Key/Action mapping object for UltraCombo.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMapping.#ctor(System.Windows.Forms.Keys,Infragistics.Win.UltraWinGrid.UltraComboAction,Infragistics.Win.UltraWinGrid.UltraComboState,Infragistics.Win.UltraWinGrid.UltraComboState,Infragistics.Win.SpecialKeys,Infragistics.Win.SpecialKeys)">
            <summary>
            Constructor
            </summary>
            <param name="keyCode"></param>
            <param name="actionCode"></param>
            <param name="stateDisallowed"></param>
            <param name="stateRequired"></param>
            <param name="specialKeysDisallowed"></param>
            <param name="specialKeysRequired"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ComboKeyActionMapping.ActionCode">
            <summary>
            Gets/sets the action code. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ComboKeyActionMapping.StateDisallowed">
            <summary>
            Gets/sets the disallowed state. These are bit flags that specify
            the state that the control MUST NOT be in for this mapping to be
            active. If the current state of the control has any of these 
            bits turned on this mapping will be ignored.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ComboKeyActionMapping.StateRequired">
            <summary>
            Gets/sets the required state. These are bit flags that specify
            the state that the control MUST be in for this mapping to be
            active.  
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings">
            <summary>
               Summary description for KeyActionMappings.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.InternalLoadAllActions">
            <summary>
            Loads this key action mappings collection with all the actions so that we 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.LoadDefaultMappings">
            <summary>
            Called the first time GetActionMapping
            is called (enables lazy loading of mappings)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.CopyTo(Infragistics.Win.UltraWinGrid.ComboKeyActionMapping[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.CreateActionStateMappingsCollection">
            <summary>
            Creates an instance of an ActionStateMappingsCollection derived class
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.ComboKeyActionMappingEnumerator">
            <summary>
             Summary description for KeyActionMappingEnumerator
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.ComboKeyActionMappingEnumerator.#ctor(Infragistics.Win.UltraWinGrid.ComboKeyActionMappings)">
            <summary>
            Constructor
            </summary>
            <param name="mappings"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ComboKeyActionMappings.ComboKeyActionMappingEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog">
            <summary>
            Dialog for letting users enter custom row filters.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBase)">
            <summary>
            Constructor
            </summary>
            <param name="ownerGrid"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog.Grid">
            <summary>
            Returns the UltraGrid instance used for inputting conditions on the dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DataAreaUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.VerifyChildElements(Infragistics.Win.ControlUIElementBase,System.Boolean)">
            <summary>
            Called during a drawing operation to ensure that all child
            elements are created and positioned properly. If the ChildElementsDirty
            flag is true then the default implementation will call
            positionChildElements and reset the flag 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.ResizeRowScrollRegions">
            <summary>
            Resizes all RowScrollRegions
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.ResizeColScrollRegions">
            <summary>
            Resizes all ColScrollRegions
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.Layout">
            <summary>
            Returns the Layout object that determines the layout of the object. 
            This property is read-only at run-time.
            </summary><remarks><para>The Layout property of an object is used to access 
            the Layout object that determines the settings of various properties 
            related to the appearance and behavior of the object. The Layout object 
            provides a simple way to maintain multiple layouts for the grid and 
            apply them as needed. You can also save grid layouts to disk, the 
            registry or a storage stream and restore them later.</para><para>The 
            Layout object has properties such as Appearance and Override, so the 
            Layout object has sub-objects of these types, and their settings are 
            included as part of the layout. However, the information that is 
            actually persisted depends on how the settings of these properties were 
            assigned. If the properties were set using the Layout object's intrinsic 
            objects, the property settings will be included as part of the layout. 
            However, if a named object was assigned to the property from a 
            collection, the layout will only include the reference into the collection, 
            not the actual settings of the named object. 
            (For an overview of the difference between named and intrinsic objects, 
            please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</para>
            <para>
            For example, if the Layout object's Appearance property is used to 
            set values for the intrinsic Appearance object like this:</para><pre>
            UltraGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</pre><para>
            Then the setting (in this case, ForeColor) will be included as part 
            of the layout, and will be saved, loaded and applied along with the 
            other layout data. However, suppose you apply the settings of a named 
            object to the UltraGridLayout's Appearance property in this manner:</para>
            <p class="code">UltraGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraGrid1.Appearances("New1").ForeColor = System.Drawing.Color.Blue</p>
            <p class="code">UltraGrid1.Layout.Appearance = UltraGrid1.Appearances("New1")</p>
            <para>In this case, the ForeColor setting will not be persisted as 
            part of the layout. Instead, the layout will include a reference to 
            the "New1" Appearance object and use whatever setting is present in 
            that object when the layout is applied.</para><para>By default, the 
            layout includes a copy of the entire Appearances collection, so if the 
            layout is saved and restored using the default settings, the object 
            should always be present in the collection when it is referred to. 
            However, it is possible to use the Load and Save methods of the Layout object 
            in such a way that the collection will not be re-created when the layout 
            is applied. If this is the case, and the layout contains a reference to 
            a nonexistent object, the default settings for that object's properties 
            will be used.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.ClipSelf">
            <summary>
            Returning true causes all drawing of this element to be expicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.Rect">
            <summary>
            Override the Rect property so we can call verifyChildElements on the set
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.BorderStyle">
            <summary>
            Overrides the BorderStyle to return the BorderStyle from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.RowLayoutDesignerElement">
            <summary>
            Indicates whether this element is being used for row layout designer element.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.AccessibilityInstance">
            <summary>
            Returns the accesible object representing the data area of the grid.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DataAreaAccessibleObject">
            <summary>
            The Accessible object for the date area of a grid.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DataAreaAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.DataAreaUIElement)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DataAreaAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DataAreaAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataAreaUIElement.DataAreaAccessibleObject.Grid">
            <summary>
            Returns the associated grid control.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement">
            <summary>
            The element class for representing data error icons in the cells and the row selectors.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden.
            </summary>
            <param name="appData"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.OnMouseEnter">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.OnMouseHover">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.OnMouseLeave">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element may not draw its back color
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element may not draw an image background
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.PositionChildElements">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorIconUIElement.WantsMouseHoverNotification">
            <summary>
            Overridden. Always returns true.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DesignerPromptAreaUIElement">
            <summary>
            Created at designtime only - used by the UltraGridDesigner to display prompts at designtime.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DesignerPromptAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance for the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DesignerPromptAreaUIElement.PositionChildElements">
            <summary>
            Positions child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DragEffect.SetCursorToCurrent">
            <summary>
            Sets the cursor according to whether mouse is on valid or invalid drop
            area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DragEffectWnd.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            since background painting is done in OnPaint(), we should do nothing here
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DropLocationInfo.GroupByBand">
            <summary>
            if dropping onto a group by band label in group by box,
            then this will return the band associated with the band label
            column is being dropped on.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DropGuideWnd.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            since background painting is done in OnPaint(), we should do nothing here
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo">
            <summary>
            Class implementing abstract EmbeddableEditorOwnerBase class to provide embeddable editors with information.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Constructor
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetEditor(System.Object)">
            <summary>
            Returns the editor for the passed in ownerContext. This is used by the base implementation of EmbeddableOwnerBase.
            </summary>
            <param name="ownerContext"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetControl(System.Object)">
            <summary>
            Returns the owner's control. 
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The owner's control. This is used e.g. to re-parent the edit control.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetDataType(System.Object)">
            <summary>
            Returns the data type.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetFormatInfo(System.Object,System.String@,System.IFormatProvider@)">
            <summary>
            Returns information needed to format a string.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="format">Returns the format string or null.</param>
            <param name="provider">Returns the IFormatProvider or null.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetPadding(System.Object,System.Drawing.Size@)">
            <summary>
            The padding to place around the value to display.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="padding">(out) The padding to place around the value to display.</param>
            <returns>A boolean indicating whether a meaningful value was returned.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetValue(System.Object)">
            <summary>
            Returns the value that should be rendered.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.IsEnabled(System.Object)">
            <summary>
            Returns whether the value is enabled for editing.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>True if the value is enabled for editing.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.IsNullable(System.Object)">
            <summary>
            Returns whether the value can be set to null.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>True if the value can be set to null.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ResolveAppearance(System.Object,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@,Infragistics.Win.EmbeddableEditorArea,System.Boolean,System.String)">
            <summary>
            Resolves the appearance for an element.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="appearance">The appearance structure to initialize.</param>
            <param name="requestedProps">The appearance properties to resolve.</param>
            <param name="area">Enumeration of type <see cref="T:Infragistics.Win.EmbeddableEditorArea"/> describing the area of the embeddable element to which the appearance will be applied</param>
            <param name="hotTracking">Boolean indicating whether the owner should apply its 'HotTrackingAppearance'</param>
            <param name="customArea">A string that denotes which appearance to resolve. Applicable only when the 'area' parameter is set to Custom.</param>
            <returns>True if the owner recognizes and supports the named appearance.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ShouldDrawFocus(System.Object)">
            <summary>
            Determines if a focus rect should be drawn.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>Returns true if a focus rect should be drawn.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.IsKeyMapped(System.Windows.Forms.Keys,Infragistics.Win.EmbeddableUIElementBase)">
            <summary>
            Returns whether the key is used by the owner.
            </summary>
            <param name="keyDataArg"></param>
            <param name="element">The EmbeddableUIElementBase-derived element</param>
            <returns>True if the key is used by the owner (e.g. an arrorw or tab key used for internal navigation).</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.OnEnterEditor(Infragistics.Win.EmbeddableEditorBase)">
            <summary>
            Called when focus is entering the editor. 
            </summary>
            <param name="editor">The editor who is getting focus.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.OnLeaveEditor(Infragistics.Win.EmbeddableEditorBase)">
            <summary>
            Called when focus is leaving the editor. 
            </summary>
            <param name="editor">The editor who is losing focus.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetImageList(System.Object)">
            <summary>
            Returns the image list to be used by the editor's ValueList, or null
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>An ImageList, or null if not supported</returns>
            <remarks>The default implementation returns <b>null</b>.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetMaskInfo(System.Object,System.String@,Infragistics.Win.UltraWinMaskedEdit.MaskMode@,Infragistics.Win.UltraWinMaskedEdit.MaskMode@,Infragistics.Win.UltraWinMaskedEdit.MaskMode@)">
            <summary>
            Returns masking information. This is only of ibterest to a editor that supports masking.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="mask">The string used for masking the value or null if there is no mask.</param>
            <param name="dataMode">Determines whether literals and prompt characters are included in Value property of the Editor.</param>
            <param name="displayMode">Determines whether literals and prompt characters are displayed when not in edit mode.</param>
            <param name="clipMode">Determines whether literals and prompt characters are included when the editor copyies text to the clipboard.</param>
            <returns>True only if masking info is available.</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetNullText(System.Object,System.String@)">
            <summary>
            The string to display for a null value.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="nullText">(out) The string that should be used if the value is null or DB_Null.</param>
            <returns>A boolean indicating whether a meaningful value was returned.</returns>
            <remarks>The default implementation returns an empty string.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetPadChar(System.Object,System.Char@)">
            <summary>
            Returns character used as a substitute for spaces.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="padChar">Pad character.</param>
            <returns>True only if pad character info is available.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetPromptChar(System.Object,System.Char@)">
            <summary>
            Returns the character used as prompt during editing (e.g. '_').
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="promptChar">Prompt character.</param>
            <returns>True only if prompt character info is available.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.IsReadOnly(System.Object)">
            <summary>
            Returns true is the value is read-only
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A boolean indicating whether the value is read only</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetCharacterCasing(System.Object)">
            <summary>
            Determines how the text will be cased. 
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The CharacterCasing to be applied to the text</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetMaxLength(System.Object,System.Int32@)">
            <summary>
            Returns the maximum length for a string.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="maxLength">(out) The maximum value or 0 if there is no maximum.</param>
            <returns>A boolean indicating whether a meaningful value was returned.</returns>
            <remarks>The default implementation returns 0.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetMaxValue(System.Object)">
            <summary>
            Returns the maximum allowable value.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The maximum value or null if there is no maximum.</returns>
            <remarks>The default implementation returns 0.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetMinValue(System.Object)">
            <summary>
            Returns the minimum allowable value.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The minimum value or null if there is no minimum.</returns>
            <remarks>The default implementation returns 0.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetPasswordChar(System.Object,System.Char@)">
            <summary>
            Returns the character used to mask characters. 
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="passwordChar">The character to display when entering a password.</param>
            <returns>True only if passwordChar character info is available.</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetValueList(System.Object)">
            <summary>
            Returns a list of predefined values.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>Returns a list of predefined values or null.</returns>
            <remarks>The default implementation returns null.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetContextMenu(System.Object)">
            <summary>
            Returns the ContextMenu that will be displayed by the editor
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A ContextMenu</returns>
            <remarks>The default implementation returns <b>null</b></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.IsMultiLine(System.Object)">
            <summary>
            Returns whether the text is multiline.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A boolean indicating whether the text is multiline</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.IsVertical(System.Object)">
            <summary>
            Returns whether the element should display vertical.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A boolean indicating whether the display is vertical</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.MustSelectFromList(System.Object)">
            <summary>
            Returns whether a selection can only be made from the value list.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>If true will act as a combo with a style of DropDownList.</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.MustDisplayFromList(System.Object)">
            <summary>
            Returns whether the text an element displays must correspond to the text of an item in a list
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>If true and the editor's Value does not match an item in the list, an empty string will be displayed.</returns>
            <remarks>The default implementation returns <b>true</b>, meaning that if an editor's Value does not correspond to an item in the list, and <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.MustSelectFromList(System.Object)"/> returns true, an empty string will be displayed.</remarks>
            <remarks><b>Note:</b>The base class implementation will <b>always</b> return false when <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.MustSelectFromList(System.Object)"/> returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.EnsureValueIsInList(System.Object)">
            <summary>
            Returns whether an editor's value must correspond to an item in its ValueList
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <remarks>The default implementation returns false.</remarks>
            <remarks>When an instance of an EmbeddableEditorOwnerBase-derived class returns true from this method, the editor will validate its text against the items in its ValueList and return false from the IsValid property if the text does not match any items.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.WrapText(System.Object)">
            <summary>
            Returns whether the text should be wrapped if it doesn't fit.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A boolean indicating whether the text should be wrapped</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetDropDownListOffset(System.Object)">
            <summary>
            Returns the horizontal and vertical offset to apply to the DropDown's list
            </summary>
            <remarks>
            Since it is implied that a ValueList's DropDown is displayed at the bottom left<br></br>
            corner of the element that displays it, this property provides a way to compensate for<br></br>
            control borders, etc.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.EnterEditModeOnClick(System.Object)">
            <summary>
            If true is returned, the editor will enter edit mode on either
            MouseDown or MouseUp, depending on the nature of the editor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetAutoSizeEditInfo(System.Object,System.Boolean@,System.Drawing.Size@,System.Drawing.Size@)">
            <summary>
            Returns the AutoSizeEdit information to be used by editors that support AutoSizing
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="autoSizeEdit">(out) Indicates whether the owner supports AutoSizeEditing.</param>
            <param name="startSize">(out) A Size struct containing the starting width and height to which the editor should be set.</param>
            <param name="maxSize">(out) A Size struct containing the maximum width and height to which the editor should be allowed to grow.</param>
            <returns>A boolean indicating whether AutoSizeEdit functionality is supported by the owner.</returns>
            <remarks>The default implementation returns <b>false</b>.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetAutoEdit(System.Object)">
            <summary>
            Indicates whether AutoEdit should enabled.
            </summary>
            <param name="ownerCotext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>
            Indicates whether AutoEdit should enabled. Default implementation returns false.
            </returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetBorderStyle(System.Object,Infragistics.Win.UIElementBorderStyle@)">
            <summary>
            Returns the BorderStyle to be used by the editor's embeddable element
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="borderStyle">The BorderStyle to be used by the editor's embeddable element</param>
            <returns></returns>
            <remarks>The default implementation returns <b>false</b>, with borderStyle set to UIElementBorderStyle.Default.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.DrawAsActive(System.Object)">
            <summary>
            Returns whether the element should be drawn as if it were in its "active" state. Only applicable if the return from the DisplayStyle property is not Standard.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The default implementation returns DefaultableBoolean.Default</returns>
            <remarks>
            The default implementation returns <b>DefaultableBoolean.Default</b>, for which the element should follow the cursor position.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.UseDefaultEditorCursor(System.Object)">
            <summary>
            Returns whether the editor should use its default cursor
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetTextBoxScrollBars(System.Object)">
            <summary>
            Returns which scrollbars should appear in an editor's multiline TextBox.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A boolean indicating which scrollbars should appear in an editor's multiline TextBox.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.OnEditorMouseDown(Infragistics.Win.EmbeddableUIElementBase,Infragistics.Win.EmbeddableMouseDownEventArgs)">
            <summary>
            The editor calls this method whenever any of its embeddable elements gets a mouse down.
            </summary>
            <param name="embeddableElem"></param>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.OnEditorBeforeEnterEditMode(Infragistics.Win.EmbeddableEditorBase,Infragistics.Win.EmbeddableUIElementBase)">
            <summary>
            Called before edit mode has been entered. 
            </summary>
            <param name="editor">The editor about to enter edit mode.</param>
            <param name="embeddableElement">The element entering edit mode.</param>
            <returns>False to cancel the operation.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetExternalContext(System.Object)">
            <summary>
            Returns an object that may be provided to the programmer using an editor.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>An object that the programmer may use to determine which object was associated with an action.</returns>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Win.EmbeddableUIElementBase.OwnerContext"/> is provided to the editor when it creates or reinitializes an embeddable uielement. 
            The embeddable element in turn uses that information when making requests to the owner for information but the editor. That object is opaque to the editor but provides context to the owner 
            so that it knows which object the editor is dealing with. An owner may change the contents of the <b>OwnerContext</b> or the object may not be useful to the programmer using an editor. For example, a CellUIElement 
            may be the <b>OwnerContext</b> for a grid's cell editor but that isn't normally the level of information that the programmer would need. The programmer needs a 
            Cell object and shouldn't be expected to extract that from the OwnerContext. Instead, an editor will ask the owner via this method to translate the <b>OwnerContext</b> to 
            something that the programmer can use.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetShowInkButton(System.Object)">
            <summary>
            Determines when to show the Ink Button on the editor.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A ShowInkButton value indicating when the InkButton will be shown.</returns>
            <remarks><p class="body">The default implementation returns <b>ShowInkButton.Default</b>.</p></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetCachedGraphics(System.Object)">
            <summary>
            Called to get a graphics object suitable for doing metrics calculations only.
            </summary>
            <returns>A graphics object suitable for doing metrics calculations only. This graphics object shouldn't be rendered on.</returns>
            <param name="ownerContext">The owner context which will be used to get the Control this owner is associated with.</param>
            <remarks>
            <p class="body">Do NOT call the <b>Dispose</b> method on the graphics object returned from this method.</p>
            <p class="body">Instead, each call to this method should be paired with a call to <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ReleaseCachedGraphics(System.Drawing.Graphics)"/>.</p>
            <p class="body">During graphics caching calls to <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetCachedGraphics(System.Object)"/> will return a single cached graphics object and calls to <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ReleaseCachedGraphics(System.Drawing.Graphics)"/> will be ignored.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ReleaseCachedGraphics(System.Drawing.Graphics)">
            <summary>
            Called to release a graphics object that was returned from a prior call to <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetCachedGraphics(System.Object)"/>.
            </summary>
            <param name="gr">The graphics object to release.</param>
            <remarks>
            <p class="body">Do NOT call the <b>Dispose</b> method on the graphics object returned from <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetCachedGraphics(System.Object)"/>. Use this method instead.</p>
            <p class="body">During graphics caching calls to <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetCachedGraphics(System.Object)"/> will return a single cached graphics object and calls to <see cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ReleaseCachedGraphics(System.Drawing.Graphics)"/> will be ignored.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.ShouldShowOverflowIndicator(System.Object,System.Boolean@,System.Boolean@,System.Drawing.Image@)">
            <summary>
            Sets the out parameters with values relating to whether the editor's overflow indicator should be shown
            and if it should show a tooltip when the cursor enters the overflow indicator.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="showOverflowIndicator">Specifies whether to display the overflow indicator.</param>
            <param name="showToolTip">Specifies whether to display the overflow tooltip.</param>
            <param name="indicatorImage">The image to be shown in the overflow indicator, or null.</param>
            <remarks>'showToolTip' is always set to false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetEditorContext(System.Object)">
            <summary>
            Gets the editor context that was set with SetEditorContext method.
            </summary>
            <param name="ownerContext"></param>
            <returns>Editor context that was last set with SetEditorContext for the passed in ownerContext.</returns>
            <remarks>
            <p>GetEditorContext and <seealso cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.SetEditorContext(System.Object,System.Object)"/> can be used to cache objects per owner context.</p>
            <p>Implementing owner will return the object that was last cached using SetEditorContext method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.SetEditorContext(System.Object,System.Object)">
            <summary>
            Sets the editor context for the passed in ownerContext.
            </summary>
            <param name="ownerContext"></param>
            <param name="editorContext"></param>
            <remarks>
            <p class="body"><seealso cref="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetEditorContext(System.Object)"/> and SetEditorContext can be used to cache objects per owner context.</p>
            <p class="body">Implementing owner will return the object that was last cached using SetEditorContext method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.GetEditorElement(System.Object)">
            <summary>
            Returns the embeddable uielement associated with a particular object or null if none is available.
            </summary>
            <param name="ownerContext">Context used to identify the object to reference</param>
            <returns>The embeddable uielement representing the specified owner context.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.EmbeddableEditorOwnerInfo.DesignMode">
            <summary>
            Returns true if in design mode, false otherwise.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Activation">
            <summary>
            Determines how the cell will behave when it is activated.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Activation.AllowEdit">
            <summary>
            Allow Edit. The grid will attempt to edit the content of the object.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Activation.ActivateOnly">
            <summary>
            Activate Only. The object may be selected (text highlighted) but may not be edited.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Activation.Disabled">
            <summary>
            Disabled. The object may not be activated and text may not be selected or edited.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Activation.NoEdit">
            <summary>
            No Edit. The object may be activated, but cells cannot be edited.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AddNewBoxStyle">
            <summary>
            "Constants that specify whether the AddNewBox will appear at full size or compacted"
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AddNewBoxStyle.Full">
            <summary>
            Full. The AddNewBox will appear at its full size.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AddNewBoxStyle.Compact">
            <summary>
            Compact. The AddNewBox will appear compacted, occupying the least amount of screen real estate possible.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowAddNew">
            <summary>
            Used to specify whether rows can be added by the use via the AddNewBox.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.Yes">
            <summary>
            Yes. New Rows can be added by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.No">
            <summary>
            No. New Rows cannot be added by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.TabRepeat">
            <summary>
            New Rows can be added by the user, and pressing the TAB key from within the last cell on an AddNew row will automatically add a new row.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnTop">
            <summary>
            Template add-row as the first row in rows-collections. <b>TemplateOnTop</b> option displays an add-row in every rows-collection as the first row in the row collection. The user can use this template add-row to add a new row by simply typing into it.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnTopWithTabRepeat">
            <summary>
            Same as <b>TemplateOnTop</b> except with <b>TemplateOnTopWithTabRepeat</b> tabbing off an add-row will tab into the template-add row associated with the rows-collection and thus providing a convenient way adding multiple rows via keyboard.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnBottom">
            <summary>
            Template add-row as the last row in rows-collections. <b>TemplateOnBottom</b> option displays an add-row in every rows-collection as the last row in the row collection. The user can use this template add-row to add a new row by simply typing into it.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowColMoving">
            <summary>
            Used to specify whether columns can be moved.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColMoving.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColMoving.NotAllowed">
            <summary>
            Not Allowed. Columns cannot be moved by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColMoving.WithinGroup">
            <summary>
            Within Group. Columns can be moved by the user within the same Group.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColMoving.WithinBand">
            <summary>
            Within Band. Columns can be moved by the user within the same Band.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowColSizing">
            <summary>
            Used to specify whether columns can be resized.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSizing.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSizing.None">
            <summary>
            None. Columns cannot be sized by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSizing.Synchronized">
            <summary>
            Sync. Columns can be sized by the user. Columns in other Bands are sized as well.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSizing.Free">
            <summary>
            Free. Columns can be sized by the user, with no effect on Columns in other Bands.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowColSwapping">
            <summary>
            enumeration used for specifying whether to allow col swapping 
            on columns
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSwapping.Default">
            <summary>
            default AllowColSwapping style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSwapping.NotAllowed">
            <summary>
            disable col swapping
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSwapping.WithinGroup">
            <summary>
            allow col swapping within a group
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowColSwapping.WithinBand">
            <summary>
            allow col swapping within a band
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowGroupMoving">
            <summary>
            Used to specify whether groups can be moved.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowGroupMoving.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowGroupMoving.NotAllowed">
            <summary>
            Not Allowed. Groups cannot be moved by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowGroupMoving.WithinBand">
            <summary>
            Within Band. Groups can be moved by the user within the same band.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowGroupSwapping">
            <summary>
            enum for specifying whether groups are allowed to swap with other groups
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowGroupSwapping.Default">
            <summary>
            default group swapping style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowGroupSwapping.NotAllowed">
            <summary>
            do not allow swapping
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowGroupSwapping.WithinBand">
            <summary>
            allow group swapping within bands
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AllowRowSummaries">
            <summary>
            enum for specifying whether to allow row summaries at override level as well as individual column level.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.True">
            <summary>
            Allow row summaries.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.False">
            <summary>
            Do not allow row summaries.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.BasedOnDataType">
            <summary>
            Base it on the column's data type.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.SingleSummary">
            <summary>
            Behaves like <see cref="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.True"/> however allows the user to select only a single summary per column.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.SingleSummaryBasedOnDataType">
            <summary>
            Behaves like <see cref="F:Infragistics.Win.UltraWinGrid.AllowRowSummaries.BasedOnDataType"/> however allows the user to select only a single summary per column.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandOrigin">
            <summary>
            enum for specifying what parts of the Band to include when calculating
            band origin
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.BandOrigin.PreRowArea">
            <summary>
            Pre-Row Area. The left edge of the pre-row area is used to determine the origin.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.BandOrigin.RowSelector">
            <summary>
            Row Selectors. The left edge of the record selectors is used to determine the origin.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.BandOrigin.RowCellArea">
            <summary>
            Cell Area. The left edge of the leftmost cell(s) is used to determine the origin.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ButtonDisplayStyle">
            <summary>
            enum to specify the style of displaying buttons in various column styles
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ButtonDisplayStyle.OnMouseEnter">
            <summary>
            display button whenever the mouse enters the cell ui element
            </summary>		
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ButtonDisplayStyle.Always">
            <summary>
            always display buttons
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ButtonDisplayStyle.OnCellActivate">
            <summary>
            display only when the cell is activated
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ButtonDisplayStyle.OnRowActivate">
            <summary>
            display when the row the cell belongs to is activated
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Case">
            <summary>
            Used to specify the case of text in a column.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Case.Unchanged">
            <summary>
            Unchanged. Text appears as it was entered.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Case.Lower">
            <summary>
            Lower. All text appears as lowercase.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Case.Upper">
            <summary>
            Upper. All text appears as uppercase.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardScrollbars">
            <summary>
            Used for specifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.CardScrollbars"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardScrollbars.None">
            <summary>
            <b>None</b> specifies that no scroll bars be shown.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardScrollbars.Horizontal">
            <summary>
            <b>Horizontal</b> specifies that the horizontal scroll bar be shown. If all the cards are visible then the scrollbar will be disabled.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardStyle">
            <summary>
            Used to specify the Card Style.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels">
            <summary>
            Merged Labels. All card's within a display row only consist of cells, their 
            lables are merged into one separate UIElement.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardStyle.StandardLabels">
            <summary>
            Standard Labels.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardStyle.VariableHeight">
            <summary>
            Variable Height. Hides all empty cells within a card allowing cards to 
            vary in size.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardStyle.Compressed">
            <summary>
            Compressed card view. Compresses all the cards showing only the card caption and giving the user the ability to expand cards.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellClickAction">
            <summary>
            Used to specify how a cell should react to being clicked.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellClickAction.Default">
            <summary>
            Use Default. The setting of the object's parent will be used (Edit if parent has no default.)
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellClickAction.Edit">
            <summary>
            Edit. Selects and highlights the cell that was clicked and puts it in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellClickAction.RowSelect">
            <summary>
            Row Select. Selects and highlights the entire row of the cell that was clicked.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellClickAction.CellSelect">
            <summary>
            Cell Select. Selects and highlights the cell that was clicked.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellDisplayStyle">
            <summary>
            Enum for specifying CellDisplayStyle property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.Default">
            <summary>
            Default is resolved to <b>FullEditorDisplay</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.PlainText">
            <summary>
            Plain text without any formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FormattedText">
            <summary>
            Formatted text.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FullEditorDisplay">
            <summary>
            Embeddable editor element.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ChildRow">
            <summary>
            Used to specify the relationship between the current row and its child rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ChildRow.First">
            <summary>
            First Child. Row is the first child of the current row.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ChildRow.Last">
            <summary>
            Last Child. Row is the last child of the current row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ClippingOverride">
            <summary>
            enum to specify if text should be clipped when sent to the 
            printer
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ClippingOverride.Auto">
            <summary>
            Clipping determine automatically
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ClippingOverride.Yes">
            <summary>
            Clip text
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ClippingOverride.No">
            <summary>
            Don't clip text
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollAction">
            <summary>
            enum to specify how to scroll a col scroll region
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColScrollAction.LineLeft">
            <summary>
            scroll as if left arrow of the scroll bar was cliked
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColScrollAction.LineRight">
            <summary>
            scroll as if right arrow of the scroll bar was clicked
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColScrollAction.PageLeft">
            <summary>
            scroll one page to the left
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColScrollAction.PageRight">
            <summary>
            scroll one page to the right
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColScrollAction.Left">
            <summary>
            scroll all the way to the left
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColScrollAction.Right">
            <summary>
            scroll all the way to the right
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode">
            <summary>
            Enum used for specifying how the column is autosized when the user double clicks
            on the edge of a column.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode.Default">
            <summary>
            Default is to perform autosizing based on visible rows only.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode.None">
            <summary>
            Don't allow the user to perform autozieing on columns.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode.VisibleRows">
            <summary>
            Perform autosizing based on visible rows only.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode.SiblingRowsOnly">
            <summary>
            Perform autosizing based on sibling rows (all rows in the rowscollectin associated with the row the header is visibly attached to).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode.AllRowsInBand">
            <summary>
            Perform autosizing based on all the rows in band.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnSizingArea">
            <summary>
            Enum for specifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ColumnSizingArea"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnSizingArea.Default">
            <summary>
            Default. Default is resolved to HeaderOnly.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnSizingArea.HeadersOnly">
            <summary>
            Allow column sizing using column headers only.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnSizingArea.CellsOnly">
            <summary>
            Allow column sizing using column cells only.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnSizingArea.EntireColumn">
            <summary>
            Allow column sizing using both cells and headers.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnStyle">
            <summary>
            enum to specify different column styles
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.Default">
            <summary>
            use the default style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.Edit">
            <summary>
            text box style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton">
            <summary>
            edit button style that has a text box as well as a button that users can
            click on
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox">
            <summary>
            Checkbox style that is not a tri-state checkbox.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.TriStateCheckBox">
            <summary>
            Tri-state checkbox style.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.DropDown">
            <summary>
            drop down combobox style that has a text box and a small drop down 
            button that users can click on to display a drop down list to select
            items from
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.DropDownList">
            <summary>
            drop down list style that has a small drop down button that users 
            can click on to display a drop down list from which they can select
            		/// an item
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.DropDownValidate">
            <summary>
            same as DropDown style except that it will not allow the user to enter 
            text in the combobox' edit box that does not match any one of the values
            in the value list
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.Button">
            <summary>
            button style that has a button occupying the whole area of the cell.
            when the user clicks on the button ClickCellButton event is fired
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnStyle.DropDownCalendar">
            <summary>
            drop down calendar style that has a drop down arrow that users can
            click on to display a drop down calendar for selecting a date
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CardCompressedState">
            <summary>
            enum to specify different Card Compressed states for a Row in Compressed Card View
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardCompressedState.Expanded">
            <summary>
            the card is expanded.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.CardCompressedState.Compressed">
            <summary>
            the card is compressed
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DataErrorSource">
            <summary>
            Used to indicate how the Data error occurred
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DataErrorSource.CellUpdate">
            <summary>
            Occurred while updating a cell
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DataErrorSource.RowUpdate">
            <summary>
            Occurred whil updating a row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DataErrorSource.RowAdd">
            <summary>
            Occurred while adding a new row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DataErrorSource.RowDelete">
            <summary>
            Occurred while deleting a row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DataErrorSource.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ErrorType">
            <summary>
            Used for specifying what type of error
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ErrorType.Data">
            <summary>
            Data error
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ErrorType.Mask">
            <summary>
            Mask error
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ErrorType.Generic">
            <summary>
            Generic error
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowFilterMode">
            <summary>
            Dicates whether row filtering takes place at band level or
            rows collection level.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterMode.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterMode.AllRowsInBand">
            <summary>
            Row filtering will be done at the band level. ColumnFilters off the UltraGridBand will be
            used for filtering the rows and all the rows in the band associated with the
            override will be used. Also the contents of the filter drop-down will contain 
            unique values from all the rows in the band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterMode.SiblingRowsOnly">
            <summary>
            Row filtering will be done at the RowsCollection level. ColumnFilters off the RowsCollection
            will be used for filtering the rows in that RowsCollection (and not all the rows
            in the band). Also the contents of the filter drop-down will contain unique values
            from the rows in that rows collection. Note: When rows in a rows collection are grouped by 
            columns, all the descendant groups will share the same column filters.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutSizing">
            <summary>
            Enum for specifying label and cell resizing mode in the row-layout mode.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutCellSizing"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutLabelSizing"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/></p>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.None">
            <summary>
            Disallow resizing.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Horizontal">
            <summary>
            Allow resizing horizontally.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Vertical">
            <summary>
            Allow resizing vertically.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Both">
            <summary>
            Allow resizing both horizontally and vertically.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle">
            <summary>
            Enum for specifying whether the column labels are positioned with the cells or
            in a separate column headers area above the rows.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelPosition"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.Separate">
            <summary>
            Column labels are positioned in a separate area above the rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.WithCellData">
            <summary>
            Column labels are with the cells and repeated in every row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowFilterAction">
            <summary>
            Specifies what action to take on rows that are filtered out.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterAction.Default">
            <summary>
            Default. Default is is resolved to <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.HideFilteredOutRows"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterAction.AppearancesOnly">
            <summary>
            <b>AppearancesOnly</b> applies the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInRowAppearance"/> and <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInCellAppearance"/> to the rows that are filtered in (rows for which the filter conditions evaluate to true) and <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutRowAppearance"/> and <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutCellAppearance"/> to rows that are filtered out (rows for which the filter conditions evaluated to false).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterAction.DisableFilteredOutRows">
            <summary>
            In addition to applying the filter related appearances as mentioned in the help for <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.AppearancesOnly"/>, <b>DisableFilteredOutRows</b> disables the rows that are filtered out (rows for which the filter conditions evaluate to false).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowFilterAction.HideFilteredOutRows">
            <summary>
            In addition to applying the filter related appearances as mentioned in the help for <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.AppearancesOnly"/>, <b>HideFilteredOutRows</b> hides the rows that are filtered out (rows for which the filter conditions evaluate to false).
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterLogicalOperator">
            <summary>
            Enum for specifying logical operator that should be used to 
            combine all the FilterConditions in ColumnFilter.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnFilter"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.And">
            <summary>
            And logical operator
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.Or">
            <summary>
            Or logical operator
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterComparisionOperator">
            <summary>
            Enum for specifying the comparision operator.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.Equals">
            <summary>
            Tests for two values being equal
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.NotEquals">
            <summary>
            Tests for two values being not equal
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.LessThan">
            <summary>
            Tests for the column's value being less than the value 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.LessThanOrEqualTo">
            <summary>
            Tests for the column's value being less than or equal to the value
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.GreaterThan">
            <summary>
            Tests for the column's value being greater than the value
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.GreaterThanOrEqualTo">
            <summary>
            Tests for the column's value being greater than or equal to the value
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.Like">
            <summary>
            Will do a wildcard comparision of the column's value to the comparision value
            taking comparision value as the string with wild cards
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.Match">
            <summary>
            Will do a regular expression comparision of the column's value to the comparision
            value taking comparision value as regular expression string.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FilterComparisionOperator.Custom">
            <summary>
            Used for creating custom filters. This is used when deriving a class from FilterCondition
            and implementing custom logic for filter evaluation by overriding the MeetsCriteria method of
            in the derived class. Default implementation of MeetsCriteria always returns true for
            Custom filter comparision operator and thus it's necessary to derive from FilterCondition
            and override the MeetsCriteria for custom filters.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator">
            <summary>
            Enum used for specifying whether the user is allowed to fix and unfix headers.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.FixedHeaderIndicator"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.None">
            <summary>
            Don't allow the user to fix or unfix the header.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.Button">
            <summary>
            Display a button that allows the user to fix or unfix the header. Button also displays whether the header is fixed or not.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.InSwapDropDown">
            <summary>
            Displays a <i>[Fix Header]</i> or <i>[Unfix Header]</i> item in the swap drop down depending on whether the header is currently fixed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBoxStyle">
            <summary>
            Constants that specify whether the GroupByBox will appear at full size or compacted
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GroupByBoxStyle.Full">
            <summary>
            Full. The GroupByBox will appear at its full size.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GroupByBoxStyle.Compact">
            <summary>
            Compact. The GroupByBox will appear compacted, occupying the least amount of screen real estate possible.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ShowExpansionIndicator">
            <summary>
            Determines if the scrollbar is vertical or horizontal
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowExpansionIndicator.Default">
            <summary>
            Use Default.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowExpansionIndicator.Always">
            <summary>
            Always
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowExpansionIndicator.Never">
            <summary>
            Never
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowExpansionIndicator.CheckOnDisplay">
            <summary>
            Check when the row is first displayed
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowExpansionIndicator.CheckOnExpand">
            <summary>
            After the row is expanded, we check to see if there are any children.
            If not, the indicator disappears.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeaderClickAction">
            <summary>
            Used to specify how a column or group header should react to being clicked.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderClickAction.Default">
            <summary>
            Use Default. The setting of the object's parent will be used (or 'Select' if not parent is set to default).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderClickAction.Select">
            <summary>
            Select. Selects the column or group (based on the setting of the SelectTypeCol property).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderClickAction.SortSingle">
            <summary>
            Single Selection Sort. Changes the sort indicator for the column after clearing all other columns' sort indicators.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderClickAction.SortMulti">
            <summary>
            Multiple Selection Sort. Changes the sort indicator for the column. If the shift key is pressed does not clear other columns sort indicators.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderClickAction.ExternalSortSingle">
            <summary>
            Same as SortSingle except with <b>ExternalSortSingle</b> UltraGrid won't perform the sort itself. This is useful if you want to sort externally through the data source. You can hook into the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterSortChange"/> event and apply the sort to the external data source.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.HeaderClickAction.ExternalSortMulti">
            <summary>
            Same as SortMulti except with <b>ExternalSortMulti</b> UltraGrid won't perform the sort itself. This is useful if you want to sort externally through the data source. You can hook into the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterSortChange"/> event and apply the sort to the external data source.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.LabelPosition">
            <summary>
            LabelPosition is used to specify if and where the column header will be shown.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.Default">
            <summary>
            Default value. In card-view, Default will resolve to Left while in regular view, Default will resolve to None.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.None">
            <summary>
            Column label will not be shown.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.Left">
            <summary>
            Column label will be shown to the left of the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.Top">
            <summary>
            Column label will be shown on the top of the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.Right">
            <summary>
            Column label will be shown to the right of the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.Bottom">
            <summary>
            Column label will be shown on the bottom of the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LabelPosition.LabelOnly">
            <summary>
            Cells of the column won't be shown. Only the label will be shown.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.LoadStyle">
            <summary>
            Enum associated with <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadStyle"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LoadStyle.PreloadRows">
            <summary>
            Pre-loads all rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.LoadStyle.LoadOnDemand">
            <summary>
            Loads rows as they are needed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.MergedCellEvaluationType">
            <summary>
            Enum for specifying the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellEvaluationType"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellEvaluationType.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellEvaluationType.MergeSameValue">
            <summary>
            Merge cells when their underlying values are the same.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellEvaluationType.MergeSameText">
            <summary>
            Merge cells when their display text are the same.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.MergedCellStyle">
            <summary>
            Enum for specifying the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellStyle"/> and <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellStyle"/> properties.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellStyle.Default">
            <summary>
            Default. Default will be resolved to <b>Never</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellStyle.Always">
            <summary>
            Always merge cells.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellStyle.OnlyWhenSorted">
            <summary>
            Merge cells only when the column is a sort column.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellStyle.Never">
            <summary>
            Never merge cells.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.MergedCellContentArea">
            <summary>
            Enum for specifying the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellContentArea"/> and <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellContentArea"/> properties.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellContentArea.Default">
            <summary>
            Default. Default will be resolved to <b>VirtualRect</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellContentArea.VirtualRect">
            <summary>
            The contents of the merged cell will be positioned within the entire area of the merged cell.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.MergedCellContentArea.VisibleRect">
            <summary>
            The contents of the merged cell will be positioned within the visible portion of the merged cell.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Nullable">
            <summary>
            Used to specify the way null values are stored.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Nullable.Automatic">
            <summary>
            Automatic. Data stored as null if allowed, otherwise as empty string.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Nullable.Null">
            <summary>
            DBNull. Data stored as DBNull value.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Nullable.EmptyString">
            <summary>
            Empty String. Data stored as a zero-length string.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Nullable.Nothing">
            <summary>
            Nothing. Data stored as Nothing (C# null).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Nullable.Disallow">
            <summary>
            Column doesn't allow empty values.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PerformAutoSizeType">
            <summary>
            Enum for specifying the aruguement to an overload of <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PerformAutoSizeType.VisibleRows">
            <summary>
            Calculate the width of the column based on cell data in visible rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PerformAutoSizeType.AllRowsInBand">
            <summary>
            Calculate the width of the column based on cell data in all rows in band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PerformAutoSizeType.None">
            <summary>
            Don't base the auto-size width of the column based on the any cell data.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ProcessMode">
            <summary>
            Enum specifying how to apply sorting and filtering
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ProcessMode.Lazy">
            <summary>
            Process rows lazily
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ProcessMode.Synchronous">
            <summary>
            Process all rows synchronously
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ProcessMode.SynchronousExpanded">
            <summary>
            Process only expanded rows synchronously
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PropertyCategories">
            <summary>
            Category Properties
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.AppearanceCollection">
            <summary>
            Serialize Appearance Collection
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.Bands">
            <summary>
            Serialize Bands
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.Groups">
            <summary>
            Serialize Groups
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.UnboundColumns">
            <summary>
            Serialize UnBound Columns
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.SortedColumns">
            <summary>
            Serialize Sorted Columns
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.ColScrollRegions">
            <summary>
            Serialize Column Scroll Regions
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.RowScrollRegions">
            <summary>
            SerializeRow Scroll Regions
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.General">
            <summary>
            Serialize General 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.ValueLists">
            <summary>
            Serialize Value Lists
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.Summaries">
            <summary>
            Serialize summaries. This will also serialize bands as well.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.ColumnFilters">
            <summary>
            Serialize ColumnFilers off the band. This will also serialize bands as well. NOTE: This does not serialize column filters off the RowsCollection.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyCategories.All">
            <summary>
            Serialize All
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RecursionType">
            <summary>
            Enum specifying level of recursion to apply to a RowCollection method
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RecursionType.None">
            <summary>
            No recursion
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RecursionType.Expanded">
            <summary>
            Apply recursively to all expanded rows
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RecursionType.All">
            <summary>
            Apply recursively to all rows
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RefreshRow">
            <summary>
            Used to specify the actions for the Refresh method.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RefreshRow.RefreshDisplay">
            <summary>
            Display. Only causes the display to be repainted.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RefreshRow.FireInitializeRow">
            <summary>
            Re-Initialize. Causes the InitializeRow event to occur.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RefreshRow.ReloadData">
            <summary>
            Reload rows.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowConnectorStyle">
            <summary>
            enum for specifying sibling row connector styles
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.Default">
            <summary>
            default style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.None">
            <summary>
            no connector lines
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.Dotted">
            <summary>
            draw the connector line dotted
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.Dashed">
            <summary>
            draw the connector line dashed
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.Solid">
            <summary>
            draw the connector line solid
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.Inset">
            <summary>
            draw the connector line inset
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowConnectorStyle.Raised">
            <summary>
            draw the connector line raised
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowPropertyCategories">
            <summary>
            Used for specifying which settings to carried over from grid rows to print rows when
            printing.
            </summary>
            <remarks>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print"/>,<seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.Expanded">
            <summary>
            Row's expanded state (whether the row is expanded or collapsed).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.Hidden">
            <summary>
            Row's hidden state (whether the row is hidden or visible). Since filtered rows 
            are hidden, specifying Hidden is a good way to apply the filters to the print rows
            so all the filtered out rows in the grid also are filtered out in the print.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.UnboundData">
            <summary>
            Unbound cell data.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.Appearances">
            <summary>
            Various appearance settings on the rows (Appearance, CellAppearance etc.).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.CellAppearance">
            <summary>
            Appearance property on the cell objects.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.Height">
            <summary>
            Row heights.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.Description">
            <summary>
            Row description.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.RowSpacing">
            <summary>
            BeforeRowSpacing and AfterRowSpacing settings of rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowPropertyCategories.All">
            <summary>
            All of above.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollAction">
            <summary>
            enum to specify how to scroll a row scroll region
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowScrollAction.LineUp">
            <summary>
            scroll as if up arrow on the scroll bar was clicked
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowScrollAction.LineDown">
            <summary>
            scroll as if down arrow on the scroll bar was clicked
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowScrollAction.PageUp">
            <summary>
            scroll one page up
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowScrollAction.PageDown">
            <summary>
            scroll one page down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowScrollAction.Top">
            <summary>
            scroll all the way to the top of the row scroll region
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowScrollAction.Bottom">
            <summary>
            scroll all the way to the bottom of the row scroll region
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle">
            <summary>
            enum to specify the style of the row selector header
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.Default">
            <summary>
            default style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.None">
            <summary>
            no row selector header
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.ExtendFirstColumn">
            <summary>
            extend the first column header over the row selectors
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.SeparateElement">
            <summary>
            show a RowSelectorHeader element
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSizing">
            <summary>
            Used to specify the way rows can be resized.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizing.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizing.Fixed">
            <summary>
            Fixed. Rows cannot be resized by the user and will not be by the control.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizing.Free">
            <summary>
            Free. Rows can be resized by the user on a row-by-row basis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizing.Sychronized">
            <summary>
            Synchronized. Rows can be resized simultaneously - resizing a single row resizes all rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizing.AutoFixed">
            <summary>
            Auto-Sizing Fixed. The control will resize all rows to the size of the largest cell in any row.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizing.AutoFree">
            <summary>
            Auto-Sizing Free. The control will resize each row to the size of the largest cell in that row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSizingArea">
            <summary>
            Used to specify the interface used to resize rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizingArea.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizingArea.RowSelectorsOnly">
            <summary>
            Row Selectors Only. Only the edges of row selectors are used to resize rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizingArea.RowBordersOnly">
            <summary>
            Borders Only. Only the borders between rows are used to resize rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowSizingArea.EntireRow">
            <summary>
            Entire Row. Row borders and record selector edges are both used to resize rows.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowUpdateCancelAction">
            <summary>
            Indicates the action should be taken when BeforeRowUpdate event is cancelled.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.RowUpdateCancelAction"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowUpdateCancelAction.CancelUpdate">
            <summary>
            Cancelling the BeforeRowUpdate event will cause the UltraGrid to call CancelEdit on the
            underlying row object (if the row object is an IEditableObject).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowUpdateCancelAction.RetainDataAndActivation">
            <summary>
            Cancelling the BeforeRowUpdate event will cause the UltraGrid to retain the currently typed
            data and also retain activation on the row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Scrollbars">
            <summary>
            Specifies if vertical and/or horizontal scrollbars will
            be shown
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbars.None">
            <summary>
            no scroll bars are to be shown
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbars.Horizontal">
            <summary>
            show horizontal scroll bar only
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbars.Vertical">
            <summary>
            show vertical scroll bar only
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbars.Both">
            <summary>
            show both horizontal and vertical scroll bars
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbars.Automatic">
            <summary>
            display either scroll bar as necessary
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Scrollbar">
            <summary>
            Determines if a scrollbar will be shown on a specific
            row or column scroll region
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbar.Default">
            <summary>
            Default. The grid's ScrollBars property value determines if scrollbars are shown.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbar.Show">
            <summary>
            always show the scroll bar
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbar.ShowIfNeeded">
            <summary>
            only show it if needed
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.Scrollbar.Hide">
            <summary>
            do not show the scroll bar
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ScrollBounds">
            <summary>
            Enum for specifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBounds"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill">
            <summary>
            UltraGrid will stop scrolling once the last item is visible.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToLastItem">
            <summary>
            UltraGrid will scroll until last item is the only item visible.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ScrollStyle">
            <summary>
            Controls how scrolling is done in the grid.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollStyle.Deferred">
            <summary>
            When tracking the thumb on vertical scroll bars, rows are not 
            scrolled until the tumbtrack is released. Instead scroll tips are 
            shown.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ScrollStyle.Immediate">
            <summary>
            Rows are scrolled immediately when vertical scrollbar thumb is tracked.
            Also the scroll tooltips are defaulted not to show. This setting can be
            overridden by <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TipStyleScroll"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SelectType">
            <summary>
            Used to specify the type of selection that is allowed for an object.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectType.Default">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectType.None">
            <summary>
            None. Objects may not be selected.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectType.Single">
            <summary>
            Single Select. Only one object may be selected at any time.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectType.Extended">
            <summary>
            Extended Select. Multiple objects may be selected at once.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectType.ExtendedAutoDrag">
            <summary>
            Strategy used when multiple items can be selected but pressing the left
            button and dragging does not select other items but instead starts dragging
            the selected item immediately. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectType.SingleAutoDrag">
            <summary>
            Strategy used when only a single item can be selected and pressing the left
            button and dragging does not select other items but instead starts dragging
            the selected item immediately.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ShowBandLabels">
            <summary>
            Used for spcifying how band lables are displayed in the group-by-box
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowBandLabels.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowBandLabels.All">
            <summary>
            Display all band labels.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowBandLabels.None">
            <summary>
            Don't display any band label.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowBandLabels.AllWithGroupByColumnsOnly">
            <summary>
            Display band lables for all bands if there are any group-by columns in any band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ShowBandLabels.IntermediateBandsOnly">
            <summary>
            Show labels for bands that are between the first band with a 
            group-by-column and the last band with a group-by-column 
            (including them).
            if some but not all band labels are displayed an elipsis will apear.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SiblingRow">
            <summary>
            Used to specify the relationship between the current row and its sibling rows.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SiblingRow.First">
            <summary>
            First Sibling. Row is the first sibling in the current row's band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SiblingRow.Last">
            <summary>
            Last Sibling. Row is the last sibling in the current row's band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SiblingRow.Next">
            <summary>
            Next Sibling. Row is the next sibling in the current row's band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SiblingRow.Previous">
            <summary>
            Previous Sibling. Row is the previous sibling in the current row's band.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SizingMode">
            <summary>
            Used to specify how ScrollRegions can be resized.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SizingMode.Free">
            <summary>
            Free Sizing. ScrollRegion can be resized using the splitter.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SizingMode.Fixed">
            <summary>
            Fixed Sizing. ScrollRegion cannot be resized by the user.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SortIndicator">
            <summary>
            Used to specify the method that should be used to sort the column.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SortIndicator.None">
            <summary>
            None. The column should not be sorted.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SortIndicator.Ascending">
            <summary>
            Ascending. The column should be sorted in ascending order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SortIndicator.Descending">
            <summary>
            Descending. The column should be sorted in descending order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SortIndicator.Disabled">
            <summary>
            Disabled. Sorting should be disabled for the column.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryPosition">
            <summary>
            Indicates the location where summary associated with the SummarySettings will
            be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryPosition.Left">
            <summary>
            The summary will be displayed on the left of the footer. If there are
            multiple SummarySettings objects with Left as the ShowLocation, then
            they will be displayed in order that they occur in the 
            SummarySettingsCollection they belong to.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryPosition.Right">
            <summary>
            The summary will be displayed on the right of the footer. If there are
            multiple SummarySettings objects with Right as the ShowLocation, then
            they will be displayed in order that they occur in the 
            SummarySettingsCollection they belong to.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryPosition.Center">
            <summary>
            The summary will be displayed on the center of the footer. If there are
            multiple SummarySettings objects with Center as the ShowLocation, then
            they will be displayed in order that they occur in the 
            SummarySettingsCollection they belong to.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryPosition.UseSummaryPositionColumn">
            <summary>
            If UseLocationColumn is specified, then the summary will be displayed
            under the LocationColumn. If LocationColumn is null, then the summary
            won't be displayed at all. LocationColumn column must be from the same
            band as the band SummariesCollection is from. If an attemt is made to
            assign a column not from the same band, an exception will be throw.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryType">
            <summary>
            Used to specify the type of summary to calculate on a <see cref="T:Infragistics.Win.UltraWinGrid.SummarySettings"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Average">
            <summary>
            Average of values. Null values are taken as 0 and averaged.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Sum">
            <summary>
            Sum of all values.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Minimum">
            <summary>
            Minimum value. Null values are ignored and minimum of non-null values is calculated.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Maximum">
            <summary>
            Maximum value.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Count">
            <summary>
            Number of rows. Null values are taken into account as well.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Custom">
            <summary>
            Custom summary. CustomSummaryCalculator must be set to a
            valid instance of IcustmoSummaryCalculator.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryType.Formula">
            <summary>
            Formula summary. Formula assigned to <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.Formula"/> property will be evaluated and used as the summary value.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SupportDataErrorInfo">
            <summary>
            Enum for specifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SupportDataErrorInfo.Default">
            <summary>
            Default. Default is resolved to None.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SupportDataErrorInfo.None">
            <summary>
            None. Specifies not to use IDataErrorInfo.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SupportDataErrorInfo.RowsOnly">
            <summary>
            Rows only. Use IDataErrorInfo to display only row errors. Cell errors are ignored.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SupportDataErrorInfo.CellsOnly">
            <summary>
            Cells only. Use IDataErrorInfo to display only cell errors. Row errors are ignored.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SupportDataErrorInfo.RowsAndCells">
            <summary>
            Both rows and cells. Use IDataErrorInfo to display row and cell errors.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.TabNavigation">
            <summary>
            Used to specify how the TAB key is used when navigating the program.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.TabNavigation.NextCell">
            <summary>
            Next Cell. A TAB key will move the focus to the next cell in the grid control.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.TabNavigation.NextControl">
            <summary>
            Next Control. A TAB key will move the focus to the next control in the form's tab order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.TabNavigation.NextControlOnLastCell">
            <summary>
            Next control from the last cell. A TAB key will move the focus to the next control in the form's tab order when the last cell is active, otherwise it will move from cell to cell.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.TipStyle">
            <summary>
            used for specifying tool tip styles for sibling row connectors,
            cells and scroll tips.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.TipStyle.Default">
            <summary>
            default tool tip style
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.TipStyle.Show">
            <summary>
            show tool tips
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.TipStyle.Hide">
            <summary>
            do not show tool tips
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraComboStyle">
            <summary>
            The enumerator used for specifiying the style for an
            UltraCombo control 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDown">
            <summary>
            The user can select from the list or type into
            the textbox.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList">
            <summary>
            The user can only select from the list.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UpdateMode">
            <summary>
            used for specifying how the bound IList is updated when any changes
            are made to the data displayed in the grid
            Default UpdateMode when not specified is OnRowChangeOrLostFocus
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UpdateMode.OnRowChangeOrLostFocus">
            <summary>
            the Bound IList is updated when the user modifies cell(s) in a row
            and then selects a different row or the grid loses focus
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UpdateMode.OnRowChange">
            <summary>
            the Bound IList is updated when the user modifies cell(s) in a row
            and then selects a different row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UpdateMode.OnCellChangeOrLostFocus">
            <summary>
            the Bound IList is updated when the user modifies a cell and
            exits the edit mode or when the grid loses the focus
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UpdateMode.OnCellChange">
            <summary>
            the Bound IList is updated when the user modifies a cell and
            exits the edit mode
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UpdateMode.OnUpdate">
            <summary>
            the Bound IList is updated when Update function 
            on the Grid is called
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UseScrollWindow">
            <summary>
            Used for specifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseScrollWindow"/> method.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseScrollWindow"/></p>
            </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UseScrollWindow.None">
            <summary>
            Don't use scroll window method to scroll the grid when scrolling horizontally or vertically.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UseScrollWindow.HorizontalOnly">
            <summary>
            Use scroll window method to scroll the grid when scrolling horizontally only.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UseScrollWindow.VerticalOnly">
            <summary>
            Use scroll window method to scroll the grid when scrolling vertically only.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UseScrollWindow.Both">
            <summary>
            Use scroll window method to scroll the grid when scrolling either horizontally or vertically.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ViewStyle">
            <summary>
            Used to specify whether the grid will display single or multiple bands.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ViewStyle.SingleBand">
            <summary>
            Single Band. The grid will display a flat recordset.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ViewStyle.MultiBand">
            <summary>
            Multiple Band. The grid will display a hierarchical recordset.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ViewStyleBand">
            <summary>
            Used to specify whether bands will display horizontally or vertically.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ViewStyleBand.Vertical">
            <summary>
            Vertical. Top of new rows appears under the parent, left of new rows appears indented.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ViewStyleBand.Horizontal">
            <summary>
            Horizontal. Top of new rows appears aligned with parent's top, left of new rows appears to right of parent.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ViewStyleBand.OutlookGroupBy">
            <summary>
            Outlook group by view style
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleRelation">
            <summary>
            Used to specify the relationship between a column or group and another one in the same band in visible position order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.VisibleRelation.First">
            <summary>
            First column or group in the band in visible position order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.VisibleRelation.Last">
            <summary>
            Last column or group in the band in visible position order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.VisibleRelation.Next">
            <summary>
            Next column or group in the band in visible position order.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.VisibleRelation.Previous">
            <summary>
            Previous column or group in the band in visible position order.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FormulaRowIndexSource">
            <summary>
            Enum used for specifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FormulaRowIndexSource"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FormulaRowIndexSource.Default">
            <summary>
            Default. Resolves to RowIndex.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FormulaRowIndexSource.ListIndex">
            <summary>
            Row's list index. This is the index associated with <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ListIndex"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FormulaRowIndexSource.RowIndex">
            <summary>
            Row's index in its parent rows collection. This is the index associated with <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Index"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.FormulaRowIndexSource.VisibleIndex">
            <summary>
            Row's visible index in the parent rows collection. This is the index associated with <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.VisibleIndex"/> property.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GridEventManager">
            <summary>
            Class for managing an UltraGrid's events. It maintains an
            enabled flag for each event as well as a nested 'in progress' 
            count and it exposes events for firing each event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridEventManager.#ctor(Infragistics.Win.UltraWinGrid.UltraGrid)">
            <summary>
            contructor
            </summary>
            <param name="grid">grid that this event manager will be asociated with</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridEventManager.InProgress(Infragistics.Win.UltraWinGrid.GridEventIds)">
            <summary>
            Returns true if the event is in progress (in progress count > 0)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridEventManager.IsEnabled(Infragistics.Win.UltraWinGrid.GridEventIds)">
            <summary>
            Returns true if the event is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridEventManager.SetEnabled(Infragistics.Win.UltraWinGrid.GridEventIds,System.Boolean)">
            <summary>
            Sets a specific event to enabled or disabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridEventManager.IsEnabled(Infragistics.Win.UltraWinGrid.EventGroups)">
            <summary>
            Returns true if all events in the group are enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridEventManager.SetEnabled(Infragistics.Win.UltraWinGrid.EventGroups,System.Boolean)">
            <summary>
            Sets all events in the group to enabled or disabled
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DropDownEventManager">
            <summary>
            Class for managing an UltraDropDown's events. It maintains an
            enabled flag for each event as well as a nested 'in progress' 
            count and it exposes events for firing each event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DropDownEventManager.#ctor(Infragistics.Win.UltraWinGrid.UltraDropDown)">
            <summary>
            contructor
            </summary>
            <param name="dropDown">Drop down that this event manager will be asociated with</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DropDownEventManager.InProgress(Infragistics.Win.UltraWinGrid.DropDownEventIds)">
            <summary>
            Returns true if the event is in progress (in progress count > 0
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DropDownEventManager.IsEnabled(Infragistics.Win.UltraWinGrid.DropDownEventIds)">
            <summary>
            Returns true if the event is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DropDownEventManager.SetEnabled(Infragistics.Win.UltraWinGrid.DropDownEventIds,System.Boolean)">
            <summary>
            Sets a specific event to enabled or disabled
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ComboEventManager">
            <summary>
            Class for managing an UltraCombo's events. It maintains an
            enabled flag for each event as well as a nested 'in progress' 
            count and it exposes events for firing each event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboEventManager.#ctor(Infragistics.Win.UltraWinGrid.UltraCombo)">
            <summary>
            contructor
            </summary>
            <param name="combo">UltraCombo control that this event manager will be asociated with.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboEventManager.InProgress(Infragistics.Win.UltraWinGrid.ComboEventIds)">
            <summary>
            Returns true if the event is in progress (in progress count > 0
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboEventManager.IsEnabled(Infragistics.Win.UltraWinGrid.ComboEventIds)">
            <summary>
            Returns true if the event is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ComboEventManager.SetEnabled(Infragistics.Win.UltraWinGrid.ComboEventIds,System.Boolean)">
            <summary>
            Sets a specific event to enabled or disabled
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeLayoutEventHandler">
            <summary>
            delegate for handling event that occurs when the layout is initialized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeRowEventHandler">
            <summary>
            delegate for handling event that occurs when a row is initialized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventHandler">
            <summary>
            delegate for handling event that occurs when a group by row is initialized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableCellEventHandler">
            <summary>
            delegate for handling events that take a CancelableCellEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableRowEventHandler">
            <summary>
            delegate for handling events that take a CancelableRowEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowEventHandler">
            <summary>
            delegate for handling events that take a RowEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellEventHandler">
            <summary>
            delegate for handling events that take a CellEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollRegionEventHandler">
            <summary>
            delegate for handling events that take a ColScrollRegionEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollRegionEventHandler">
            <summary>
            delegate for handling events that take a RowScrollRegionEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandEventHandler">
            <summary>
            delegate for handling events that take a BandEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventHandler">
            <summary>
            delegate for handling events that take a CancelableAutoSizeEditEventArgs as the event args
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterSelectChangeEventHandler">
            <summary>
            delegate for after any kind of selection state changes
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeSelectChangeEventHandler">
            <summary>
            delegate for before any kind of selection state changes
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterColPosChangedEventHandler">
            <summary>
            delegate for after a column has been moved, sized or swapped
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventHandler">
            <summary>
            delegate for after a group has been moved, sized or swapped
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventHandler">
            <summary>
            delegate for before a group has been moved, sized or swapped
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventHandler">
            <summary>
            delegate for before a column has been moved, sized or swapped
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionRemovedEventHandler">
            <summary>
            delegate for handling event that is fired when a row scroll region is removed
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeSortChangeEventHandler">
            <summary>
            delegate for before the sort indicator has changed
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowInsertEventHandler">
            <summary>
            delegate for handling event that is fired before a row is being inserted
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowResizeEventHandler">
            <summary>
            delegate for handling event that is fired before a row is resized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventHandler">
            <summary>
            delegate for handling event that is fired before a cell is updated
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventHandler">
            <summary>
            delegate for handling event that is fired before rows are deleted
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventHandler">
            <summary>
            delegate for handling event that is fired before a row scroll region is scrolled
            </summary>	
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionSizeEventHandler">
            <summary>
            delegate for handling event that is fired before a row scroll region is resized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionSplitEventHandler">
            <summary>
            delegate for handling event that is fired before a row scroll region is split
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionRemovedEventHandler">
            <summary>
            delegate for handling event that is fired before a col scroll region is removed
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionSplitEventHandler">
            <summary>
            delegate for handling event that is fired before a col scroll region is split
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventHandler">
            <summary>
            delegate for handling event that is fired before a col scroll region is scrolled
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionSizeEventHandler">
            <summary>
            delegate for handling event that is fired before a col scroll region is resized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ErrorEventHandler">
            <summary>
            delegate for handling event that is fired when data update error occurs
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellDataErrorEventHandler">
            <summary>
            delegate for handling event that is fired when data update error occurs
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeExitEditModeEventHandler">
            <summary>
            delegate for handling BeforeExitEditMode event which is fired before exitting the edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializePrintPreviewEventHandler">
            <summary>
            delegate for handling event that is fired when a Initialize Print Preview event occurs
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeLogicalPrintPageEventHandler">
            <summary>
            delegate for handling event that is fired when a Initialize Logical Print Page event occurs
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializePrintEventHandler">
            <summary>
            delegate for handling event that is fired when a Initialize Print event occurs
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforePrintEventHandler">
            <summary>
            delegate for handling event that is fired when a Before Print event occurs
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSelectedEventHandler">
            <summary>
            delegate for handling event that is fired whe a new row is selected
            in the ultradropdown
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DropDownEventHandler">
            <summary>
            delegate for handling event that is fired when a new row is selected
            in the ultradropdown
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterRowEventHandler">
            <summary>
            delegate for handling event that is fired when a row is being filtered using row filters.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventHandler">
            <summary>
            delegate for handling event that is fired before row-filter dropdown is dropped down.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventHandler">
            <summary>
            delegate for handling event that is fired before custom row filters dialog is displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterRowFilterChangedEventHandler">
            <summary>
            Delegate for AfterRowFilterChanged event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventHandler">
            <summary>
            Delegate for BeforeRowFilterChanged event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventHandler">
            <summary>
            Delegate for BeforeRowFilterDropDownPopulate event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeSummaryDialogEventHandler">
            <summary>
            Delegate for BeforeSummaryDialog event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterSummaryDialogEventHandler">
            <summary>
            Delegate for AfterSummaryDialog event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryValueChangedEventHandler">
            <summary>
            delegate for SummaryValueChanged event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventHandler">
            <summary>
            Delegate for BeforeRowLayoutItemResized event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterRowLayoutItemResizedEventHandler">
            <summary>
            Delegate for AfterRowLayoutItemResized event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventHandler">
            <summary>
            Delegate for AfterUltraGridPerformAction event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeUltraGridPerformActionEventHandler">
            <summary>
            Delegate for BeforeUltraGridPerformAction event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeTemplateAddRowEventHandler">
            <summary>
            Delegate for InitializeTemplateAddRow event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterCardsScrollEventHandler">
            <summary>
            Delegate for AfterCardsScrollEventArgs event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ItemNotInListEventHandler">
            <summary>
            Delegate for ItemNotInList event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventHandler">
            <summary>
            Delegate for BeforeCardCompressedStateChanged event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventHandler">
            <summary>
            Delegate for AfterCardCompressedStateChanged event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventHandler">
            <summary>
            Delegate for BeforeDisplayDataErrorTooltip event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ComboEventIds">
            <summary>
            Uniquely identifies each UltraCombo specific event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.MouseEnterElement">
            <summary>
            event id that identifies MouseEnterElement event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.MouseLeaveElement">
            <summary>
            event id that identifies MouseLeaveElement event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterDropDown">
            <summary>
            Fired after the list is dropped down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterCloseUp">
            <summary>
            Fired after the list is closed up
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeDropDown">
            <summary>
            Fired before the list is dropped down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.InitializeLayout">
            <summary>
            Fired when a layout is initialized
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.InitializeRow">
            <summary>
            Fired when a row is initialized
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.RowSelected">
            <summary>
            fired when a new row is selected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.ValueChanged">
            <summary>
            Fired when the value property has changed
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.ItemNotInList">
            <summary>
            Fired before the Validating event whenever the text value in the editor portion of the control
            is not a value in the control’s valuelist.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.FilterRow">
            <summary>
            event id that identifies FilterRow event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterSortChange">
            <summary>
            event id that identifies AfterSortChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeSortChange">
            <summary>
            event id that identifies BeforeSortChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeColPosChanged">
            <summary>
            event id that identifies BeforeColPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterColPosChanged">
            <summary>
            event id that identifies AfterColPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeRowFilterDropDown">
            <summary>
            event id that identifies BeforeRowFilterDropDown event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeRowFilterChanged">
            <summary>
            event id that identifies BeforeRowFilterChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterRowFilterChanged">
            <summary>
            event id that identifies AfterRowFilterChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeCustomRowFilterDialog">
            <summary>
            event id that identifies BeforeCustomRowFilterDialog event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeRowFilterDropDownPopulate">
            <summary>
            event id that identifies BeforeRowFilterDropDownPopulate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterEditorButtonCloseUp">
            <summary>
            event id that identifies AfterEditorButtonCloseUp event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeEditorButtonDropDown">
            <summary>
            event id that identifies BeforeEditorButtonDropDown event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.EditorButtonClick">
            <summary>
            event id that identifies EditorButtonClick event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.EditorSpinButtonClick">
            <summary>
            event id that identifies EditorSpinButtonClick event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.InitializeEditorButtonCheckState">
            <summary>
            event id that identifies InitializeEditorButtonCheckState event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.BeforeEditorButtonCheckStateChanged">
            <summary>
            event id that identifies BeforeEditorButtonCheckStateChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.AfterEditorButtonCheckStateChanged">
            <summary>
            event id that identifies AfterEditorButtonCheckStateChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ComboEventIds.LastEventId">
            <summary>
            keep the last event id used
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DropDownEventIds">
            <summary>
            Uniquely identifies each UltraDropDown specific event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.MouseEnterElement">
            <summary>
            event id that identifies MouseEnterElement event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.MouseLeaveElement">
            <summary>
            event id that identifies MouseLeaveElement event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.AfterDropDown">
            <summary>
            Fired after the list is dropped down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.AfterCloseUp">
            <summary>
            Fired after the list is closed up
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeDropDown">
            <summary>
            Fired before the list is dropped down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.InitializeLayout">
            <summary>
            Fired when a layout is initialized
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.InitializeRow">
            <summary>
            Fired when a row is initialized
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.RowSelected">
            <summary>
            fired when a new row is selected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.TextChanged">
            <summary>
            Fired when the text in the edit portion has changed
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.FilterRow">
            <summary>
            event id that identifies FilterRow event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.AfterSortChange">
            <summary>
            event id that identifies AfterSortChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeSortChange">
            <summary>
            event id that identifies BeforeSortChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeColPosChanged">
            <summary>
            event id that identifies BeforeColPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.AfterColPosChanged">
            <summary>
            event id that identifies AfterColPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeRowFilterDropDown">
            <summary>
            event id that identifies BeforeRowFilterDropDown event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeRowFilterChanged">
            <summary>
            event id that identifies BeforeRowFilterChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.AfterRowFilterChanged">
            <summary>
            event id that identifies AfterRowFilterChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeCustomRowFilterDialog">
            <summary>
            event id that identifies BeforeCustomRowFilterDialog event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.BeforeRowFilterDropDownPopulate">
            <summary>
            event id that identifies BeforeRowFilterDropDownPopulate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.DropDownEventIds.LastEventId">
            <summary>
            keep the last event id used
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GridEventIds">
            <summary>
            Uniquely identifies each UltraGrid specific event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.MouseEnterElement">
            <summary>
            event id that identifies MouseEnterElement event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.MouseLeaveElement">
            <summary>
            event id that identifies MouseLeaveElement event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterCellActivate">
            <summary>
            event id that identifies AfterCellActivate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterCellListCloseUp">
            <summary>
            event id that identifies AfterCellListCloseUp event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterCellUpdate">
            <summary>
            event id that identifies AfterCellUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterColPosChanged">
            <summary>
            event id that identifies AfterColPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterColRegionScroll">
            <summary>
            event id that identifies AfterColRegionScroll event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterColRegionSize">
            <summary>
            event id that identifies AfterColRegionSize event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterEnterEditMode">
            <summary>
            event id that identifies AfterEnterEditMode event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterExitEditMode">
            <summary>
            event id that identifies AfterExitEditMode event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterGroupPosChanged">
            <summary>
            event id that identifies AfterGroupPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowActivate">
            <summary>
            event id that identifies AfterRowActivate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowCollapsed">
            <summary>
            event id that identifies AfterRowCollapsed event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowExpanded">
            <summary>
            event id that identifies AfterRowExpanded event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowsDeleted">
            <summary>
            event id that identifies AfterRowsDeleted event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowInsert">
            <summary>
            event id that identifies AfterRowInsert event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowRegionScroll">
            <summary>
            event id that identifies AfterRowRegionScroll event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowRegionSize">
            <summary>
            event id that identifies AfterRowRegionSize event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowResize">
            <summary>
            event id that identifies AfterRowResize event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowUpdate">
            <summary>
            event id that identifies AfterRowUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterSelectChange">
            <summary>
            event id that identifies AfterSelectChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterSortChange">
            <summary>
            event id that identifies AfterSortChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterCellCancelUpdate">
            <summary>
            event id that identifies AfterCellCancelUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowCancelUpdate">
            <summary>
            event id that identifies AfterRowCancelUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeAutoSizeEdit">
            <summary>
            event id that identifies BeforeAutoSizeEdit event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCellActivate">
            <summary>
            event id that identifies BeforeCellActivate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCellDeactivate">
            <summary>
            event id that identifies BeforeCellDeactivate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCellListDropDown">
            <summary>
            event id that identifies BeforeCellListDropDown event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCellUpdate">
            <summary>
            event id that identifies BeforeCellUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeColPosChanged">
            <summary>
            event id that identifies BeforeColPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeColRegionScroll">
            <summary>
            event id that identifies BeforeColRegionScroll event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeColRegionSize">
            <summary>
            event id that identifies BeforeColRegionSize event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeColRegionSplit">
            <summary>
            event id that identifies BeforeColRegionSplit event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeColRegionRemoved">
            <summary>
            event id that identifies BeforeColRegionRemoved event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeEnterEditMode">
            <summary>
            event id that identifies BeforeEnterEditMode event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeExitEditMode">
            <summary>
            event id that identifies BeforeExitEditMode event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeGroupPosChanged">
            <summary>
            event id that identifies BeforeGroupPosChanged event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowActivate">
            <summary>
            event id that identifies BeforeRowActivate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowDeactivate">
            <summary>
            event id that identifies BeforeRowDeactivate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowCollapsed">
            <summary>
            event id that identifies BeforeRowCollapsed event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowsDeleted">
            <summary>
            event id that identifies BeforeRowsDeleted event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowExpanded">
            <summary>
            event id that identifies BeforeRowExpanded event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowInsert">
            <summary>
            event id that identifies BeforeRowInsert event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowRegionScroll">
            <summary>
            event id that identifies BeforeRowRegionScroll event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowRegionSize">
            <summary>
            event id that identifies BeforeRowRegionSize event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowRegionSplit">
            <summary>
            event id that identifies BeforeRowRegionSplit event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowRegionRemoved">
            <summary>
            event id that identifies BeforeRowRegionRemoved event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowResize">
            <summary>
            event id that identifies BeforeRowResize event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowUpdate">
            <summary>
            event id that identifies BeforeRowUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeSelectChange">
            <summary>
            event id that identifies BeforeSelectChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeSortChange">
            <summary>
            event id that identifies BeforeSortChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCellCancelUpdate">
            <summary>
            event id that identifies BeforeCellCancelUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowCancelUpdate">
            <summary>
            event id that identifies BeforeRowCancelUpdate event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.CellChange">
            <summary>
            event id that identifies CellChange event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.CellListSelect">
            <summary>
            event id that identifies CellListSelect event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.Click">
            <summary>
            event id that identifies Click event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.ClickCellButton">
            <summary>
            event id that identifies ClickCellButton event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.Error">
            <summary>
            event id that identifies Error event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.DblClick">
            <summary>
            event id that identifies DblClick event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializeLayout">
            <summary>
            event id that identifies InitializeLayout event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializeRow">
            <summary>
            event id that identifies InitializeRow event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.OnSelectionDrag">
            <summary>
            event id that identifies OnSelectionDrag event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.PostMessageReceived">
            <summary>
            event id that identifies PostMessageReceived event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializePrintPreview">
            <summary>
            event id that identifies InitializePrintPreview event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializeLogicalPrintPage">
            <summary>
            event id that identifies InitializeLogicalPrintPage event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializePrint">
            <summary>
            event id that identifies InitializePrint event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforePrint">
            <summary>
            event id that identifies BeforePrint event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializeGroupByRow">
            <summary>
            event id that identifies InitializeGroupByRow event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.FilterRow">
            <summary>
            event id that identifies FilterRow event
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCustomRowFilterDialog">
            <summary>
            event id that identifies BeforeCustomRowFilterDialog event. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowFilterDropDown">
            <summary>
            event id that identifies BeforeRowFilterDropDown event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.CellDataError">
            <summary>
            Event id that identifies CellDataError event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeSummaryDialog">
            <summary>
            Event id that identifies BeforeSummaryDialog event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.SummaryValueChanged">
            <summary>
            Event id that identifies SummaryValueChanged event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowLayoutItemResized">
            <summary>
            Event id that identifies BeforeRowLayoutItemResized event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowLayoutItemResized">
            <summary>
            Event id that identifies AfterRowLayoutItemResized event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforePerformAction">
            <summary>
            Event id that identifies BeforePerformAction event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterPerformAction">
            <summary>
            Event id that identifies AfterPerformAction event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowFilterChanged">
            <summary>
            Event id that identifies BeforeRowFilterChanged event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterRowFilterChanged">
            <summary>
            Event id that identifies AfterRowFilterChanged event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.InitializeTemplateAddRow">
            <summary>
            Event id that identifies InitializeTemplateAddRow event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterSummaryDialog">
            <summary>
            Event id that identifies AfterSummaryDialog event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterCardsScroll">
            <summary>
            Event id that identifies AfterCardsScroll event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeRowFilterDropDownPopulate">
            <summary>
            Event id that identifies BeforeRowFilterDropDownPopulate event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeCardCompressedStateChanged">
            <summary>
            Event id that identifies BeforeCardCompressedStateChanged event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.AfterCardCompressedStateChanged">
            <summary>
            Event id that identifies AfterCardCompressedStateChanged event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.BeforeDisplayDataErrorTooltip">
            <summary>
            Event id that identifies BeforeDisplayDataErrorTooltip event.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.GridEventIds.LastEventId">
            <summary>
            keep the last event id used
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.EventGroups">
            <summary>
            Identifies groups of UltraGrid specific events
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.EventGroups.AllEvents">
            <summary>
            All events 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.EventGroups.BeforeEvents">
            <summary>
            Before events
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.EventGroups.AfterEvents">
            <summary>
            After events
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SelectChange">
            <summary>
            Used to determine what type of selection change has occurred
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectChange.Row">
            <summary>
            Row Selection Change. One or more rows were selected/deselected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectChange.Cell">
            <summary>
            Cell Selection Change. One or more cells were selected/deselected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectChange.Col">
            <summary>
            Column Selection Change. One or more columns were selected/deselected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectChange.Group">
            <summary>
            Group Selection Change. One or more groups were selected/deselected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectChange.Band">
            <summary>
            Band Selection Change. One or more bands were selected/deselected
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SelectChange.ClearAll">
            <summary>
            Clear All Selections. All rows, columns and cells were deselected
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PosChanged">
            <summary>
            Used to specify what type of position change has occurred
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PosChanged.Moved">
            <summary>
            Position Moved. The object's position changed because it was moved
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PosChanged.Swapped">
            <summary>
            Position Swapped. The object's position changed because it was swapped
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PosChanged.Sized">
            <summary>
            Position Sized. The object's position changed because it was resized
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeExitEditModeEventArgs">
            <summary>
            Event parameters used for BeforeExitEditMode event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeExitEditModeEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="forceExit">Indicates whether we are forcing the exit.</param>
            <param name="cancelingEditOperation">Indicates whether the edit operation is cancelled by the user (for example by pressing Escape key).</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeExitEditModeEventArgs.ForceExit">
            <summary>
            Indicates whether cell is being forced to exit the edit mode.
            </summary>
            <remarks>
            <p class="body">When ForceExit is true, value set to Cancel property will be ignored.</p>
            <p class="body">This happens when grid is in certain situations where exitting the edit mode is required (like when grid is being disposed). If it's one of those situations, then this property will be true.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeExitEditModeEventArgs.CancellingEditOperation">
            <summary>
            Indicates whether the edit operation is being canceled.
            </summary>
            <remarks>
            <p class="body">CancellingEditOperation is true when the user has canceled the editing the cell, for example by pressing the Escape key.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeSummaryDialogEventArgs">
            <summary>
            Used for event parameter to BeforeSummaryDialog event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeSummaryDialogEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryDialog)">
            <summary>
            Constructor.
            </summary>
            <param name="column"></param>
            <param name="summaryDialog"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSummaryDialogEventArgs.Column">
            <summary>
            Column for which the summary dialog is being shown.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSummaryDialogEventArgs.SummaryDialog">
            <summary>
            Returns the summary dialog that will be shown.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterSummaryDialogEventArgs">
            <summary>
            Event args associated with <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterSummaryDialog"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterSummaryDialogEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="column"></param>
            <param name="summariesChanged"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterSummaryDialogEventArgs.Column">
            <summary>
            Column for which the summary dialog was shown.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterSummaryDialogEventArgs.SummariesChanged">
            <summary>
            Indicates whether the user modified any summaries in the dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryValueChangedEventArgs">
            <summary>
            Used for event parameter to SummaryValueChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.SummaryValue)">
            <summary>
            Constructor.
            </summary>
            <param name="summaryValue">Object with information on summary value.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValueChangedEventArgs.SummaryValue">
            <summary>
            Object with information on summary value.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs">
            <summary>
            Used for event parameter to BeforeRowFilterDropDown event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.RowsCollection,Infragistics.Win.ValueList)">
            <summary>
            Constructor
            </summary>
            <param name="column">Column associated with the column header flter drop down button was clicked on.</param>
            <param name="rows">If <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> resolves to SiblingRowsOnly, then the RowsCollection associated with the column header that the filter dropdown button is clicked on will be passed in. Otherwise it will be null.</param>
            <param name="filterDropDownContents">The contents of the filter drop down as a ValueList.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs.Column">
            <summary>
            Column associated with the column header flter drop down button was clicked on.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs.ValueList">
            <summary>
            The contents of the filter drop down as a ValueList. You can add or remove items from this 
            ValueList.
            </summary>
            <remarks>
            <p class="body">
            The contents of the filter drop down as a ValueList. You can add or remove items from this 
            ValueList. When an item is added to the value list, it's DataValue will be used for comparision.
            DataValue can be a data value or it can be an instance of FilterCondition or ColumnFilter object.
            Setting the DataValue to a FilterCondition or ColumnFilter instance allows you to add items
            that have custom filter conditions.
            </p>
            <p><seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnFilter"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs.Rows">
            <summary>
            If <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> resolves to SiblingRowsOnly, then the RowsCollection associated with the column header that the filter dropdown button is clicked on will be passed in. Otherwise it will be null.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventArgs">
            <summary>
            Used for event parameter to BeforeCustomRowFilterDialog event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.RowsCollection,Infragistics.Win.UltraWinGrid.CustomRowFiltersDialog)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventArgs.Column">
            <summary>
            Column for which the custom filter dialog is being shown.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventArgs.Rows">
            <summary>
            Returns null if the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> resolves to <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterMode.AllRowsInBand"/> otherwise it returns the rows collection that's being filtered.
            </summary>
            <remarks>
            <p class="body">There are two row filtering modes: <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterMode.SiblingRowsOnly"/> and <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterMode.AllRowsInBand"/>. When it's <b>AllRowsInBand</b> all the rows in a band are being filtered and thus there is no particular rows collection that's being filtered. As a result this property returns null. However if the row filter mode is <b>SiblingRowsOnly</b> where rows of a particular rows collection are being filtered, then this property will return that rows collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventArgs.CustomRowFiltersDialog">
            <summary>
            Returns the custom row filter dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterRowEventArgs">
            <summary>
            Used as event parameter for FilterRow event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterRowEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="row">Row that's being filtered.</param>
            <param name="isRowFilteredOut">Whether the row passed filters.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterRowEventArgs.Row">
            <summary>
            Row that's being filtered (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterRowEventArgs.RowFilteredOut">
            <summary>
            Specifies whether the row is filtered out. You can change the value of this property in which case the row's IsFilteredOut state will be changed to the new value.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventArgs">
            <summary>
            EventArgs for BeforeRowFilterChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.ColumnFilter)">
            <summary>
            Constructor.
            </summary>
            <param name="newColumnFilter"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventArgs.NewColumnFilter">
            <summary>
            Changed column filter conditions.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventArgs.ProcessMode">
            <summary>
            The process mode for the filter
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterRowFilterChangedEventArgs">
            <summary>
            EventArgs for AfterRowFilterChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterRowFilterChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterRowFilterChangedEventArgs.Column">
            <summary>
            Returns the column for which the filters changed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs">
            <summary>
            EventArgs for BeforeRowFilterDropDownPopulate event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.RowsCollection,Infragistics.Win.ValueList)">
            <summary>
            Constructor
            </summary>
            <param name="column">Column associated with the column header flter drop down button was clicked on.</param>
            <param name="rows">If <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> resolves to SiblingRowsOnly, then the RowsCollection associated with the column header that the filter dropdown button is clicked on will be passed in. Otherwise it will be null.</param>
            <param name="filterDropDown">The value list that will be used as the filter drop down.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs.Column">
            <summary>
            Column associated with the column header flter drop down button was clicked on.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs.ValueList">
            <summary>
            The value list that will be used as the filter drop down. You can populate the value list and set Handled to true to prevent the UltraGrid from populating the value list.
            </summary>
            <remarks>
            <p class="body">
            You can add items to this ValueList. When an item is added to the value list, it's DataValue will be used for comparision.
            DataValue can be a data value or it can be an instance of FilterCondition or ColumnFilter object.
            Setting the DataValue to a FilterCondition or ColumnFilter instance allows you to add items
            that have custom filter conditions.
            </p>
            <p><seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnFilter"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs.Rows">
            <summary>
            If <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> resolves to SiblingRowsOnly, then the RowsCollection associated with the column header that the filter dropdown button is clicked on will be passed in. Otherwise it will be null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs.Handled">
            <summary>
            Indicates whether the value list was populated and that UltraGrid should not attempt to pupulate the value list. Default value is false.
            </summary>
            <remarks>
            <p class="body">If the value list is populated set <b>Handled</b> to true. Failing to do so will result in UltraGrid clearing the value list and populating it with the cell values.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs">
            <summary>
            Event parameters used for events that take RowScrollRegion as its argument
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="rowScrollRegion"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs.RowScrollRegion">
            <summary>
            The row scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColScrollRegionEventArgs">
            <summary>
            Event parameters used for events that take ColScrollRegion as their argument
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColScrollRegionEventArgs.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="colScrollRegion"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColScrollRegionEventArgs.ColScrollRegion">
            <summary>
            The col scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableDropDownEventArgs">
            <summary>
            Event parameters used for the BeforeDropDown event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelableDropDownEventArgs.#ctor(System.Windows.Forms.Control)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableDropDownEventArgs.Owner">
            <summary>
            owner
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DropDownEventArgs">
            <summary>
            Event parameters used for the AfterDropDown and AfterCloseUp event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DropDownEventArgs.#ctor(System.Windows.Forms.Control)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DropDownEventArgs.Owner">
            <summary>
            owner
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSelectedEventArgs">
            <summary>
            Event parameters used for the AfterDropDown and AfterCloseUp event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectedEventArgs.#ctor(System.Windows.Forms.Control,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectedEventArgs.Owner">
            <summary>
            owner
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectedEventArgs.Row">
            <summary>
            selected row
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs">
            <summary>
            Event parameters used for the AfterSelectChange event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs.Type">
            <summary>
            The select change (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs">
            <summary>
            Event parameters used for the AfterGroupPosChangedEventArgs event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.PosChanged,Infragistics.Win.UltraWinGrid.GroupHeader[])">
            <summary>
            Constructor
            </summary>
            <param name="posChanged"></param>
            <param name="groupHeaders"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs.PosChanged">
            <summary>
            position changed value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs.GroupHeaders">
            <summary>
            groups (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs">
            <summary>
            Event parameters used for the AfterColPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.PosChanged,Infragistics.Win.UltraWinGrid.ColumnHeader[])">
            <summary>
            Constructor
            </summary>
            <param name="posChanged"></param>
            <param name="columnHeaders"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs.PosChanged">
            <summary>
            postion changed value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs.ColumnHeaders">
            <summary>
            columns (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeSelectChangeEventArgs">
            <summary>
            Event parameters used for the BeforeSelectChange event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeSelectChangeEventArgs.#ctor(System.Type,Infragistics.Win.UltraWinGrid.Selected)">
            <summary>
            Constructor
            </summary>
            <param name="type"></param>
            <param name="newSelections"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSelectChangeEventArgs.Type">
            <summary>
            select change value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSelectChangeEventArgs.NewSelections">
            <summary>
            new selections (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BandEventArgs">
            <summary>
            Event parameters used for the events that take Band object as its arguments
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BandEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Constructor
            </summary>
            <param name="band"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BandEventArgs.Band">
            <summary>
            The band (usually the band that the cell belongs to) (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowEventArgs">
            <summary>
            Event parameters used for events that take Row as its argument
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
            <param name="row"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowEventArgs.Row">
            <summary>
            The row (usually the row that the cell belongs to) (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs">
            <summary>
            Event parameters used for the BeforeGroupPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.PosChanged,Infragistics.Win.UltraWinGrid.GroupHeader[])">
            <summary>
            Constructor
            </summary>
            <param name="posChanged"></param>
            <param name="groupHeaders"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs.PosChanged">
            <summary>
            The position changed (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs.GroupHeaders">
            <summary>
            groups (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionRemovedEventArgs">
            <summary>
            Event parameters used for the BeforeColRegionRemoved event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeColRegionRemovedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="colScrollRegion"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionRemovedEventArgs.ColScrollRegion">
            <summary>
            The column scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionSplitEventArgs">
            <summary>
            Event parameters used for the BeforeColRegionSplit event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeColRegionSplitEventArgs.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="originalColScrollRegion"></param>
            <param name="newColScrollRegion"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionSplitEventArgs.NewColScrollRegion">
            <summary>
            The new column scroll region (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionSplitEventArgs.OriginalColScrollRegion">
            <summary>
            The original column scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs">
            <summary>
            Event parameters used for the BeforeColRegionScroll event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="newState"></param>
            <param name="oldState"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs.NewState">
            <summary>
            The new state column scroll region (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs.OldState">
            <summary>
            The old state column scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventArgs">
            <summary>
            Event parameters used for the BeforeRowLayoutItemResized event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventArgs.#ctor(Infragistics.Win.Layout.ILayoutItem,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Constructor.
            </summary>
            <param name="item">Row-Layout item being resized.</param>
            <param name="oldSize">Old size.</param>
            <param name="newSize">New size.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventArgs.RowLayoutItem">
            <summary>
            Row-Layout item being resized. This can be either an UltraGridColumn or a ColumnHeader. It will be UltraGridColumn if the item being resized is a cell. It will be ColumnHeader if the item being resized is a header.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventArgs.OldSize">
            <summary>
            Gets the old size of the layout item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventArgs.NewSize">
            <summary>
            Gets or sets the new size of the layout item.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterRowLayoutItemResizedEventArgs">
            <summary>
            Event parameters used for the AfterRowLayoutItemResized event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterRowLayoutItemResizedEventArgs.#ctor(Infragistics.Win.Layout.ILayoutItem)">
            <summary>
            Constructor.
            </summary>
            <param name="item">Row-Layout item being resized.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterRowLayoutItemResizedEventArgs.RowLayoutItem">
            <summary>
            Row-Layout item being resized. This can be either an UltraGridColumn or a ColumnHeader. It will be UltraGridColumn if the item being resized is a cell. It will be ColumnHeader if the item being resized is a header.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionRemovedEventArgs">
            <summary>
            Event parameters used for the BeforeRowRegionRemoved event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowRegionRemovedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="rowScrollRegion"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionRemovedEventArgs.RowScrollRegion">
            <summary>
            The row scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs">
            <summary>
            Event parameters used for the BeforeSortChange event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand,Infragistics.Win.UltraWinGrid.SortedColumnsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="band"></param>
            <param name="sortedColumns"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs.Band">
            <summary>
            The band (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs.SortedColumns">
            <summary>
            The sorted columns (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs.ProcessMode">
            <summary>
            The process mode for the sort
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowInsertEventArgs">
            <summary>
            Event parameters used for the BeforeRowInsert event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowInsertEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
            <param name="band"></param>
            <param name="parentRow"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowInsertEventArgs.Band">
            <summary>
            The band (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowInsertEventArgs.ParentRow">
            <summary>
            The parent row (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowResizeEventArgs">
            <summary>
            Event parameters used for the BeforeRowResize event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowResizeEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="row"></param>
            <param name="newHeight"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowResizeEventArgs.NewHeight">
            <summary>
            The new height (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowResizeEventArgs.Row">
            <summary>
            The row (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventArgs">
            <summary>
            Event parameters used for the BeforeRowsDeleted event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow[],System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="rows"></param>
            <param name="displayPromptMsg"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventArgs.Rows">
            <summary>
            The rows (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventArgs.DisplayPromptMsg">
            <summary>
            Whether to display prompt message.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs">
            <summary>
            Event parameters used for the BeforeRowRegionScroll event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="newState"></param>
            <param name="oldState"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs.NewState">
            <summary>
            The new state row scroll region (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs.OldState">
            <summary>
            The old state row scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionSizeEventArgs">
            <summary>
            Event parameters used for the BeforeRowRegionSize event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowRegionSizeEventArgs.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="region1"></param>
            <param name="region2"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionSizeEventArgs.Region1">
            <summary>
            The row scroll region 1 (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionSizeEventArgs.Region2">
            <summary>
            The row scroll region 2 (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeRowRegionSplitEventArgs">
            <summary>
            Event parameters used for the BeforeRowRegionSplit event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeRowRegionSplitEventArgs.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="originalRowScrollRegion"></param>
            <param name="newRowScrollRegion"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionSplitEventArgs.NewRowScrollRegion">
            <summary>
            The new row scroll region (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeRowRegionSplitEventArgs.OriginalRowScrollRegion">
            <summary>
            The original row scroll region (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs">
            <summary>
            Event parameters used for the BeforeCellUpdate event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridCell,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="cell"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs.Cell">
            <summary>
            The cell (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs.NewValue">
            <summary>
            The new value of the cell (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColRegionSizeEventArgs">
            <summary>
            Event parameters used for the BeforeColRegionSize event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeColRegionSizeEventArgs.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Constructor
            </summary>
            <param name="region1"></param>
            <param name="region2"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionSizeEventArgs.Region1">
            <summary>
            The column scroll region 1 (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColRegionSizeEventArgs.Region2">
            <summary>
            The column scroll region 2 (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs">
            <summary>
            Event parameters used for the BeforeColPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.PosChanged,Infragistics.Win.UltraWinGrid.ColumnHeader[])">
            <summary>
            Constructor
            </summary>
            <param name="posChanged"></param>
            <param name="columnHeaders"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs.PosChanged">
            <summary>
            The position changed action (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs.ColumnHeaders">
            <summary>
            The selected columns (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableRowEventArgs">
            <summary>
            Event parameters used for the BeforeCellActivate event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelableRowEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
            <param name="row"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableRowEventArgs.Row">
            <summary>
            The row that the cell belongs to (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.DataErrorInfo">
            <summary>
            Class for handling data error info. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorInfo.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.DataErrorInfo.#ctor(System.Exception,System.Object,Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.UltraGridCell,Infragistics.Win.UltraWinGrid.DataErrorSource,System.String)">
            <summary>
            constructor.
            Pass in whatever applies and null for others
            </summary>
            <param name="exception"></param>
            <param name="invalidValue"></param>
            <param name="row"></param>
            <param name="cell"></param>
            <param name="source"></param>
            <param name="errorText"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorInfo.Exception">
            <summary>
            If the data error is caused by an exception, then this property will
            return that exception object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorInfo.Row">
            <summary>
            Row associated with the DataError. If no row was associated
            then this will return null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorInfo.Cell">
            <summary>
            Cell associated with this DataError. If no cell was associated with
            this DataErorr, it will return null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorInfo.ErrorText">
            <summary>
            Error message associated with this error. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorInfo.InvalidValue">
            <summary>
            Returns the invalid value, if any, associated with this DataError
            event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.DataErrorInfo.Source">
            <summary>
            Source of the DataError.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.MaskErrorInfo">
            <summary>
            class for handling mask error info
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MaskErrorInfo.InvalidText">
            <summary>
            The text that did not match the mask
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MaskErrorInfo.StartPos">
            <summary>
            Position where the invalid char is in InvalidText
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MaskErrorInfo.CancelBeep">
            <summary>
            Set this property to false to prevent the control from beeping
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ErrorEventArgs">
            <summary>
            Event parameters used for handling data error events
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ErrorEventArgs.#ctor(Infragistics.Win.UltraWinGrid.DataErrorInfo)">
            <summary>
            constructor
            </summary>
            <param name="dataErrorInfo"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ErrorEventArgs.#ctor(Infragistics.Win.UltraWinGrid.MaskErrorInfo,System.String)">
            <summary>
            constructor
            </summary>
            <param name="maskErrorInfo"></param>
            <param name="errorDescription"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ErrorEventArgs.ErrorText">
            <summary>
            gets or sets the error text.
            You can modify ErrorText to change what is displayed in the
            error dialog box.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ErrorEventArgs.DataErrorInfo">
            <summary>
            If this error event was fired due to a data error, this will return
            the DataErrorInfo instance associated with it. Otherwise it will
            return null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ErrorEventArgs.MaskErrorInfo">
            <summary>
            If this error event was fired due to a mask error, this will return
            the MaskErrorInfo instance associated with it. Otherwise it will
            return null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ErrorEventArgs.ErrorType">
            <summary>
            Indicates what type of error occurred that prompted this Error event to be fired.
            </summary>
            <remarks>
            <p class="body">Depedning on what type of error lead to firing of this event, DataErrorInfo and MaskErrorInfo will be null. If the ErrorType is Generic, both DataErrorInfo and MaskErroInfo will be null. If error type is Data, then DataErrorInfo will contain a valid DataErrorInfo object and MaskErrorInfo will return null. If it's Mask then MaskErrorInfo will return a valid MaskErroInfo object and DataErrorInfo will return null.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs">
            <summary>
            Event parameters used for handling data error events
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs.#ctor(System.Boolean)">
            <summary>
            constructor
            </summary>
            <param name="forceExit"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs.ForceExit">
            <summary>
            True if the cell is being forced to exit edit mode. If this is true then StayInEditMode will be ignored.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs.StayInEditMode">
            <summary>
            Indicates whether to stay in edit mode. Default value is true.
            </summary>
            <remarks>
            <p class="body">If StayInEditMode is true, then the cell won't exit the edit mode unless the ForceExit is true in which case the cell will exit the edit mode regardless.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs.RaiseErrorEvent">
            <summary>
            Indicates whether to raise Error event. Default value is true.
            </summary>
            <remarks>
            <p class="body">If RaiseErrorEvent is true, then Error event will be fired. If this is false, then Error event will not be fired.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs.RestoreOriginalValue">
            <summary>
            Whether to restore the value in the cell to original value. Default value is true.
            </summary>
            <remarks>
            <p class="body">RestoreOriginalValue indicates whether to restore the original value in the cell.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs">
            <summary>
            Event parameters used for events that take AutoSizeEdit as their arguments 
            and are cancelable
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs.#ctor(Infragistics.Win.DefaultableBoolean)">
            <summary>
            Constructor
            </summary>
            <param name="autoSizeEdit"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs.AutoSizeEdit">
            <summary>
            The AutoSizeEdit (read-only).
            </summary>
            <remarks>
            <p class="body">This property has been deprecated. Just set the Cancel property to true to prevent the cell from performing AutoSizeEdit.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs.StartHeight">
            <summary>
            Gets or sets the starting height of the edit control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs.StartWidth">
            <summary>
            Gets or sets the starting width of the edit control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs.MaxHeight">
            <summary>
            Gets or sets the max height of the edit control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs.MaxWidth">
            <summary>
            Gets or sets the max wdith of the edit control.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs">
            <summary>
            Event parameters used for Logical Print Page event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.#ctor(System.Drawing.Printing.PrintDocument,Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.LogicalPageLayoutInfo">
            <summary>
            Layout info of the current logical page
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.LogicalPageNumber">
            <summary>
            Current logical page number (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.Collate">
            <summary>
            Returns the PrintDocument's Collate value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.Copies">
            <summary>
            Returns the PrintDocument's Copies value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.DocumentName">
            <summary>
            Returns the PrintDocument's name (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.MarginTop">
            <summary>
            Returns the PrintDocument's Margin Top value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.MarginBottom">
            <summary>
            Returns the PrintDocument's Margin Bottom value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.MarginLeft">
            <summary>
            Returns the PrintDocument's Margin Left value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.MarginRight">
            <summary>
            Returns the PrintDocument's Margin Right value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.Landscape">
            <summary>
            Returns the PrintDocument's Landscape value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.PrintRange">
            <summary>
            Returns the PrintDocument's PrintRange value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.PaperWidth">
            <summary>
            Returns the PrintDocument's PaperSize Width value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.PaperHeight">
            <summary>
            Returns the PrintDocument's PaperSize Height value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.PrintColors">
            <summary>
            Returns the PrintDocument's SupportsColor value (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs.PrinterName">
            <summary>
            Returns the PrintDocument's PrinterName value (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs">
            <summary>
            Event parameters used for initialize print event, and
            before print event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs.#ctor(System.Drawing.Printing.PrintDocument,Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo,Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs.PrintLayout">
            <summary>
            Returns the print layout.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs.PrintDocument">
            <summary>
            The print document (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs.DefaultLogicalPageLayoutInfo">
            <summary>
            The default layout info, for all logical pages
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelablePrintPreviewEventArgs">
            <summary>
            Event parameters used for Initialize Print Preview event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelablePrintPreviewEventArgs.#ctor(System.Drawing.Printing.PrintDocument,Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo,Infragistics.Win.UltraWinGrid.PrintPreviewSettings,Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelablePrintPreviewEventArgs.PrintPreviewSettings">
            <summary>
            Settings used to alter the print preview dialog
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CellEventArgs">
            <summary>
            Event parameters used for events that take a row and column designating
            a cell (intersection of the row and the column)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CellEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridCell)">
            <summary>
            Constructor
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CellEventArgs.Cell">
            <summary>
            The column that the cell belongs to (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.CancelableCellEventArgs">
            <summary>
            Event parameters used for events that take a row and a column
            designating a cell (the cell at the intersection of the row and the 
            column) as their argument and are cancelable
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CancelableCellEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridCell)">
            <summary>
            Constructor
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.CancelableCellEventArgs.Cell">
            <summary>
            The column that the cell belongs to (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs">
            <summary>
            Event parameters used the InitializeLayout event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs.Layout">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeRowEventArgs">
            <summary>
            Event parameters used the InitializeRow event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.InitializeRowEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="row"></param>
            <param name="reInitialize"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.InitializeRowEventArgs.Row">
            <summary>
            The row being initialized (read-only) 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.InitializeRowEventArgs.ReInitialize">
            <summary>
            True if the row has already been initialized (read-only) 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventArgs">
            <summary>
            Event parameters used the InitializeRow event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridGroupByRow,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="row"></param>
            <param name="reInitialize"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventArgs.Row">
            <summary>
            The group by row being initialized (read-only) 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventArgs.ReInitialize">
            <summary>
            True if the row has already been initialized (read-only) 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeUltraGridPerformActionEventArgs">
            <summary>
            EventArgs class used for BeforeUltraGridPerformAction event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeUltraGridPerformActionEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridAction)">
            <summary>
            Constructor.
            </summary>
            <param name="ultraGridAction"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeUltraGridPerformActionEventArgs.UltraGridAction">
            <summary>
            The action that's about to be performed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventArgs">
            <summary>
            EventArgs class used for AfterUltraGridPerformAction event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridAction)">
            <summary>
            Constructor.
            </summary>
            <param name="ultraGridAction"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventArgs.UltraGridAction">
            <summary>
            The action that's been performed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.InitializeTemplateAddRowEventArgs">
            <summary>
            Event args associated with <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeTemplateAddRow"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.InitializeTemplateAddRowEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
            <param name="templateAddRow"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.InitializeTemplateAddRowEventArgs.TemplateAddRow">
            <summary>
            Associated template add-row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterCardsScrollEventArgs">
            <summary>
            Event args for <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCardsScroll"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterCardsScrollEventArgs.#ctor(Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="rows"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterCardsScrollEventArgs.Rows">
            <summary>
            Rows collection where cards were scrolled.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventArgs">
            <summary>
            EventArgs for <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCardCompressedStateChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.CardCompressedState)">
            <summary>
            Constructor.
            </summary>
            <param name="row"></param>
            <param name="newCompressedState"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventArgs.Row">
            <summary>
            The UltraGridRow undergoing a CardCompressedState change.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventArgs.NewCompressedState">
            <summary>
            The new CardCompressedState of the Row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventArgs">
            <summary>
            EventArgs for <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCardCompressedStateChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.CardCompressedState)">
            <summary>
            Constructor.
            </summary>
            <param name="row"></param>
            <param name="newCompressedState"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventArgs.Row">
            <summary>
            The UltraGridRow undergoing a CardCompressedState change.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventArgs.NewCompressedState">
            <summary>
            The new CardCompressedState of the Row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs">
            <summary>
            Event args associated with <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeDisplayDataErrorTooltip"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.UltraGridColumn,System.ComponentModel.IDataErrorInfo,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="dataErrorInfo"></param>
            <param name="tooltipText"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs.Row">
            <summary>
            Returns the row for which the data error tool tip is being displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs.Column">
            <summary>
            If the data error tooltip is being displayed for a row (when the user hovers over the
            the data error icon on the row selector), the <b>Column</b> will be null. If the
            data error tooltip is being displayed for a cell then this property will return the
            associated column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs.DataErrorInfo">
            <summary>
            Associated IDataErrorInfo instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs.TooltipText">
            <summary>
            Gets or sets the text that will be displayed in the data error tooltip.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement">
            <summary>
            ExpansionIndicatorUIElement
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement.Toggle">
            <summary>
            Handles toggling of the expansion indicator state.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement.IsOpen">
            <summary>
            Indicates if the expansion indicator is expanded/open.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement.CanExpand">
            <summary>
            Indicates whether the associated object can be expanded.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ExpansionIndicatorUIElement.Row">
            <summary>
            The UltraGridRow object represents a row of data in the grid. An UltraGridRow corresponds to a single record in an underlying data source. This property is read-only at run-time.
            </summary>
            <remarks>
            <p class="body">The UltraGridRow object represents a single row of data, and corresponds to a single record in the underlying recordset. Rows occupy a position in the data hierarchy of the UltraWinGrid between Cells and Bands. The UltraGridRow object is always the child of an UltraGridBand object, and its children are UltraGridCell objects.</p>
            <p class="body">Much of the data-binding functionality of the grid involves working with the UltraGridRow object. Whenever an UltraGridRow object is loaded by the grid, the <b>InitializeRow</b> event is fired.</p>
            <p class="body">UltraGridRow objects can influence the formatting of the cells they contain through the setting of the UltraGridRow's <b>CellAppearance</b> property. Rows can also be formatted independently of the cells they contain. Frequently, cells are drawn from the top of the row to the bottom and are aligned edge to edge so that they occupy the entire area of the row; the row itself is not visible because cells are always "above" the row in the grid's z-order. However it is possible to specify spacing between and around cells that lets the underlying UltraGridRow object show through. Only then will formatting applied directly to the UltraGridRow object be visible to the user.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterCondition">
            <summary>
            Class used for defining a row filter condition.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterCondition.#ctor(Infragistics.Win.UltraWinGrid.FilterConditionsCollection,Infragistics.Win.UltraWinGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="parentCollection">Collection this object belongs to.</param>
            <param name="comparisionOperator">Comparision operator.</param>
            <param name="compareValue">compare value</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterCondition.#ctor(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="column">Value of this column will be compared with the <b>compareVlaue</b> by the specified comparision operator.</param>
            <param name="comparisionOperator">Comparision operator.</param>
            <param name="compareValue">This value will be compared with the <b>column</b>'s value by the specified comparision operator.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterCondition.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterCondition.MeetsCriteria(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Returns true if the row passes the filter condition.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterCondition.Clone">
            <summary>
            Clones the filter condition object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterCondition.ToString">
            <summary>
            Overridden. Returns the string representation of this filter condition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterCondition.ComparisionOperator">
            <summary>
            Comparision operator that will be used for comparing compareValue to
            the column's value (for the row that's being filtered).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterCondition.CompareValue">
            <summary>
            Gets or sets the compare value. Compare value is the value on the right side of the comparision operator. 
            Cell's value will be on the left side.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterCondition.Column">
            <summary>
            Associated column.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterConditionsCollection">
            <summary>
            Collection of FilterCondition objects.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.ColumnFilter.FilterConditions"/>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.#ctor(Infragistics.Win.UltraWinGrid.ColumnFilter)">
            <summary>
            Constructor.
            </summary>
            <param name="columnFilter">Associated column filter.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.Add(Infragistics.Win.UltraWinGrid.FilterCondition)">
            <summary>
            Adds the specified filterCondition to the collection.
            </summary>
            <param name="filterCondition"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.Add(Infragistics.Win.UltraWinGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Adds a new FilterCondition object to the collection.
            </summary>
            <param name="comparisionOperator"></param>
            <param name="compareValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.Clear">
            <summary>
            Empties the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an item at index position in the collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.Remove(Infragistics.Win.UltraWinGrid.FilterCondition)">
            <summary>
            Removes filterCondition object from the condition.
            </summary>
            <param name="filterCondition"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.CopyTo(Infragistics.Win.UltraWinGrid.FilterCondition[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.InitialCapacity">
            <summary>
            Property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterConditionsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement">
            <summary>
            A column or group swap button UI element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws small arrow in the foreground
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            does nothing as SwapButtonUIElement does not get a focus
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.OnMouseEnter">
            <summary>
            called when mouse enters this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.OnMouseLeave">
            <summary>
            called when the mouse leaves this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FilterDropDownButtonUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <para>The border style of cells, rows, and headers can be set by the BorderStyleCell, BorderStyleRow, and BorderStyleHeader properties respectively.</para>
            <para>The border style of the AddNew box buttons can be set by the ButtonBorderStyle property.</para>
            <para>Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FixedCellSeparatorUIElement">
            <summary>
            UIElement used for displaying separation between fixed headers and non-fixed headers.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedCellSeparatorUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedCellSeparatorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FixedCellSeparatorUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement">
            <summary>
            UIElement used for fixed header indicator.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws small arrow in the foreground
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Handles the rendering of the element using the system themes.
            </summary>
            <param name="drawParams">UIElementDrawParams</param>
            <returns>A boolean indicating if the element was able to successfully
            render with the system theme. Used to determine whether the remaining
            draw methods are invoked.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            does nothing as SwapButtonUIElement does not get a focus
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.ButtonClick">
            <summary>
            Called when the button is clicked.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FixedHeaderIndicatorUIElement.ButtonStyle">
            <summary>
            Gets the button style for the element.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridGroup">
            <summary>
            UltraGrid's Column object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.#ctor(System.Int32)">
            <summary>
            Constructor used during de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.#ctor(System.String,System.Int32)">
            <summary>
            Constructor used during de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ToString">
            <summary>
            Returns the key of the group
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ShouldSerializeHidden">
            <summary>
             Returns true if an bands object has been created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ResetHidden">
            <summary>
            Resets Hidden to its default value (False.)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ShouldSerializeHeader">
            <summary>
            Returns true if the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Header"/> property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ResetHeader">
            <summary>
            Resets the properties of the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Header"/>  to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ShouldSerializeCellAppearance">
            <summary>
             Returns true if an bands object has been created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ResetCellAppearance">
            <summary>
            Resets CellAppearance to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.ShouldSerializeWidth">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.GetRelatedVisibleGroup(Infragistics.Win.UltraWinGrid.VisibleRelation)">
            <summary>
            Get the next/previous/first or last group in this band based on each group header's <see cref="P:Infragistics.Win.UltraWinGrid.GroupHeader.VisiblePosition"/>.
            </summary>
            <param name="relation">The relation the requested group has to this group.</param>
            <returns>The related group.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.GetIndex">
            <summary>
            returns the index of the group in the groups collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.GetColumn(System.Int16)">
            <summary>
            Returns the column at the passed in visible position
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.GetIndex(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Returns the index of the column in the groupcols collection
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.RemoveColumn(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Removes a column from our groupcols collection
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.GetResizeRange(System.Int32@,System.Int32@)">
            <summary>
            Returns the min and max width of the group.
            </summary>
            <param name="minWidth"></param>
            <param name="maxWidth"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.Activate">
            <summary>
            Activate the group.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.CreateSwapList(Infragistics.Win.ValueList)">
            <summary>
            Sets the swapDrown up with the list of groups that can be swapped with this
            group.
            </summary>
            <param name="swapDropDown"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Band">
            <summary>
            The UltraGridBand that this column belongs to (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band. Also, changing the <b>Hidden</b> property of an object affects all instances of that object. For example, a hidden column or row is hidden in all scrolling regions.</p>
            <p class="body">There may be instances where the <b>Hidden</b> property cannot be changed. For example, you cannot hide the currently active rowscrollregion or colscrollregion. If you attempt to set the <b>Hidden</b> property of the active rowscrollregion to True, an error will occur.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Index">
            <summary>
            The index of this group in the band's group collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Header">
            <summary>
            Returns the Header object associated with the object. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">A Header object represents a column or group header that specifies information about the column or group, and can also serve as the interface for functionality such as moving, swapping or sorting the column or group. Group headers have the added functionality of serving to aggregate multiple columns under a single heading.</p> 
            <p class="body">The <b>Header</b> property provides access to the header that is associated with an object. The <b>Header</b> property provides access to the header that is associated with an object. In some instances, the type of header may be ambiguous, such as when accessing the <b>Header</b> property of a UIElement object. You can use the <b>Type</b> property of the Header object returned by the <b>Header</b> property to determine whether the header belongs to a column or a group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.CellAppearance">
            <summary>  
            Determines the formatting attributes that will be applied to the cells in a group.
            </summary>  
            <remarks>
            <p class="body">The <b>CellAppearance</b> property is used to specify the appearance of all the cells in a row. When you assign an Appearance object to the <b>CellAppearance</b> property, the properties of that object will be applied to all the cells belonging to the row. You can use the <b>CellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the cells, for example:</p> 
            <p class="code">UltraWinGrid1.Override.CellAppearance.BackColor = vbYellow</p>
            <p class="body">You can override the <b>CellAppearance</b> setting for specific cells by setting the <b>Appearance</b> property of the UltraGridCell object directly. The cell will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>CellAppearance</b> property of the row or band it occupies.</p>
            <p class="body">If any of the properties of the Appearance object specified for the <b>CellAppearance</b> property are set to default values, the properties from the Appearance object of the row containing the cell are used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.HasCellAppearance">
            <summary>
            Returns true if an CellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Width">
            <summary>
            Returns or sets the width of an object in container units or pixels.
            </summary>
            <remarks>
            <p class="body">The <b>Width</b> property is used to determine the horizontal dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">When proportional resizing is used for the UltraGridColumn and UltraGridGroup objects, the width of the column increases or decreases proportionally as the area occupied by the column changes size, due to the resizing of adjacent columns or of the grid itself.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Extent">
            <summary>
            Property: gets group's extent
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.Columns">
            <summary>
            Property: gets Group's GroupColumnsCollection [readonly]  
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.AllowSizing">
            <summary>
            Returns true if the group can be resized
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.ProportionalResizeResolved">
            <summary>
            Indicates whether this group should be proportionally reiszed when autofitting columns.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroup.AllowSwapping">
            <summary>
            Returns true if swap drop down button appears in the header
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridGroup.UltraGridGroupTypeConverter">
            <summary>
            UltraGridGroup type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.UltraGridGroupTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroup.UltraGridGroupTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement">
            <summary>
            UIElement that displays the band caption in the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.GroupByBox"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.AccessibilityInstance">
            <summary>
            Returns the accessible object associated with the element.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> Derived elements that plan to return an accessible object must override 
            the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.IsAccessibleElement"/> member.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.GroupByBandlLabelAccessibleObject">
            <summary>
            Accessible object representing a <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement"/> in the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.GroupByBox"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.GroupByBandlLabelAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.GroupByBandlLabelAccessibleObject"/>
            </summary>
            <param name="element">Associated element</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBandLabelUIElement.GroupByBandlLabelAccessibleObject.Name">
            <summary>
            Returns the name of the accessible object.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBox">
            <summary>
            Returns a reference to the GroupByBox object. This property is read-only 
            at design-time and run-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a GroupByBox
            object that can be used to set properties of, and invoke methods on, 
            a GroupBy box. You can use this reference to access any of the GroupBy
            box's properties or methods.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerializePromptAppearance">
            <summary>
            Returns true if PromptAppearance is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResetPromptAppearance">
            <summary>
            Resets the PromptAppearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResolveBandLabelAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Resolves all of the GroupByBox's Band label appearance properties.
            </summary>
            <remarks>
            <p class="body">Use this method to retrieve the actual values that are being used to format the Band labels of the GroupByBox. This method returns a value for all Appearance properties, tracing up the Appearance hierarchy if necessary.</p>
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResolveGroupByButtonAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags,Infragistics.Win.UltraWinGrid.GroupByBox.ButtonDefinition)">
            <summary>
            Resolves selected properties of the button's appearance
            </summary>
            <remarks>
            <p class="body">Use this method to retrieve the actual values that are being used to format the GroupBy buttons of the GroupByBox. This method returns a value for all Appearance properties or only for specified ones, tracing up the Appearance hierarchy if necessary. You can combine the bit flags for this method to specify which properties should be resolved.</p>
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
            <param name="buttonDef"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResolvePromptAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Resolves selected properties of the GroupByBox's prompt appearance.
            </summary>
            <remarks>
            <p class="body">Use this method to retrieve the actual values that are being used to format the prompt of the GroupByBox. This method returns a value for all Appearance properties or only for specified ones, tracing up the Appearance hierarchy if necessary. You can combine the bit flags for this method to specify which properties should be resolved.</p>
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResolveBandLabelAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Resolves selected properties of the BandLabel's appearance
            </summary>
            <remarks>
            <p class="body">Use this method to retrieve the actual values that are being used to format the Band labels of the GroupByBox. This method returns a value for all Appearance properties or only for specified ones, tracing up the Appearance hierarchy if necessary. You can combine the bit flags for this method to specify which properties should be resolved.</p>
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerializeBandLabelAppearance">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResetBandLabelAppearance">
            <summary>
            Resets the BandLabelAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerializeBandLabelBorderStyle">
            <summary>
            Checks to see if BandLabelBorderStyle property needs to be serialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResetBandLabelBorderStyle">
            <summary>
            Resets the BandLabelBorderStyle propetry to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerializeStyle">
            <summary>
            Checks to see if Style property needs to be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResetStyle">
            <summary>
            Resets the Style propetry to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerializeShowBandLabels">
            <summary>
            Checks to see if  ShowBandLabels property needs to be serialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResetShowBandLabels">
            <summary>
            Resets ShowBandLabels property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ShouldSerializeButtonBorderStyle">
            <summary>
            Returns true if the Button Border Style property needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.ResetButtonBorderStyle">
            <summary>
            Resets the Button Border Style to default
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.Infragistics#Win#ISupportPresets#GetPresetProperties(Infragistics.Win.PresetType)">
            <summary>
            Returns a list of properties which can be used in a Preset
            </summary>
            <param name="presetType">Determines which type(s) of properties are returned</param>
            <returns>An array of strings indicating property names</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBox.Infragistics#Win#ISupportPresets#GetPresetTargetTypeName">
            <summary>
            Returns the TypeName of the Preset target
            </summary>
            <returns>Returns "GroupByBox"</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.BandLabelAppearance">
            <summary>
            Returns or sets the Appearance used for Band labels in the GroupByBox.
            </summary>
            <remarks>
            <p class="body">You can assign an <see cref="T:Infragistics.Win.Appearance"/> object to this property to specify the formatting that will be applied to the Band labels that appear in the GroupByBox. You can also use this property to access any Appearance-related properties of the GroupByBox Band labels.</p>
            </remarks>
            <seealso cref="T:Infragistics.Win.Appearance"/>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.HasBandLabelAppearance">
            <summary>
            Returns true if a GroupByBox Band label Appearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.PromptAppearance">
            <summary>
            Returns or sets the Appearance used for the prompt in the GroupByBox.
            </summary>
            <remarks>
            <p class="body">You can assign an <see cref="T:Infragistics.Win.Appearance"/> object to this property to specify the formatting that will be applied to the prompt text that appears in the GroupByBox. You can also use this property to access any Appearance-related properties of the GroupByBox's prompt text, such as font or color.</p>
            </remarks>
            <seealso cref="T:Infragistics.Win.Appearance"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.HasPromptAppearance">
            <summary>
            Returns true if a PromptAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.BandLabelBorderStyle">
            <summary>
            Determines the style of the border for band labels.
            If set to 'Default' will use 'SolidLine'
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.ShowBandLabels">
            <summary>
            Determines whether band labels are shown in the GroupByBox.
            </summary>
            <remarks>
            If set to 'Default' single band views will use 'None'
            and multi-band views will use 'IntermediateBandsOnly'
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.Style">
            <summary>
            Returns or sets a value that determines the GroupBy box's display style.
            </summary>
            <remarks>
            <p class="body">This property specifies the display style of the GroupBy box. When set to 0 (GroupByBoxStyle.Full) the full GroupBy Box will be displayed, with the arrangement of the buttons corresponding to the group by columns and bands. When the 1 (AddNewBoxStyleCompact) setting is used, the GroupBy Box will be displayed using as little real estate as possible while still maintaining a visually acceptable appearance.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBox.ButtonBorderStyle">
            <summary>
            Determines the style of borders around buttons in the GroupByBox.
            </summary>
            <seealso cref="T:Infragistics.Win.UIElementBorderStyle"/>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement">
            <summary>
            	Summary description for GroupByBoxUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.GroupByBox)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="groupByBox">Associated <b>GroupByBox</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the
            element or null.
            </summary>
            <param name="type"></param>
            <param name="checkParentElements"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.GroupByBox">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBox"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.ClipChildren">
            <summary>
            Overridden to return true indicating that the child elements
            are to be clipped. This is baecause group by buttons and band
            labels could be hidden if more buttons are added than can be
            displayed in the group by box
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.AccessibilityInstance">
            <summary>
            Returns the accessible object associated with the element.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> Derived elements that plan to return an accessible object must override 
            the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByBoxUIElement.IsAccessibleElement"/> member.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement">
            <summary>
            Used for showing prompt in the group by box ui element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.#ctor(Infragistics.Win.UltraWinGrid.GroupByBoxUIElement,Infragistics.Win.IUIElementTextProvider)">
            <summary>
            constructor
            </summary>
            <param name="parent"></param>
            <param name="promptProvider"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.GroupByBox">
            <summary>
            <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBox"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.AccessibilityInstance">
            <summary>
            Returns the accessible object associated with the element.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> Derived elements that plan to return an accessible object must override 
            the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.IsAccessibleElement"/> member.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.GroupByPromptAccessibleObject">
            <summary>
            Accessible object representing a <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement"/> in the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.GroupByBox"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.GroupByPromptAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.GroupByPromptAccessibleObject"/>
            </summary>
            <param name="element">Associated element</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByBoxPromptUIElement.GroupByPromptAccessibleObject.Name">
            <summary>
            Returns the name of the accessible object.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement">
            <summary>
            	Summary description for AddNewRowButtonUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the
            element or null.
            </summary>
            <param name="type"></param>
            <param name="recursive"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.OnCaptureAborted">
            <summary>
            Overridden method.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.OnMouseHover">
            <summary>
            overridden method called whenever the mouse hovers on the element
            it displays a tooltip for the AddNewRowButton
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden method. Has logic for column dragging.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse up message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.OnMouseLeave">
            <summary>
            Hide tooltip
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the style of a button.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.WantsMouseHoverNotification">
            <summary>
            Return true if this element wants to be notified when the mouse hovers over it. This property is read-only.
            </summary>
            <remarks>Returns true since group by buttons need MouseHover notifications for showing the tooltips.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.AccessibilityInstance">
            <summary>
            Returns the accessible object associated with the element.
            </summary>
            <remarks>
            <p class="note"><b>Note</b> Derived elements that plan to return an accessible object must override 
            the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.IsAccessibleElement"/> member.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByButtonAccessibleObject">
            <summary>
            Accessible object representing a <see cref="T:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement"/> in the <see cref="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByBox"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByButtonAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.GroupByButtonUIElement)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByButtonAccessibleObject"/>
            </summary>
            <param name="element">Associated element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByButtonAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByButtonAccessibleObject.Name">
            <summary>
            Returns the name of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByButtonUIElement.GroupByButtonAccessibleObject.DefaultAction">
            <summary>
            Gets a string that describes the default action of the object. Not all objects have a default action.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow">
            <summary>
            The GroupByRow object corresponds to a GroupBy Row displayed in the grid.
            </summary>
            <remarks>
            <p class="body">The GroupBy Row appears in a Band of the grid that has been placed in GroupBy mode and has had at least one field specified for grouping data. GroupBy Rows are similar to regular grid Rows except that they do not display data from multiple fields. Instead, they serve to visually separate rows of data according to the grouping to which they belong. A GroupBy Row displays only the data value from the filed or fields being used to group the data.</p>
            <p class="body">For example, if you have a Band that contains address data and you use GroupBy mode to group the data according to the value of the City field, You will see the a GroupBy Row appear for every city that appears in the data; the GroupBy Row displays just the name of each city. Following each GroupBy Row will be all the data records contain the same value for the City field as that displayed in the GroupBy Row.</p>
            <p class="body">GroupBy Rows can be expanded or collapsed to display or hide the rows corresponding to a particular value. The GroupBy Row also contains the user interface elements needed to expand and collapse rows. Programmatically, you can use this object to find out information about the state of the row grouping, such as whether the grouping can be expanded and how many rows are grouped under the GroupBy Row.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridRow">
            <summary>
            Represents a row from the attached data source.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            Returns the UltraGridUIElement object that is associated with an object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body">The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UIElement object residing at specific coordinates.</p>
            <p class="body"><b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            <p class="body">The <b>GetUIElement</b> method does not take into account the presence of a pop-up edit window or the drop-down portion of a combo if these elements are present, and will never return a UIElement that corresponds to one of these elements. The <b>GetUIElementPopup</b> method can be invoked to return a reference to a popup window's UIElement.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasCell(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Indicates if cell for the associated column has been created.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetCellText(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Returns the text for a cell
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetCellValue(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Returns the data value for a cell from the database
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetSibling(Infragistics.Win.UltraWinGrid.SiblingRow)">
            <summary>
            Returns a sibling row (if any exist)
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to the first, last, next, or previous sibling row of a row. If a sibling row does not exist, this method returns Nothing.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">The <b>HasNextSibling</b> and <b>HasPrevSibling</b> methods can be invoked to determine whether a row has a sibling row after it and before it, respectively. </p>
            <p class="body">The <b>GetChild</b> method and <b>HasParent</b> property can be used to return references to a child row and a parent row, respectively.</p>
            </remarks>
            <param name="sibling"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetSibling(Infragistics.Win.UltraWinGrid.SiblingRow,System.Boolean)">
            <summary>
            Returns a sibling row of this row. A sibling row is defined as a row with the same parent row. Note: Band zero rows don't have parent rows but all band zero rows are considered siblings.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to the first, last, next, or previous sibling row of a row. If a sibling row does not exist, this method returns Nothing.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">The <b>HasNextSibling</b> and <b>HasPrevSibling</b> methods can be invoked to determine whether a row has a sibling row after it and before it, respectively. </p>
            <p class="body">The <b>GetChild</b> method and <b>HasParent</b> property can be used to return references to a child row and a parent row, respectively.</p>
            </remarks>
            <param name="sibling">specifies which sibling to return</param>
            <param name="spanBands">ignored for band zero rows</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetSibling(Infragistics.Win.UltraWinGrid.SiblingRow,System.Boolean,System.Boolean)">
            <summary>
            Returns a sibling row of this row. A sibling row is defined as a row with the same parent row. Note: Band zero rows don't have parent rows but all band zero rows are considered siblings.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to the first, last, next, or previous sibling row of a row. If a sibling row does not exist, this method returns Nothing.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">The <b>HasNextSibling</b> and <b>HasPrevSibling</b> methods can be invoked to determine whether a row has a sibling row after it and before it, respectively. </p>
            <p class="body">The <b>GetChild</b> method and <b>HasParent</b> property can be used to return references to a child row and a parent row, respectively.</p>
            </remarks>
            <param name="sibling">specifies which sibling to return</param>
            <param name="spanBands">ignored for band zero rows</param>
            <param name="excludeCardBands">ignored if spanBands is false.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.MeetsCriteria(Infragistics.Win.UltraWinGrid.FilterCondition)">
            <summary>
            Returns true if the row meets the criteria specified by the passed in filter condition.
            </summary>
            <param name="filterCondition">An instance of <see cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/> containing information on the criteria.</param>
            <returns></returns>
            <remarks>
            <p class="body">Returns true if the row meets the criteria specified by the passed in filter condition.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.MeetsCriteria(Infragistics.Win.UltraWinGrid.FilterCondition[],Infragistics.Win.UltraWinGrid.FilterLogicalOperator)">
            <summary>
            Returns true if the row meets the criteria specified by the passed in filter conditions and the logical operator. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.And"/> and the row meets all the conditions in the filterConditions array then this method returns true. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.Or"/> and the row meets at least one filter condition then this method returns true. Otherwise it returns false.
            </summary>
            <param name="filterConditions">Filter conditions.</param>
            <param name="logicalOperator">Logical operator to combine filter conditions in the filter conditions array.</param>
            <returns></returns>
            <remarks>
            <p class="body">Returns true if the row meets the criteria specified by the passed in filter conditions and the logical operator. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.And"/> and the row meets all the conditions in the filterConditions array then this method returns true. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.Or"/> and the row meets at least one filter condition then this method returns true. Otherwise it returns false.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterCondition"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterLogicalOperator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.MeetsCriteria(Infragistics.Win.UltraWinGrid.ColumnFilter)">
            <summary>
            Returns true if the row meets the criteria specified by the passed in column filter which contains the collection of filter conditions.
            </summary>
            <param name="columnFilter">An instance of <see cref="T:Infragistics.Win.UltraWinGrid.ColumnFilter"/> containing information on the criteria.</param>
            <returns></returns>
            <remarks>
            <p class="body">Returns true if the row meets the criteria specified by the passed in column filter.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnFilter"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.ColumnFilter.FilterConditions"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.MeetsCriteria(Infragistics.Win.UltraWinGrid.ColumnFilter[],Infragistics.Win.UltraWinGrid.FilterLogicalOperator)">
            <summary>
            Returns true if the row meets the criteria specified by the passed in column fitlers and the logical operator. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.And"/> and the row meets all the conditions in the column filters array then this method returns true. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.Or"/> and the row meets at least one of the column filter then this method returns true. Otherwise it returns false.
            </summary>
            <param name="columnFilters">Filter conditions.</param>
            <param name="logicalOperator">Logical operator to combine column filters in the column fitlers array.</param>
            <returns></returns>
            <remarks>
            <p class="body">Returns true if the row meets the criteria specified by the passed in column fitlers and the logical operator. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.And"/> and the row meets all the conditions in the column filters array then this method returns true. If the logical operator is <see cref="F:Infragistics.Win.UltraWinGrid.FilterLogicalOperator.Or"/> and the row meets at least one of the column filter then this method returns true. Otherwise it returns false.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnFilter"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.FilterLogicalOperator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll">
            <summary>
            Collapses every row in the band and discards all of the expand/collapse information for the child rows.
            </summary>
            <remarks>
            <p class="body">The <b>CollapseAll</b> method collapses the child rows of a band and discards any information about which children were themselves expanded.</p> 
            <p class="body">When you invoke the <b>CollapseAll</b> method, the control fires the <b>BeforeRowCollapsed</b> event for every row in the band. In that event, you have the opportunity to cancel the collapse of any row. For all rows except those for which the event was cancelled, the control then collapses the row and any of its children. If those children have children, they are also collapsed, and so on down to the bottom level of the hierarchy. Any context information that was previously accumulated as the result of the user expanding and collapsing child rows is discarded.</p>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.ExpandAll(System.Boolean)"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.CollapseAll(System.Boolean)"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAll">
            <summary>
            Expands all rows (and bands, if applicable) in the object. Ignores the existing expanded/collapsed state of any rows or bands.
            </summary>
            <remarks>
            <p class="body">The <b>ExpandAll</b> method expands all the child rows of a band. If those rows have any children, they are also expanded, and so on until the bottom level of the hierarchy is reached.</p> 
            <p class="body">When you invoke the <b>ExpandAll</b> method, the control fires the <b>BeforeRowExpanded</b> event for every row in the band. In that event, you have the opportunity to cancel the expansion of any row. For all rows except those for which the event was cancelled, the control then expands the row and any of its children. If those children have children, they are also expanded, and so on down to the bottom level of the hierarchy.  Any context information that was previously accumulated as the result of the user expanding and collapsing child rows is discarded.</p>
            <p class="body">The <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Expanded"/> property can be used to expand or collapse a row without expanding its descendants.</p>
            <p class="body">The <see cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.ExpandAll(System.Boolean)"/> method which takes in a <b>recursive</b> paramater can be used to expand only the immediate children of the rows collecition or all the descendants depending on the value of the recursive paramter.</p>
            <p class="body">The <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll"/> method can be invoked to collapse all descendent rows.</p>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.ExpandAll(System.Boolean)"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.CollapseAll(System.Boolean)"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetChild(Infragistics.Win.UltraWinGrid.ChildRow)">
            <summary>
            Returns a reference to the first or last child row of a row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to either the first or last child row of a parent row. If a child row does not exist, this method returns Nothing.</p>
            <p class="body">The <i>band</i> argument can be used to specify a child rowset in which a child row should be sought. If <i>band</i> is not specified, this method attempts to find a child row in all child rowsets.</p>
            <p class="body">The <b>GetChild</b> method can be invoked to determine whether a row has a child row. </p>
            <p class="body">The <b>HasParent</b> property and <b>GetSibling</b> method can be used to return references to a parent row and a sibling row, respectively.</p>
            </remarks>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetChild(Infragistics.Win.UltraWinGrid.ChildRow,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Returns a reference to the first or last child row of a row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to either the first or last child row of a parent row. If a child row does not exist, this method returns Nothing.</p>
            <p class="body">The <i>band</i> argument can be used to specify a child rowset in which a child row should be sought. If <i>band</i> is not specified, this method attempts to find a child row in all child rowsets.</p>
            <p class="body">The <b>HasChild</b> method can be invoked to determine whether a row has a child row. </p>
            <p class="body">The <b>HasParent</b> and <b>GetSibling</b> methods can be invoked to return references to a parent row and a sibling row, respectively.</p>
            </remarks>
            <param name="child"></param>
            <param name="band"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasChild">
            <summary>
            Returns a Boolean expression indicating whether a row has a child row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has at least one child row. If a child row exists, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>band</i> argument can be used to specify a child band in which a child row should be sought. If <i>band</i> is not specified, this method attempts to find a child row in all child bands.</p>
            <p class="body">A reference to the first or last child row can be returned by invoking the <b>GetChild</b> method.</p>
            <p class="body">The <b>HasParent</b>, <b>HasNextSibling</b>, and <b>HasPrevSibling</b> methods can be invoked to determine if a row has a parent row, sibling row above it, and sibling row below it, respectively.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasChild(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Returns a Boolean expression indicating whether a row has a child row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has at least one child row. If a child row exists, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>band</i> argument can be used to specify a child band in which a child row should be sought. If <i>band</i> is not specified, this method attempts to find a child row in all child bands.</p>
            <p class="body">A reference to the first or last child row can be returned by invoking the <b>GetChild</b> method.</p>
            <p class="body">The <b>HasParent</b>, <b>HasNextSibling</b>, and <b>HasPrevSibling</b> methods can be invoked to determine if a row has a parent row, sibling row above it, and sibling row below it, respectively.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasChild(System.Boolean)">
            <summary>
            Returns a Boolean expression indicating whether a row has a child row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has at least one child row. If a child row exists, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>band</i> argument can be used to specify a child band in which a child row should be sought. If <i>band</i> is not specified, this method attempts to find a child row in all child bands.</p>
            <p class="body">A reference to the first or last child row can be returned by invoking the <b>GetChild</b> method.</p>
            <p class="body">The <b>HasParent</b>, <b>HasNextSibling</b>, and <b>HasPrevSibling</b> methods can be invoked to determine if a row has a parent row, sibling row above it, and sibling row below it, respectively.</p>
            </remarks>
            <param name="excludeHidden">If true only look for visible rows.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasChild(Infragistics.Win.UltraWinGrid.UltraGridBand,System.Boolean)">
            <summary>
            Returns a Boolean expression indicating whether a row has a child row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has at least one child row. If a child row exists, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>band</i> argument can be used to specify a child band in which a child row should be sought. If <i>band</i> is not specified, this method attempts to find a child row in all child bands.</p>
            <p class="body">A reference to the first or last child row can be returned by invoking the <b>GetChild</b> method.</p>
            <p class="body">The <b>HasParent</b>, <b>HasNextSibling</b>, and <b>HasPrevSibling</b> methods can be invoked to determine if a row has a parent row, sibling row above it, and sibling row below it, respectively.</p>
            </remarks>
            <param name="band">If null will check all bands.</param>
            <param name="excludeHidden">If true only look for visible rows.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasParent">
            <summary>
            Returns true if the row has a parent row. If the ParentRow is null then returns false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasParent(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Returns a Boolean expression indicating whether a row has a parent row.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a parent row. If a parent row exists, this method returns True; otherwise, this method returns False. If you specify an UltraGridBand for the <i>band</i> parameter, the control will determine whether the row has an ancestor row in that band.</p>
            <p class="body">If a parent row exists, a reference to it can be returned by invoking the <b>HasParent</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasNextSibling</b>, and <b>HasPrevSibling</b>  methods can be invoked to determine whether a row has a child row, sibling row above it, and sibling row below it, respectively.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasNextSibling">
            <summary>
            Returns a Boolean expression indicating whether a row has a sibling row below it.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a sibling row below it. If a sibling row exists below the row, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">A reference to sibling row can be returned by invoking the <b>GetSibling</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasParent</b>, and <b>HasPrevSibling</b>  methods can be invoked to determine whether a row has a child row, a parent row, and sibling row below it, respectively.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasNextSibling(System.Boolean)">
            <summary>
            Returns a Boolean expression indicating whether a row has a sibling row below it.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a sibling row below it. If a sibling row exists below the row, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">A reference to sibling row can be returned by invoking the <b>GetSibling</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasParent</b>, and <b>HasPrevSibling</b>  methods can be invoked to determine whether a row has a child row, a parent row, and sibling row below it, respectively.</p>
            </remarks>]
            <param name="spanBands">If true will look for rows in following sibling bands.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasNextSibling(System.Boolean,System.Boolean)">
            <summary>
            Returns a Boolean expression indicating whether a row has a sibling row below it.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a sibling row below it. If a sibling row exists below the row, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">A reference to sibling row can be returned by invoking the <b>GetSibling</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasParent</b>, and <b>HasPrevSibling</b>  methods can be invoked to determine whether a row has a child row, a parent row, and sibling row below it, respectively.</p>
            </remarks>]
            <param name="spanBands">If true will look for rows in following sibling bands.</param>
            <param name="excludeHidden">If true will not consider rows that are hidden.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasPrevSibling">
            <summary>
            Returns a Boolean expression indicating whether a row has a sibling row above it.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a sibling row above it. If a sibling row exists above the row, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">A reference to a sibling row can be returned by invoking the <b>GetSibling</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasNextSibling</b>, and <b>HasParent</b>  methods can be invoked to determine whether a row has a child row, a sibling row after it, and a parent row, respectively.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasPrevSibling(System.Boolean)">
            <summary>
            Returns a Boolean expression indicating whether a row has a sibling row above it.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a sibling row above it. If a sibling row exists above the row, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">A reference to a sibling row can be returned by invoking the <b>GetSibling</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasNextSibling</b>, and <b>HasParent</b>  methods can be invoked to determine whether a row has a child row, a sibling row after it, and a parent row, respectively.</p>
            </remarks>
            <param name="spanBands"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasPrevSibling(System.Boolean,System.Boolean)">
            <summary>
            Returns a Boolean expression indicating whether a row has a sibling row above it.
            </summary>
            <remarks>
            <p class="body">Invoke this method to determine whether a row has a sibling row above it. If a sibling row exists above the row, this method returns True; otherwise, this method returns False.</p>
            <p class="body">The <i>spanbands</i> argument can be used to indicate whether rows in other bands are considered siblings.</p>
            <p class="body">A reference to a sibling row can be returned by invoking the <b>GetSibling</b> method.</p>
            <p class="body">The <b>HasChild</b>, <b>HasNextSibling</b>, and <b>HasParent</b>  methods can be invoked to determine whether a row has a child row, a sibling row after it, and a parent row, respectively.</p>
            </remarks>
            <param name="spanBands">True will look for rows in previous sibling bands.</param>
            <param name="excludeHidden">If true will not consider rows that are hidden.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Refresh">
            <summary>
             Refresh the display and/or refetch the data with or without events.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Refresh(Infragistics.Win.UltraWinGrid.RefreshRow)">
            <summary>
             Refresh the display and/or refetch the data with or without events.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Refresh(Infragistics.Win.UltraWinGrid.RefreshRow,System.Boolean)">
            <summary>
             Refresh the display and/or refetch the data with or without events.
            </summary>
            <remarks>
            <p class="body">Generally, painting a control is handled automatically while no events are occurring. However, there may be situations where you want the form or control updated immediately, for example, after some external event has caused a change to the form. In such a case, you would use the <b>Refresh</b> method.</p>
            <p class="body">The <b>Refresh</b> method can also be used to ensure that the user is viewing the latest copy of the data from the record source.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RefreshSortPosition">
            <summary>
            If the row is not at correct sort position, this method will
            reposition the row in the rows collection based on the current
            sort criteria. Also if it's in the wrong group, it will put it
            under appropriate group by row.
            </summary>
            <remarks>
            This method can be useful in situations where a new row is added
            to the rows collection (which by default is appended at the end 
            of the collection) and you want to ensure the row is positioned
            at the right position in the collection based on the sort criteria
            without having to resort the whole collection. This method should
            not be used if the sort criteria itself changes which effects the
            whole rows collection.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Update">
            <summary>
             Updates the data source with any modified information from the grid.
            </summary>
            <remarks>
            <p class="body">The <b>Update</b> method updates any modified information in the grid, sending it to the data provider. When the update is complete, any rows that were marked as having modified data will have that mark cleared. The <b>DataChanged</b> property will be set to False.</p>
            <p class="body">Normally, the grid handles the updating of data automatically, so there will be few situations in which you will need to invoke this method. The major exception is when you have set the <b>UpdateMode</b> property to 2 (UpdateOnUpdate). When using that setting, the grid will not send any data to the data provider until you invoke the <b>Update</b> method. You must use the method to manually update the data provider whenever data has been changed and you are ready to commit the changes.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CancelUpdate">
            <summary>
            Cancels the update of the row or cell when data has been changed (similar to pressing ESC).
            </summary>
            <remarks>
            <p class="body">When the <b>CancelUpdate</b> method is invoked for a row, any changes made to the cells of the active row are removed. The cells display their original values, and the row is taken out of edit mode. The row selector picture changes from the "Write" image <img src="row selector write.gif" width="21" height="19" align="baseline" border="0"></img> back to the "Current" image <img src="row selector current.gif" width="21" height="19" align="baseline" border="0"></img>. The <b>DataChanged</b> property will be set to false.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Delete">
            <summary>
            Deletes the row.
            </summary>
            <remarks>
            <p class="body">When a row is deleted, the <b>BeforeRowsDeleted</b> event is generated. Afterwards, the row is removed from the control and its corresponding record is deleted from the data source. If the record cannot be removed from the data source, the <b>Error</b> event is generated.</p>
            <p class="body">The <b>DeleteSelectedRows</b> method of the control can be invoked to delete all selected rows.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Delete(System.Boolean)">
            <summary>
            Deletes the row.
            </summary>
            <param name="displayPrompt">Specifies whether to display the delete confirmation prompt.</param>
            <returns></returns>
            <remarks>
            <p class="body">When a row is deleted, the <b>BeforeRowsDeleted</b> event is generated. Afterwards, the row is removed from the control and its corresponding record is deleted from the data source. If the record cannot be removed from the data source, the <b>Error</b> event is generated.</p>
            <p class="body">The <b>DeleteSelectedRows</b> method of the control can be invoked to delete all selected rows.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveRowSelectorAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Resolves all of the appearance properties for the row selector
            </summary>
            <param name="appData">The structure to contain the resolved appearance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveRowSelectorAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Resolves selected properties of row selector's appearance
            </summary>
            <param name="appData">The structure to contain the resolved appearance.</param>
            <param name="requestedProps">Bit flags indicating which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveAppearance(Infragistics.Win.AppearanceData@)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the row.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as UltraWinGrid.Appearance</p>
            <p class="code">Set objAppearance = UltraWinGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p>  
            </remarks>
            <param name="appData">The structure to contain the resolved appearance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the row.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as UltraWinGrid.Appearance</p>
            <p class="code">Set objAppearance = UltraWinGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p>  
            </remarks>
            <param name="appData">The structure to contain the resolved appearance.</param>
            <param name="requestedProps">Bit flags indicating which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags,System.Boolean)">
            <summary>
            Returns an Appearance object with its properties set to the actual values that will be used to display the row.
            </summary>
            <remarks>
            <p class="body">Examining the value of an Appearance object property that has not been set will return the "use default" value, not the internal value that is actually being used to display the object affected by the Appearance object. In order to find out what values are being used, you must use the <b>ResolveAppearance</b> method. This method will evaluate the property values of an Appearance object and return an Appearance object with all of its properties set to meaningful values that can be used to determine how the object will look.</p>
            <p class="body">When you change the properties of an Appearance object, you are not required to specify a value for every property that object supports. Whether the Appearance object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an appearance hierarchy. In the appearance hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default", such as AlignDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by color-related properties.</p>
            <p class="body">So for example, if the Appearance object of a cell has its <b>BackColor</b> property set to -1, the control will use the setting of the row's <b>BackColor</b> property for the cell, because the row is above the cell in the appearance hierarchy. The top level of the appearance hierarchy is the UltraGrid control itself. If any of the UltraWinGrid's Appearance object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. For example, the factory preset of the <b>BackColor</b> property of the grid's Appearance object is the system button face color (0x8000000F). This is the value that will be used for the grid's background color when the <b>BackColor</b> property of the grid's Appearance object is set to the "use default" value.</p>
            <p class="body">The <b>ResolveAppearance</b> method will return an Appearance object with all of its "use default" settings converted into actual values. It does this by navigating the appearance hierarchy for each property until an explicit setting or a factory preset is encountered. If you simply place a grid on a form, run the project, and examine the setting of the <b>BackColor</b> property of the grid's intrinsic Appearance object:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.Appearance.BackColor)</p>
            <p class="body">...you will see that it is set to the "use default" value (0xFFFFFFFF). However, if you use the <b>ResolveAppearance</b> method to return the same value:</p>
            <p class="code">MsgBox Hex(UltraWinGrid1.ResolveAppearance.BackColor)</p>
            <p class="body">...you will see that it is set to the system button face color (0x8000000F). Note that this code takes advantage of the fact that the <b>ResolveAppearance</b> method returns an Appearance object to simplify the code that must be written. This code could be written out in a longer form as follows:</p>
            <p class="code">Dim objAppearance as UltraWinGrid.Appearance</p>
            <p class="code">Set objAppearance = UltraWinGrid1.ResolveAppearance</p>
            <p class="code">MsgBox Hex(objAppearance.BackColor)</p>  
            </remarks>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indicating which properties to resolve.</param>
            <param name="previewArea">True to resolve the row preview area appearance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveCellAppearance(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.AppearanceData@)">
            <summary>
            Resolves all of a cell's appearance properties
            </summary>
            <param name="column">The associated column.</param>
            <param name="appData">The structure to contain the resolved appearance.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveCellAppearance(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Resolves selected properties of a cell's appearance
            </summary>
            <param name="column">The associated column.</param>
            <param name="appData">The structure to contain the resolved appearance.</param>
            <param name="requestedProps">Bit flags indicating which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveMergedCellAppearance(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves appearance for the merged cell associated with this cell.
            </summary>
            <param name="column"></param>
            <param name="appData"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ResolveMergedCellAppearance(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@,System.Boolean)">
            <summary>
            Resolves appearance for the merged cell associated with this cell.
            </summary>
            <param name="column"></param>
            <param name="appData"></param>
            <param name="requestedProps"></param>
            <param name="forceSelected"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.OnColumnsChanged">
            <summary>
            Called when columns are added or removed from the band's column
            collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.PerformAutoSize">
            <summary>
            Resizes the row based on its contents.
            </summary>
            <remarks>
            <p class="body">Resizes the row based on its contents. This method does nothing when the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSizing"/> resolves to Synchronized which it does by default. Set it to a value other than <b>Synchronized</b> to have this method perform as expected. Also this method is not supported when using Row-Layout functionality due to the nature of the functionality.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAncestors">
            <summary>
            Ensures that all ancestor rows are expanded.
            </summary>
            <returns>true if all ancestors have been expanded</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetCellActivationResolved(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Returns the resolved activation of the cell associated with this row and the column.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Activate">
            <summary>
            Activates row. Returns true if the operation was cancelled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Infragistics#Win#IUIElementProvider#GetBorderStyle(Infragistics.Win.UIElement)">
            <summary>
            This is used by the DependentTextUIElement class to get necessary information for rendering text
            </summary>	
            These functions will not be used, so they are just for sake of providing
            implementation for the interface
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.Infragistics#Win#IUIElementTextProvider#HotkeyPrefix(Infragistics.Win.DependentTextUIElement)">
            <summary>
            Indicates whether the element renders mnemonics in the text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.OnDispose">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Band">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/> that the object belongs to, if any. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Band</b> property of an object refers to a specific band in the grid as defined by an UltraGridBand object. You use the <b>Band</b> property to access the properties of a specified UltraGridBand object, or to return a reference to the UltraGridBand object that is associated with the current object.</p>
            <p class="body">UltraGridBand objects are the foundation of the hierarchical data structure used by UltraWinGrid. Any row or cell in the grid must be accessed through its UltraGridBand object. Bands are also used to apply consistent formatting and behavior to the rows that they comprise. An UltraGridBand object is used to display all the data rows from a single level of a data hierarchy. UltraGridBand objects contain multiple sets of child UltraGridRow objects that actually display the data of the recordset. All of the rows that are drawn from a single Command in the DataEnvironment make up a band.</p>
            <p class="body">The rows of a band are generally displayed in groups of one more in order to show rows from subsequent bands that are linked to rows in the current band via the structure of the data hierarchy. For example, if a hierarchical recordset has Commands that display Customer, Order and Order Detail data, each one of these Commands maps to its own UltraGridBand in the UltraWinGrid. The rows in the Customer band will appear separated by any Order data rows that exist for the customers. By the same token, rows in the Order band will be appear separated to make room for Order Detail rows. How this looks depends on the ViewStyle settings selected for the grid, but the concept of visual separation is readily apparent when the UltraWinGrid is used with any hierarchical recordset.</p>
            <p class="body">Although the rows in a band may appear to be separated, they are treated contiguously. When selecting a column in a band, you will see that the cells of that column become selected in all rows for the band, regardless of any intervening rows. Also, it is possible to collapse the hierarchical display so that any children of the rows in the current band are hidden.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsStillValid">
            <summary>
            True only if this row and all of its ancestor rows are still valid (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsCard">
            <summary>
            Returns whether this row is being displayed in Card View mode. This property is read-only.
            </summary>
            <remarks>
            <p class="body">If the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/> object containing this mode has its <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardView"/> property set to True, then the band is in Card View mode and this property will return True.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsCardCompressed">
            <summary>
            Indicates whether the card is compressed or expanded.
            </summary>
            <remarks>
            <p>This property only applies when the band is in card view (IsCard property returns true for this row) and the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> is set to <see cref="F:Infragistics.Win.UltraWinGrid.CardStyle.Compressed"/>. When these conditions are not met, returned value is undefined.</p>
            <p>Also this does not apply to group by rows and for group by rows returned value will be undefined.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.FindActualAncestorRow">
            <summary>
            gets the parent row if the parent row is not a group by row. 
            traverses up the ancestor chain until it encounters an actual
            row ( row that is not a group by row ) and returns that.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ListObject">
            <summary>
            Returns the object corresponding to this row from the IList that the control is bound to. Returns Null if this is an UltraGridGroupByRow.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ListIndex">
            <summary>
            Returns the index corresponding to this row from the IList that the control is bound to. Return value of -1 indicates that a row has been deleted or doesn't exist anymore.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Index">
            <summary>
            The index of this row in its parent collection
            </summary>
            <remarks>
            <p class="body">The <b>Index</b> property is set by default to the order of the creation of objects in a collection. The index for the first object in a collection will always be zero.</p>
            <p class="body">The value of the <b>Index</b> property of an object can change when objects in the collection are reordered, such as when objects are added to or deleted from the collection. Since the <b>Index</b> property may change dynamically, it may be more useful to refer to objects in a collection by using its <b>Key</b> property.</p>
            <p class="body">Not all objects in a collection support an <b>Index</b> property. For certain objects, the <b>Index</b> value is essentially meaningless except as an internal placeholder within the collection. In these cases, the object will not have an <b>Index</b> property, even though it is in a collection. You can use other mechanisms, such as the <b>Key</b> property or the <code class="code">For Each...</code> loop structure, to access the objects in the collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.VisibleIndex">
            <summary>
            Returns the index of this row in its parent collection, relative to all other visible rows. Hidden rows are not counted.
            </summary>
            <remarks>
            This property will return -1 if the UltraGridRow's <b>Hidden</b> property is set.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.AllAncestorsExpanded">
            <summary>
            Returns True if this row's parent row and all its ancestors are expanded. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.InInitializeRowEvent">
            <summary>
            This property returns True if the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeRow"/> event is in process for the current row. It will return False outside of InitializeRow.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ChildBands">
            <summary>
            The read-only collection of UltraGridChildBand objects that contain the child rows for this row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Cells">
            <summary>
            Returns a reference to a collection of UltraGridCell objects.  This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a collection of UltraGridCell objects that can be used to retrieve references to the UltraGridCell objects that belong to a row. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">For the UltraGridRow object, the returned collection provides a way to work with the cells that constitute the row.</p>
            <p class="body">The <b>Count</b> property of the returned collection can be used to determine the number of cells that belong to a row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsDeleted">
            <summary>
            Returns True if the row has been deleted but the UltraGridRow object has not yet been destroyed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ParentCollection">
            <summary>
            Returns the rows collection this row belongs to
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ParentRow">
            <summary>
            Returns this row's parent row which could be an UltraGridRow instance
            or an UltraGridGroupByRow instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowSpacingBefore">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered before a row.
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSpacingBefore</b> property to specify the space that precedes a row in the band or the grid. Space between rows allows the background area of the grid to show through, and can be useful when you have specified a picture or a texture for the background. To control the space that follows a row, use the <b>RowSpacingAfter</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowSpacingAfter">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered before a row.
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSpacingAfter</b> property to specify the space that follows a row in the band or the grid. Space between rows allows the background area of the grid to show through, and can be useful when you have specified a picture or a texture for the background. To control the space that precedes a row, use the <b>RowSpacingBefore</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowSpacingBeforeResolved">
            <summary>
            Returns the actual value used for RowSpacingBefore for this row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowSpacingAfterResolved">
            <summary>
            Returns the actual value used for RowSpacingAfter for this row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Height">
            <summary>
            Returns or sets the height of the row (excluding spacing).
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band. Also, changing the <b>Hidden</b> property of an object affects all instances of that object. For example, a hidden column or row is hidden in all scrolling regions.</p>
            <p class="body">The bahavior of <b>Hidden</b> property with Row Filtering functionality has changed in UltaGrid Version 3.0. In previous version the <b>Hidden</b> property of a row returned false if the row was filtered out where as in Version 3.x the <b>Hidden</b> property will return the value it was set to regardless of whether the row is filtered out or not. Instead in Version 3.x <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsFilteredOut"/> property is added that indicates whether the row is filtered out or not. <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HiddenResolved"/> behaves the same and takes into account whether the row is filtered out or not. Note though this only applies when the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterAction"/> is set to <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.HideFilteredOutRows"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsFilteredOut">
            <summary>
            Indicates whether the row is filtered out or not. A filtered out row is a row that does not pass the filter criteria. Filter criteria can be sepcified by <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/> or <see cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> property depending on the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> setting.
            </summary>
            <remarks>
            <p class="body">Indicates whether the row is filtered out or not. A filtered out row is a row that does not pass the filter criteria. Filter criteria can be sepcified by <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/> or <see cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> property depending on the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> setting.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowFiltering"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HiddenResolved">
            <summary>
            Returns true if the hidden property for this row is set to
            true or any of this row's ancestor rows have their hidden
            property set to true.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsAlternate">
            <summary>
            Returns whether the current row is an alternate row. Alternate rows can have their own appearance settings.
            </summary>
            <remarks>
            <p class="body">You can use the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowAppearance"/> and <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowAlternateAppearance"/> properties to provide different appearance settings for odd and even rows in the grid. The <b>IsAlternate</b> property indicates which appearance the row will use. (Note that if no alternate appearance is specified, all rows will use the standard appearance and there will be no visible difference between alternate  and non-alternate rows.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Activation">
            <summary>  
            Returns or sets a value that determines how an object will behave when it is  activated.
            </summary>  
            <remarks>
            <p class="body">The <b>Activation</b> property of the UltraGridCell object is subordinate to the settings of the Activation properties of the UltraGridRow and UltraGridColumn objects that contain the cell. If either the cell's row or column has its <b>Activation</b> property set to False, the cell cannot be activated, regardless of its own setting for <b>Activation</b>. The setting of the other type of parent also has no effect; setting <b>Activation</b> to False on a cell's row makes the cell inactive regardless of the setting of its column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Appearance">
            <summary>  
            Returns or sets the Appearance object that controls the object's formatting.
            </summary>  
            <remarks>
            <p class="body">The <b>Appearance</b> property of an object is used to associate the object with an Appearance object that will determine its appearance. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For many of the objects in the UltraWinGrid, you do not set formatting properties directly. Instead, you set the properties of an Appearance object, which controls the formatting of the object it is attached to.</p>
            <p class="body">There are two ways of working with the <b>Appearance</b> property and assigning the attributes of an Appearance object to other objects. One way is to create a new Appearance object, adding it directly to the Appearances collection. Then you assign the new Appearance object  to the <b>Appearance</b> property of the object you want to format. This method uses a "named" Appearance object that you must explicitly create (and to which you must assign property settings) before it can be used. For instance, you could create an object in the grid's Appearances collection and assign it some values as follows:</p>
            <p class="code">UltraWinGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.Appearances("New1").BorderColor = System.Drawing.Color.Blue</p>
            <p class="code">UltraWinGrid1.Appearances("New1").ForeColor = System.Drawing.Color.Red</p>
            <p class="body">Creating the object in this way does not apply formatting to any visible part of the grid. The object simply exists in the collection with its property values, waiting to be used. To actually use the object, you must assign it to the grid's (or another object's) <b>Appearance</b> property:</p>
            <p class="code">UltraWinGrid1.Appearance = UltraWinGrid1.Appearances("New1")</p>
            <p class="body">In this case, only one Appearance object exists. The grid's appearance is governed by the settings of the "New1" object in the collection. Any changes you make to the object in the collection will immediately be reflected in the grid.</p>
            <p class="body">The second way of working with the <b>Appearance</b> property is to use it to set property values directly, such as:</p>
            <p class="code">UltraWinGrid1.Appearance.ForeColor = System.Drawing.Color.Blue</p>
            <p class="body">In this case, an Appearance object is automatically created by the control. This Appearance object is not a member of an Appearances collection and it does not have a name. It is specific to the object for which it was created; it is an "intrinsic" Appearance object. Changes to the properties of an intrinsic Appearance object are reflected only in the object to which it is attached.</p>
            <p class="body">Note that you can assign properties from a named Appearance object to an intrinsic Appearance object without creating a dependency relationship. For example, the following code...</p>
            <p class="code">UltraWinGrid1.Appearance.ForeColor = UltraWinGrid1.Appearances("New1").ForeColor</p>
            <p class="body">...does <i>not</i> establish a relationship between the foreground color of the intrinsic object and that of the named object. It is simply a one-time assignment of the named object's value to that of the intrinsic object. In this case, two Appearance objects exist - one in the collection and one attached to the grid - and they operate independently of one another.</p>
            <p class="body">If you wish to assign all the properties of a named object to an intrinsic object at once without creating a dependency relationship, you can use the <b>Clone</b> method of the Appearance object to duplicate its settings and apply them. So if you wanted to apply all the property settings of the named Appearance object "New1" to the grid's intrinsic Appearance object, but you did not want changes made to "New1" automatically reflected in the grid, you would use the following code:</p>
            <p class="code">UltraWinGrid1.Appearance = UltraWinGrid1.Appearances("New1").Clone</p>
            <p class="body">Note that the properties of an Appearance object can also operate in a hierarchical fashion. Certain properties can be set to a "use default" value, which indicates to the control that the property should take its setting from the object's parent. This functionality is enabled by default, so that unless you specify otherwise, child objects resemble their parents, and formatting set at higher levels of the grid hierarchy is inherited by objects lower in the hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HasAppearance">
            <summary>
            True if an appearance object has been allocated
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.CellAppearance">
            <summary>  
            Determines the formatting attributes that will be applied to the cells in a row.
            </summary>  
            <remarks>
            <p class="body">The <b>CellAppearance</b> property is used to specify the appearance of all the cells in a row. When you assign an Appearance object to the <b>CellAppearance</b> property, the properties of that object will be applied to all the cells belonging to the row. You can use the <b>CellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the cells, for example:</p> 
            <p class="code">UltraWinGrid1.Override.CellAppearance.BackColor = vbYellow</p>
            <p class="body">You can override the <b>CellAppearance</b> setting for specific cells by setting the <b>Appearance</b> property of the UltraGridCell object directly. The cell will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>CellAppearance</b> property of the row or band it occupies.</p>
            <p class="body">If any of the properties of the Appearance object specified for the <b>CellAppearance</b> property are set to default values, the properties from the Appearance object of the row containing the cell are used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HasCellAppearance">
            <summary>
            True if a cell appearance object has been allocated
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.AutoPreviewHidden">
            <summary>  
            Determines if the <B>Description</B> will be displayed in the AutoPreview area for this row. This property is not available at design-time.
            </summary>  
            <remarks>
            <p class="body">The auto preview area of a row is a blank area that appears at the bottom of a row across the row's entire width. This area can be used to display the text of the row's description, as determined by the <b>Description</b> property of the UltraGridRow object.</p>
            <p class="body">The <b>AutoPreviewEnabled</b> property determines whether the AutoPreview area can be displayed for rows in the specified band. Once AutoPreview has been enabled, it can be displayed for any row by setting the UltraGridRow object's <b>AutoPreviewHidden</b> property to False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.DataChanged">
            <summary>  
            Returns a value that determines whether the data in a cell or row has been changed, but not committed to the data source. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns True when a cell or row's data has changed, but has not yet been committed to the data source; otherwise, it returns False.</p>
            <p class="body">When the value of a cell is changed, either programmatically by setting ;its <b>Value</b> property, or by user interaction, this property is set to True and the <b>BeforeCellUpdate</b> and <b>AfterCellUpdate</b> events are generated. Note that the cell's new value is not necessarily committed to the data source at this time, however, since various factors such as the type of record locking employed by the data source, as well as the value of the <b>UpdateMode</b> property, can affect when the actual update occurs. Once the data source is actually updated, the <b>BeforeRowUpdate</b> and <b>AfterRowUpdate</b> events are generated and this property is set back to False.</p>
            <p class="body">The <b>OriginalValue</b> property of the cell can be used to determine a cell's value before it was changed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.CardCaption">
            <summary>  
            Returns or sets the text that will be displayed as the card's caption.
            </summary>
            <remarks>
            <p class="body">When the band containing the Row is in Card View mode, the <b>CardCaption</b> property specifies the text that will be displayed in the caption area of the card that contains the row's data. This property will be read-only if the <b>CaptionField</b> property has been set to a valid field or column name in the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardSettings"/> object of the band that contains the row.</p>
            <p class="body">Typically, you would set the value of the <b>CardCaption</b> property in the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeRow"/> event.</p>		
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Description">
            <summary>  
            Returns or sets the text that will be displayed as a description.
            </summary>
            <remarks>
            <p class="body">The <b>Description</b> property determines the text that will be displayed in the AutoPreview area for a row. This property will be read-only if its band's <b>AutoPreviewField</b> property is set to a valid field or column name.</p>
            <p>
            The following sample code enables the row previews in the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeLayout"/> event and sets descriptions of rows in <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeRow"/> event.
            </p>
            <p></p>
            <p>C#:</p>
            <p></p>
            <pre>
            private void ultraGrid1_InitializeLayout(object sender, Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs e)
            {
            	// Enable the row previews.
            	//
            	this.ultraGrid1.DisplayLayout.Bands[0].AutoPreviewEnabled = true;
            }
            
            private void ultraGrid1_InitializeRow(object sender, Infragistics.Win.UltraWinGrid.InitializeRowEventArgs e)
            {
            	Infragistics.Win.UltraWinGrid.UltraGridBand band;
            	band = this.ultraGrid1.DisplayLayout.Bands[0];
            
            	// Check for the row being from the same band.
            	//
            	if ( e.Row.Band == band )
            	{
            		// Create a custom description that we want shown in the row's
            		// row preview area.
            		//
            		System.Text.StringBuilder description = new System.Text.StringBuilder( );
            
            		description.Append( e.Row.GetCellText( band.Columns["ContactName"] ) );
            		description.Append( "\n" );
            		description.Append( e.Row.GetCellText( band.Columns["City"] ) );
            		description.Append( ", " );
            		description.Append( e.Row.GetCellText( band.Columns["Country"] ) );
            
            		// Set the row's Description to our custom description text.
            		//
            		e.Row.Description = description.ToString( );
            	}
            }
            </pre>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewField"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.AutoPreviewMaxLines"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Expanded">
            <summary>  
            Returns or sets whether the row is expanded. This property is not available at design-time.
            </summary>  
            <remarks>
            <p class="body">If set to False, the row will be collapsed but child row expand/collapse information will not be discarded. An error occurs if this property is set to True and the <b>Expandable</b> property of the <b>UltraGridBand</b> object is False.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.ExpandAll(System.Boolean)"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.CollapseAll(System.Boolean)"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable">
            <summary>
            Returns true if the band's <b>Expandable</b> property is true and the band has child bands that aren't hidden.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HasExpansionIndicator">
            <summary>
            Returns true if the row should display an expansion indicator
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Expanded"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded">
            <summary>
            Returns true if the row is expanded in the display.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ShowAsExpanded">
            <summary>
            Returns true if the Row's expansion indicator indicates that the row is expanded (appears as a minus sign.) This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator">
            <summary>  
            Returns or sets a value that determines whether row expansion (plus/minus) indicators are displayed.
            </summary>
            <remarks>
            <p class="body">This property can be used to show expansion indicators for a row that has no children or hide them for a row that does.</p>
            <p class="body">The <b>Expanded</b> property can be used to indicate whether the expansion indicator appears expanded (minus) or collapsed (plus).</p>
            <p class="body">The <b>BeforeRowExpanded</b> and <b>BeforeRowCollapsed</b> events are generated when the user expands or collapses a row by clicking an expansion indicator.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpanded"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpandAll"/>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.CollapseAll"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ExpansionIndicator"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsExpandable"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.FixedHeight">
            <summary>  
            Returns or sets a value that determines whether a row can be sized by the user. This property is not available at design-time.
            </summary>  
            <remarks>
            <p class="body">This property can be used to indicate a specific row should not be resized, regardless of whether the <b>RowSizing</b> property enables the user to resize rows.</p>
            <p class="body">If this property is set to 1 (FixedHeightTrue) for a particular row, the user may still indirectly resize that row if the <b>RowSizing</b> property is set to 3, since the row's size may be affected by the sizing of another row.</p>
            <p class="body">This property only affects whether the user can resize a row. A row can be sized programmatically, regardless of the value of this property, by setting its <b>Height</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowSelectorAppearance">
            <summary>  
            Determines how the row selectors will look.
            </summary>  
            <remarks>
            <p class="body">The <b>RowSelectorAppearance</b> property is used to specify the appearance of the row selectors. When you assign an Appearance object to the <b>RowSelectorAppearance</b> property, the properties of that object will be applied to the row selectors of all all rows in the band or the rid, depending on where the UltraGridOverride object is being used. You can use the <b>RowSelectorAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the active cell, for example:</p> 
            <p class="code">UltraWinGrid1.Override.RowSelectorAppearance.ForeColor = vbBlack</p>
            <p class="body">Because you may want the row selectors to look different at different levels of a hierarchical record set, <b>RowSelectorAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different row selector appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the row selectors will use the grid-level setting of <b>RowSelectorAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HasRowSelectorAppearance">
            <summary>
            True if a row selector appearance object has been allocated
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.PreviewAppearance">
            <summary>  
            Returns or sets the Appearance object that controls the formatting of row's AutoPreview area. 
            </summary>  
            <remarks>
            <p class="body">The <b>PreviewAppearance</b> property provides access to the Appearance object being used to control the preview area of the UltraGridRow object. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            <p class="body">You can also use the <b>RowPreviewAppearance</b> property of the UltraGridOverride object to control the settings of the row preview area. To determine the settings for a given row, use the <b>ResolvePreviewAppearance</b> method.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.HasPreviewAppearance">
            <summary>
            True if a row preview appearance object has been allocated.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Activated">
            <summary>
            Indicates whether this is the active row
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Selected">
            <summary>  
            Property: gets/sets whether the row is selected 
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsActiveRow">
            <summary>
            Returns True if the current row is the active row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsAddRow">
            <summary>
            Indicates whether this row is a add row. There can only be one add row at a time. When a new row is added, this property for that row will return True. If you have <see cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.UpdateMode"/> set to UpdateMode.OnCellChange then the row is updated and IsAddRow will return False.  When the row is updated on a cell change, IsAddRow still returns True. The <b>IsAddRow</b> property will return True until the row loses focus, regardless of the update mode.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsTemplateAddRow">
            <summary>
            Indicates whether this row is a template add-row.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.TemplateAddRow"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowAddNew"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsUnmodifiedTemplateAddRow">
            <summary>
            Indicates whether this row is an add-row that was added via template-add row and hasn't been 
            modified yet. If this property returns true then it won't show any child template add-row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsGroupByRow">
            <summary>
            Indicates whether this is a group-by row.
            </summary>
            <remarks>
            <p class="body"><b>IsGroupByRow</b> can be used to check if a row is a group-by row or a non-group-by row.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsRowHeightDirty">
            <summary>
            Returns true if the row height needs to be re-initialized
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.AutoPreviewEnabled">
            <summary>
            Returns or sets a value that determines whether the AutoPreview area will be displayed.
            </summary>
            <remarks>
            <p class="body">The AutoPreview area appears under a row and provides a way to display multiple lines of text associated with that row. You can specify how many lines of text should be displayed, and choose to either display the value from a cell in the row or a custom text string that you specify. One common use might be to display the contents of a memo field that initially appears off-screen when the grid is loaded.</p>
            <p class="body">The <b>AutoPreviewEnabled</b> property determines whether the AutoPreview area can be displayed for rows in the specified band. Once AutoPreview has been enabled, it can be displayed for any row by setting the UltraGridRow object's <b>AutoPreviewHidden</b> property to False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.AutoPreviewHeight">
            <summary>
            Returns the height, in pixels, of the AutoPreview area for the row
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.AccessibilityObject">
            <summary>
            Returns the accesible object representing the data area of the grid.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject">
            <summary>
            The Accessible object for a row.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.GetMarshallingControl">
            <summary>
            Returns the control used to synchronize accessibility calls.
            </summary>
            <returns>A control to be used to synchronize accessibility calls.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>An AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (Nothing in Visual Basic) if no object is at the tested location.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.DefaultAction">
            <summary>
            Gets a string that describes the default action of the object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Help">
            <summary>
            Gets a description of what the object does or how the object is used.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Name">
            <summary>
            The accessible name for the data area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Value">
            <summary>
            Returns the row's description
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridRow.RowAccessibleObject.Row">
            <summary>
            Returns the associated row.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.DoesRowMatchGroup(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Returns true if the row belongs in this group by row
            by walking up the parent group by rows if any and making
            sure that the row also matches them.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.RefreshSortPosition">
            <summary>
            If the row is not at correct sort position, this method will
            reposition the row in the rows collection based on the current
            sort criteria.
            </summary>
            <remarks>
            This method can be useful in situations where a new row is added
            to the rows collection (which by default is appended at the end 
            of the collection) and you want to ensure the row is positioned
            at the right position in the collection based on the sort criteria
            without having to resort the whole collection. This method should
            not be used if the sort criteria itself changes which effects the
            whole rows collection.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Overridden. Resolves the appearance for this GroupByRow.
            </summary>
            <remarks>
            <p class="body">Use this method to determine the actual values that are being used to format the GroupByRow. This method returns a value for all Appearance properties or only for specified ones, tracing up the Appearance hierarchy if necessary. You can combine the bit flags for this method to specify which properties should be resolved.</p>
            </remarks>
            <param name="appData"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.ResetHeight">
            <summary>
            Resets the Height to it's default value so that it uses the
            default calcuated group by row height.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Update">
            <summary>
            Overridden. <b>Update</b> does not do anything in this context because this is a GroupByRow with no associated list object in the binding list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.GetUIElement(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion,System.Boolean)">
            <summary>
            Returns the UIElement object that is associated with an object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to an object's UIElement. The reference can be used to set properties of, and invoke methods on, the UIElement object associated with an object. You can use this reference to access any of the UIElement's properties or methods.</p>
            <p class="body">The <b>Type</b> property can be used to determine what type of UIElement was returned. If no UIElement exists, meaning the object is not displayed, Nothing is returned.</p>
            <p class="body">The <b>ParentUIElement</b> property can be used to return a reference to a UIElement's parent UIElement object. The <b>UIElements</b> property can be used to return a reference to a collection of child UIElement objects for a UIElement.</p>
            <p class="body">The <b>UIElementFromPoint</b> method can be invoked to return a reference to an UIElement object residing at specific coordinates.</p>
            <p class="body"><b>CanResolveUIElement</b> method can be invoked to determine whether an object or one of its ancestors can be resolved as a specific type of UIElement.</p>
            <p class="body">The <b>GetUIElement</b> method does not take into account the presence of a pop-up edit window or the drop-down portion of a combo if these elements are present, and will never return a UIElement that corresponds to one of these elements. The <b>GetUIElementPopup</b> method can be invoked to return a reference to a popup window's UIElement.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.ChildBands">
            <summary>
            Overridden. Returns ChildBands collection with one ChildBand
            contaning child rows for this GroupByRow
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.IsGroupByRow">
            <summary>
            Indicates whether this is a group-by row.
            </summary>
            <remarks>
            <p class="body"><b>IsGroupByRow</b> can be used to check if a row is a group-by row or a non-group-by row.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.IsStillValid">
            <summary>
            True only if this row and all of its ancestor rows are still valid. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.IsCard">
            <summary>
            Always returns False since GroupBy rows are never displayed as cards in CardView. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.HasExpansionIndicator">
            <summary>
            Returns True if the row should display an expansion indicator.
            </summary>
            <remarks>
            <p class="body">This property is used to indicate whether the GroupBy Row should display an expansion indicator. Generally, an expansion indicator is present whenever there are one or more data rows associated with the GroupBy Row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Value">
            <summary>
            Value common to all the rows in this GroupByRow (for the associated column)
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Description"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowDescriptionMask"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.GroupByEvaluator"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Description">
            <summary>  
            Property: gets/sets description of the group by row 
            </summary>
            <remarks>
            By default the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridBand"/> or <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/> <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridOverride"/>'s <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowDescriptionMask"/> will be used to format the group by row's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Value"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.IsExpandable">
            <summary>
            Returns true since group by rows can always be expanded
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Column">
            <summary>
            Returns the column associated with this group-by row.
            </summary>
            <remarks>
            <p class="body">When a Band is in GroupBy mode, the data is grouped according to data fields, which correspond to columns in the grid. To create a grouping, the user can drag a column header into the Band's GroupByBox and the data will be grouped according to the values found in that column.</p>
            <p class="body">The <b>Column</b> property of the <b>GroupByRow</b> specifies which column is being used to create the grouping of the current GroupBy Row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Cells">
            <summary>
            Overridden. Returns null since the group by rows don't have any cells collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Rows">
            <summary>
            Returns a collection of the Rows belonging to this GroupByRow.
            </summary>
            <remarks>
            <p class="body">When a Band is in GroupBy mode, the Rows of the band are grouped together under GroupByRows, based on the values of specified fields (columns) in the Band. When the user drags a column header into the Band's GroupByBox (which specifies the field to use for grouping Rows) the Rows of the grid are grouped together under GroupByRows that represent the values found in the field being used for grouping.</p>
            <p class="body">Each GroupByRow will have one or more data rows that share the same grouping criteria. The <b>Rows</b> property of the <b>GroupByRow</b> returns a collection of all the data rows that appear under the GroupByRow.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.RowSpacingBeforeResolved">
            <summary>
            Returns the actual numeric value used to set RowSpacingBefore for this row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.RowSpacingAfterResolved">
            <summary>
            Returns the actual numeric value used to set RowSpacingAfter for this row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.AutoPreviewHeight">
            <summary>
            Returns the height of the AutoPreview area for the row in pixels.
            </summary>
            <remarks>
            <p class="body">The AutoPreview area appears under a row and provides a way to display multiple lines of text associated with that row. You can specify how many lines of text should be displayed, and choose to either display the value from a cell in the row or a custom text string that you specify. One common use might be to display the contents of a memo field that initially appears off-screen when the grid is loaded.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Height">
            <summary>
            Allows you to specify the minimum height of the group by row.
            It only effects the group by row you set this property on.
            </summary>
            <remarks>
            If a group by row is desired to have bigger height than the default
            calcualted minimum height, you can set this property to the 
            height desired. A good place to set this property would be
            in <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeGroupByRow"/>
            event.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.Hidden">
            <summary>
            Determines whether the object will be displayed. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band. Also, changing the <b>Hidden</b> property of an object affects all instances of that object. For example, a hidden column or row is hidden in all scrolling regions.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow.HiddenResolved">
            <summary>
            Returns true if the hidden property for this row is set to
            true or any of this row's ancestor rows have their hidden
            property set to true.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridGroupByRow)">
            <summary>
            Initializes a new <b></b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="groupByRow">Associated <b>UltraGridGroupByRow</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden method. Initializes the appData with appropriate
            appearance data for this group by row ui element.
            </summary>
            <param name="appData"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowConnectorUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement">
            <summary>
            GroupByRowExpansionIndicatorUIElement
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>GroupByRowExpansionIndicatorUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance
            </summary>
            <param name="appearance">AppearanceData</param>
            <param name="requestedProps">AppearancePropFlags</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.Toggle">
            <summary>
            Handles toggling of the expansion indicator state.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.GroupByRow">
            <summary>
            The associated Row object (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.IsOpen">
            <summary>
            Indicates if the expansion indicator is expanded/open.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.CanExpand">
            <summary>
            Indicates whether the associated object can be expanded.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowExpansionIndicatorUIElement.BorderStyle">
            <summary>
            Returns the border for the expansion indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByRowUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridGroupByRow)">
            <summary>
            Initializes a new <b>GroupByRowUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="row">Associated <b>UltraGridGroupByRow</b></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden method. Initializes the appData with appropriate
            appearance data for this group by row ui element.
            </summary>
            <param name="appData"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            overridden. Expands the group by row associated with it.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.GroupByRow">
            <summary>
            The associated GroupByRow object (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden method. Initializes the appData with appropriate
            appearance data for this group by row ui element.
            </summary>
            <param name="appData"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement.GroupByRow">
            <summary>
            The associated GroupByRow object (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupByRowDescriptionUIElement.BorderStyle">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupColumnsCollection">
            <summary>
            A collection of Columns that belong to a specific group.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridGroup)">
            <summary>
            constructor of a collection of Columns that belong to a specific group.
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            constructor of a collection of Columns that belong to a specific group.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.OnDispose">
            <summary>
            Called when this object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridColumn"/>
                  to the collection.
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Int32)">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridColumn"/>
                  to the collection.
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Int16)">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridColumn"/>
                  to the collection.
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Int32,System.Int16)">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridColumn"/>
                  to the collection.
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Remove(System.String)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Remove(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Clone">
            <summary>
            Returns a read-only clone of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.AdjustWidthRangeByLevel(System.Int16,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Called by GetWidthRange to adjust the calulated min/max range to accommodate each level.
            </summary>
            <param name="level"></param>
            <param name="levelWidth"></param>
            <param name="levelMinWidth"></param>
            <param name="levelMaxWidth"></param>
            <param name="maxActualWidth"></param>
            <param name="minWidth"></param>
            <param name="maxWidth"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.AdjustLevelWidths(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adjusts the width of column's in each level to make sure the 
            level width doesn't exceed the group width
            </summary>
            <param name="indexStart"></param>
            <param name="byMouse"></param>
            <param name="groupResize"></param>
            <param name="duringDrag"></param>
            <param name="groupWidth"></param>
            <param name="columnAdded"></param>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Swap(Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Swaps two columns in the group, taking Levels and VisiblePosition into account.
            </summary>
            <param name="ColOne"></param>
            <param name="ColTwo"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.IsReadOnly">
            <summary>
            Returns read only status
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Group">
            <summary>
            Associated Group Object read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupColumnEnumerator">
            <summary>
            Enumerator for the GroupColumnsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupColumnEnumerator.#ctor(Infragistics.Win.UltraWinGrid.GroupColumnsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="columns"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupColumnEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupHeader">
            <summary>
            The class represents the header for a specific group
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.AddToCollection(Infragistics.Win.UltraWinGrid.Selected)">
            <summary>
            Adds column to passed-in collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.Group">
            <summary>
            Returns the Group object that the object is associated with.  This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Group</b> property of an object refers to a specific group of columns in the grid as defined by a Group object. You use the <b>Group</b> property to access the properties of a specified Group object, or to return a reference to a Group object. A Group is a group of columns that appear together in the grid, and can be resized, moved or swapped together as a unit. Columns in the same group share a group header, and can be arranged into a multi-row layout within the group, with different columns occupying different vertical levels within a single row of data. Groups also help with the logical arrangement of columns within the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.Band">
            <summary>
            The header owner's band object. This property
            is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.Height">
            <summary>
            Returns the height of the group header.
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For a Header object, this property is read-only. In a particular band, each column header has the same height. This height is determined by taking the largest height that results from the resolution of each column's header's <b>Appearance</b> attributes and the band's <b>ColHeaderLines</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.Selected">
            <summary>  
            Returns or sets the selected state of the header.
            </summary>  
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.Selectable">
            <summary>
            You should be able to drag a group even though it cannot be selected.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.Draggable">
            <summary>
            defaults to true
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.VisiblePosition">
            <summary>
            Returns or sets the visible position of a header.
            </summary>
            <remarks>
            <p class="body">This property can be used to specify the ordinal positions of groups and columns.</p>
            <p class="body">For group headers, this property returns or sets the position of the group within that group's band. For column headers, this property returns or sets the position of the column within its group, if the column belongs to a group, or its band, if the column belongs to a band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.SizeResolved">
            <summary>
            Resolved header size. This property returns the actual width and the height of the header.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject">
            <summary>
            The Accessible object for a column header.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.GroupHeader,Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupHeader.GroupHeaderAccessibleObject.Group">
            <summary>
            Returns the associated group.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupsCollection">
            <summary>
            Returns the collection of Group objects. This property is read-only at 
            run-time.
            </summary><remarks><para>The Groups property is used to access the 
            collection of Group objects associated with an Band object. An Group 
            is a group of columns that appear together in the grid, and can be 
            resized, moved or swapped together as a unit.</para><para>Each Group 
            object in the collection can be accessed by using its Key value. Group 
            objects in this collection do not support an Index value as the position 
            of the object within the collection is not significant.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            constructor
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.OnDispose">
            <summary>
            Called when this object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridGroup)">
            <summary>
            Appends a group to the collection
            </summary>
            <param name="group">Must be a group object</param>
            <returns>Index in collection</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Add">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridGroup"/>
                  to the collection.
               </para>
            </summary>
            <exception cref="T:System.ArgumentNullException">
               The <paramref name="Group"/>argument was <see langword="null"/>.
            </exception>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Add(System.String)">
            <summary>
            Adds a group object to the collection
            </summary>
            <param name="key"></param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Add(System.String,System.String)">
            <summary>
            Adds a group object to the collection
            </summary>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.AddRange(Infragistics.Win.UltraWinGrid.UltraGridGroup[])">
            <summary>
            For use in design time serialization/deserialization.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.AddGroup(System.String,System.Boolean)">
            <summary>
            created as a central calling function for both Add() functions
            </summary>
            <param name="key"></param>
            <param name="cloned"></param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Remove(System.Int32)">
            <summary>
            Remove group from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Remove(System.String)">
            <summary>
            Remove group from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Remove(Infragistics.Win.UltraWinGrid.UltraGridGroup)">
            <summary>
            Remove group from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Remove(System.Object)">
            <summary>
             Remove a group from the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.RemoveAt(System.Int32)">
            <summary>
             Remove a group from the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a group object to the collection at the given index
            </summary>
            <param name="index"></param>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollection.ToString">
            <summary>
            Returns a descriptive string at design time.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.IsReadOnly">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.Band">
            <summary>
            Associated band object read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupsCollection.IsFixedSize">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupEnumerator">
            <summary>
            Enumerator for the GroupsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupEnumerator.#ctor(Infragistics.Win.UltraWinGrid.GroupsCollection)">
            <summary>
            constructor
            </summary>
            <param name="groups"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupsCollectionUITypeEditor">
            <summary>
            GroupsCollectionUITypeEditor prevents the default collection type editor
            from displaying an ellipsis button.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollectionUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Used to determine the type of UIEditor that will be displayed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle specifying the type of UIEditor.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupsCollectionConverter">
            <summary>
            Summary description for GroupsCollectionConverter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollectionConverter.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns true
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupsCollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns porperty descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.#ctor(Infragistics.Win.UltraWinGrid.UltraGridGroup,System.String)">
            <summary>
            constructor
            </summary>
            <param name="group"></param>
            <param name="name"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Returns group object
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.Category">
            <summary>
            Gets category
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.ResourceName">
            <summary>
            Gets/SEts resource name
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.ResourceValue">
            <summary>
            Gets resource value
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.ComponentType">
            <summary>
            Gets component type
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.IsReadOnly">
            <summary>
            Return false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GroupPropertyDescriptor.PropertyType">
            <summary>
            Gets property type
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeadersCollection">
            <summary>
            Collection of headers
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.CopyTo(Infragistics.Win.UltraWinGrid.HeaderBase[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.IsReadOnly">
            <summary>
            Property: get isreadonly
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.FirstVisibleHeader">
            <summary>
            Returns the first visible header or null if none are
            visible
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeadersCollection.HeaderEnumerator">
            <summary>
            inner class implements IEnumerator interface
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeaderEnumerator.#ctor(Infragistics.Win.UltraWinGrid.HeadersCollection)">
            <summary>
            Constructor
            </summary>
            <param name="rowScrollRegions"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeaderEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject">
            <summary>
            The Accessible object for a row or band's column headers.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraGridChildBand)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.GetMarshallingControl">
            <summary>
            Returns the control used to synchronize accessibility calls.
            </summary>
            <returns>A control to be used to synchronize accessibility calls.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>An AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (Nothing in Visual Basic) if no object is at the tested location.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.DefaultAction">
            <summary>
            Gets a string that describes the default action of the object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Help">
            <summary>
            Gets a description of what the object does or how the object is used.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Name">
            <summary>
            The accessible name for the data area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Value">
            <summary>
            Returns the row's description
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Band">
            <summary>
            Returns the associated band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.ChildBand">
            <summary>
            Returns the associated child band or null.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.Row">
            <summary>
            Returns the associated row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.HeadersCollection.HeadersAccessibleObject.UIElement">
            <summary>
            Returns the associated UIElement or null.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ICustomSummaryCalculator">
            <summary>
            Interface user would implement to calculate custom summaries. <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.CustomSummaryCalculator"/> for more information.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ICustomSummaryCalculator.BeginCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins a custom summary for the SummarySettings object passed in. Implementation of this method would clear up and reset any state variables used for calculating the summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ICustomSummaryCalculator.AggregateCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Implementing code processes the value of the cell associated with passed in row and the SourceColumn off the passed in SummarySettings parameter.
            </summary>
            <param name="summarySettings"></param>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ICustomSummaryCalculator.EndCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Ends previously begun summary and returns the calculated summary value. This is called after AggregateCustomSummary is called for all the rows to be summarized in a summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
            <returns>Returns the summary value.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AverageSummaryCalculator.BeginCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins a custom summary for the SummarySettings object passed in. Implementation of this method would clear up and reset any state variables used for calculating the summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AverageSummaryCalculator.AggregateCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Implementing code processes the value of the cell associated with passed in row and the SourceColumn off the passed in SummarySettings parameter.
            </summary>
            <param name="summarySettings"></param>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.AverageSummaryCalculator.EndCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Ends previously begun summary and returns the calculated summary value. This is called after AggregateCustomSummary is called for all the rows to be summarized in a summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
            <returns>Returns the summary value.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SumSummaryCalculator.BeginCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins a custom summary for the SummarySettings object passed in. Implementation of this method would clear up and reset any state variables used for calculating the summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SumSummaryCalculator.AggregateCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Implementing code processes the value of the cell associated with passed in row and the SourceColumn off the passed in SummarySettings parameter.
            </summary>
            <param name="summarySettings"></param>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SumSummaryCalculator.EndCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Ends previously begun summary and returns the calculated summary value. This is called after AggregateCustomSummary is called for all the rows to be summarized in a summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
            <returns>Returns the summary value.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MinimumSummaryCalculator.BeginCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins a custom summary for the SummarySettings object passed in. Implementation of this method would clear up and reset any state variables used for calculating the summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MinimumSummaryCalculator.AggregateCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Implementing code processes the value of the cell associated with passed in row and the SourceColumn off the passed in SummarySettings parameter.
            </summary>
            <param name="summarySettings"></param>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MinimumSummaryCalculator.EndCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Ends previously begun summary and returns the calculated summary value. This is called after AggregateCustomSummary is called for all the rows to be summarized in a summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
            <returns>Returns the summary value.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MaximumSummaryCalculator.BeginCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins a custom summary for the SummarySettings object passed in. Implementation of this method would clear up and reset any state variables used for calculating the summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MaximumSummaryCalculator.AggregateCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Implementing code processes the value of the cell associated with passed in row and the SourceColumn off the passed in SummarySettings parameter.
            </summary>
            <param name="summarySettings"></param>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MaximumSummaryCalculator.EndCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Ends previously begun summary and returns the calculated summary value. This is called after AggregateCustomSummary is called for all the rows to be summarized in a summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
            <returns>Returns the summary value.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CountSummaryCalculator.BeginCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins a custom summary for the SummarySettings object passed in. Implementation of this method would clear up and reset any state variables used for calculating the summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CountSummaryCalculator.AggregateCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Implementing code processes the value of the cell associated with passed in row and the SourceColumn off the passed in SummarySettings parameter.
            </summary>
            <param name="summarySettings"></param>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.CountSummaryCalculator.EndCustomSummary(Infragistics.Win.UltraWinGrid.SummarySettings,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Ends previously begun summary and returns the calculated summary value. This is called after AggregateCustomSummary is called for all the rows to be summarized in a summary.
            </summary>
            <param name="summarySettings">SummarySettings object associated with the summary being calcualted.</param>
            <param name="rows">RowsCollection for which the summary is being calculated for.</param>
            <remarks>
            <p class="body"><code>rows</code> argument is the rows collection from the band that the <code>summarySettings</code> object is assigned to.</p>
            </remarks>
            <returns>Returns the summary value.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo.GetCellAreaGridBagLayoutManager(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Gets the cell area layout manager for the passed in band.
            </summary>
            <param name="band"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo.GetHeaderAreaGridBagLayoutManager(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Gets the header area layout manager for the passed in band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo.GetSummaryAreaGridBagLayoutManager(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Gets the summary area layout manager for the passed in band.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo.EnsureColScrollRegionMetricsInitialized">
            <summary>
            If the col scroll region metrics is dirty then initializes it.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo.ExtractDataStructure(System.Object,System.String)">
            <summary>
            Extracts the data structure from the specified data source. This method will null out the existing data source on the UltraGrid.
            </summary>
            <param name="dataSource"></param>
            <param name="dataMember"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.Design.IGridDesignInfo.DesignMode">
            <summary>
            For internal use only. Set this to true to force the grid to behave as if it 
            were in design mode even though its Component.DesignMode returns false. This
            is meant to be used by the designer dialogs to show two dummy rows in the 
            preview grids. Note: This property returns whatever it was set to (in other
            words the value of the associated member variable).
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ProcessRowParams">
            <summary>
            ProcessRowParams class.
            </summary>
            <remarks>
            <p class="body"><seealso cref="T:Infragistics.Win.UltraWinGrid.IUltraGridExporter"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ProcessRowParams.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ProcessRowParams.SkipDescendants">
            <summary>
            Specifies whether to skip the descendats of the current row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ProcessRowParams.SkipSiblings">
            <summary>
            Specifies whether to skip sibling rows of the current row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ProcessRowParams.TerminateExport">
            <summary>
            Specifies whether to terminate the export process. Current row will not be processed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.IUltraGridExporter">
            <summary>
            IUltraGridExporter interface.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.IUltraGridExporter.BeginExport(Infragistics.Win.UltraWinGrid.UltraGridLayout,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Begins the exporting process.
            </summary>
            <param name="exportLayout"></param>
            <param name="rows"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.IUltraGridExporter.ProcessRow(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.ProcessRowParams)">
            <summary>
            Exports the passed in row.
            </summary>
            <param name="row"></param>
            <param name="processRowParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.IUltraGridExporter.EndExport(System.Boolean)">
            <summary>
            Called after all the rows have been processed. If the exporting process was canceled 
            (by setting TerminateExport of the ProcessRowParams in a ProcessRow call), then canceled 
            parameter will be true.
            </summary>
            <param name="canceled"></param>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridAction">
            <summary>
            Enumerates the possible actions that can be performed on the grid
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.NextRow">
            <summary>
            Next Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PrevRow">
            <summary>
            Previous Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.NextCell">
            <summary>
            Next Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCell">
            <summary>
            Previous Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.NextCellInBand">
            <summary>
            Next Cell In Band 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCellInBand">
            <summary>
            Previous Cell In Band 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.FirstCellInRow">
            <summary>
            First Cell In Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.LastCellInRow">
            <summary>
            Last Cell In Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PageDownCell">
            <summary>
            Page Down In Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PageUpCell">
            <summary>
            Page Up In Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PageDownRow">
            <summary>
            Page Down In Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PageUpRow">
            <summary>
            Page Up In Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ToggleEditMode">
            <summary>
            Toggle Edit Mode 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ToggleDropdown">
            <summary>
            Toggle Drop Down 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.NextRegion">
            <summary>
            Next Region 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PrevRegion">
            <summary>
            Previous Region 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.AboveRow">
            <summary>
            Above Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.BelowRow">
            <summary>
            Below Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.AboveCell">
            <summary>
            Above Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.BelowCell">
            <summary>
            Below Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.UndoCell">
            <summary>
            Undo Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.UndoRow">
            <summary>
            Undo Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.CloseDropdown">
            <summary>
            Close Drop Down 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode">
            <summary>
            Enter Edit Mode 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditModeAndDropdown">
            <summary>
            Enter Edit Mode and Drop Down 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.FirstCellInBand">
            <summary>
            First Cell In Band 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.LastCellInBand">
            <summary>
            Last Cell In Band
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.FirstCellInGrid">
            <summary>
            First Cell In Grid
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.LastCellInGrid">
            <summary>
            Last Cell In Grid
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ExpandRow">
            <summary>
            Expand Active Row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.FirstRowInGrid">
            <summary>
            First Row In Grid
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.LastRowInGrid">
            <summary>
            Last Row In Grid 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.FirstRowInBand">
            <summary>
            In contrast to the name, this navigates to the first row in a collection, not the first row in a band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.LastRowInBand">
            <summary>
            In contrast to the name, this navigates to the last row in a collection, not the last row in a band.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ToggleCellSel">
            <summary>
            Toggle Cell Selection
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ToggleRowSel">
            <summary>
            Toggle Row Selection
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.DeleteRows">
            <summary>
            Delete Rows 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.DeactivateCell">
            <summary>
            Deactivate Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ActivateCell">
            <summary>
            Activate Cell 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.CollapseRow">
            <summary>
            Collapse Row 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ToggleCheckbox">
            <summary>
            Toggle Check Box 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.NextCellByTab">
            <summary>
            Next Cell By Tab 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCellByTab">
            <summary>
            Previous Cell By Tab 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.ExitEditMode">
            <summary>
            Exit Edit Mode 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.NextRowByTab">
            <summary>
            Next row via the tab key
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridAction.PrevRowByTab">
            <summary>
            Previous rw via the tab key
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridState">
            <summary>
            Bit flags that describe the state of the control. For example, if
            the first cell in the second row is active but not in edit mode bits
            Row, Cell, and FirstCell will be set. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.Cell">
            <summary>
            Active Cell not null
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.CellFirst">
            <summary>
            Active Cell is first cell
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.CellLast">
            <summary>
            Active Cell is last cell
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.HasDropdown">
            <summary>
            Active Cell can be dropped down
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.InEdit">
            <summary>
            Active Cell is in edit state
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.IsCheckbox">
            <summary>
            Active Cell has a check box
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.IsDroppedDown">
            <summary>
            Active Cell is dropped down state
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.Row">
            <summary>
            Active Row is not null
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowChild">
            <summary>
            Active Row is a child row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowExpandable">
            <summary>
            Active Row is expandable
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowExpanded">
            <summary>
            Active Row is expanded
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowFirst">
            <summary>
            Active Row is the first Row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowFirstChild">
            <summary>
            Active Row is the first child (in its parent row)
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowLast">
            <summary>
            Active Row is the last Row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowLastChild">
            <summary>
            Active Row is the last child (in its parent row)
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.GroupByRow">
            <summary>
            A GroupByRow is the active row.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.RowDirty">
            <summary>
            If the current row is dirty.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.SwapDroppedDown">
            <summary>
            If the swap drop down is dropped down.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.FilterDroppedDown">
            <summary>
            If the filter drop down is dropped down.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.FirstRowInGrid">
            <summary>
            Active row is the fist row in the grid. This differs from RowFirst
            in that RowFirst only takes into account sibling bands while 
            FirstRowInGrid cosiders the whole grid (all the bands).
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridState.LastRowInGrid">
            <summary>
            Active row is the last row in the grid. This differs from Rowlast
            in that RowLast only takes into account sibling bands while 
            LastRowInGrid cosiders the whole grid (all the bands).
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GridKeyActionMapping">
            <summary>
            Key/Action mapping object for UltraGrid.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMapping.#ctor(System.Windows.Forms.Keys,Infragistics.Win.UltraWinGrid.UltraGridAction,Infragistics.Win.UltraWinGrid.UltraGridState,Infragistics.Win.UltraWinGrid.UltraGridState,Infragistics.Win.SpecialKeys,Infragistics.Win.SpecialKeys)">
            <summary>
            Constructor
            </summary>
            <param name="keyCode"></param>
            <param name="actionCode"></param>
            <param name="stateDisallowed"></param>
            <param name="stateRequired"></param>
            <param name="specialKeysDisallowed"></param>
            <param name="specialKeysRequired"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridKeyActionMapping.ActionCode">
            <summary>
            Gets/sets the action code. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridKeyActionMapping.StateDisallowed">
            <summary>
            Gets/sets the disallowed state. These are bit flags that specify
            the state that the control MUST NOT be in for this mapping to be
            active. If the current state of the control has any of these 
            bits turned on this mapping will be ignored.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridKeyActionMapping.StateRequired">
            <summary>
            Gets/sets the required state. These are bit flags that specify
            the state that the control MUST be in for this mapping to be
            active.  
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GridKeyActionMappings">
            <summary>
               Summary description for KeyActionMappings.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.LoadDefaultMappings">
            <summary>
            Called the first time GetActionMapping
            is called (enables lazy loading of mappings)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.CopyTo(Infragistics.Win.UltraWinGrid.GridKeyActionMapping[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.CreateActionStateMappingsCollection">
            <summary>
            Creates an instance of an ActionStateMappingsCollection derived class
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.GridKeyActionMappingEnumerator">
            <summary>
             Summary description for KeyActionMappingEnumerator
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.GridKeyActionMappingEnumerator.#ctor(Infragistics.Win.UltraWinGrid.GridKeyActionMappings)">
            <summary>
            Constructor
            </summary>
            <param name="mappings"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.GridKeyActionMappings.GridKeyActionMappingEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridDisplayLayout">
            <summary>
            The main display layout of an <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/>, <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/> or <see cref="T:Infragistics.Win.UltraWinGrid.UltraDropDown"/> control. 
            </summary>
            <remarks>
            <p class="body">The <b>DisplayLayout</b> property of an object is used to access the UltraGridLayout object that determines the settings of various properties related to the appearance and behavior of the object. The UltraGridLayout object provides a simple way to maintain multiple layouts for the grid and apply them as needed. You can also save grid layouts to disk, the registry or a storage stream and restore them later.</p>
            <p class="body">The UltraGridLayout object has properties such as <b>Appearance</b> and <b>Override</b>, so the UltraGridLayout object has sub-objects of these types, and their settings are included as part of the layout. However, the information that is actually persisted depends on how the settings of these properties were assigned. If the properties were set using the UltraGridLayout object's intrinsic objects, the property settings will be included as part of the layout. However, if a named object was assigned to the property from a collection, 
            the layout will only include the reference into the collection, not the actual settings of the named object. (For an overview of the difference between named and intrinsic objects, please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</p>
            <p class="body">For example, if the Layout object's <b>Appearance</b> property is used to set values for the intrinsic Appearance object like this:</p>
            <p class="code">UltraGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</p>
            <p class="body">Then the setting (in this case, <b>ForeColor</b>) will be included as part of the layout, and will be saved, loaded and applied along with the other layout data. However, suppose you apply the settings of a named object to the UltraGridLayout's <b>Appearance</b> property in this manner:</p>
            <p class="code">UltraWinGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.Appearances("New1").ForeColor = vbBlue</p>
            <p class="code">UltraWinGrid1.Layout.Appearance = UltraWinGrid1.Appearances("New1")</p>
            <p class="body">In this case, the ForeColor setting will not be persisted as part of the layout. Instead, the layout will include a reference to the "New1" Appearance object and use whatever setting is present in that object when the layout is applied.</p>
            <p class="body">By default, the layout includes a copy of the entire Appearances collection, so if the layout is saved and restored using the default settings, the object should always be present in the collection when it is referred to. However, it is possible to use the <b>Load</b> and <b>Save</b> methods of the UltraGridLayout object in such a way that the collection will not be re-created when the layout is applied. If this is the case, and the layout contains a reference to a nonexistent object, the default settings for that object's properties will be used.</p>
            <p></p>
            <p class="body">
            The following sample code shows how to set some UltraGridLayout properties in the InitializeLayout event.
            </p>
            <p></p>
            <pre>
            Private Sub UltraGrid1_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles UltraGrid1.InitializeLayout
            
                e.Layout.ViewStyle = Infragistics.Win.UltraWinGrid.ViewStyle.MultiBand
                e.Layout.ViewStyleBand = Infragistics.Win.UltraWinGrid.ViewStyleBand.OutlookGroupBy
            
                e.Layout.AutoFitColumns = True
                e.Layout.MaxRowScrollRegions = 3
                e.Layout.CaptionAppearance.ForeColor = Color.Red
            
                e.Layout.GroupByBox.BandLabelBorderStyle = Infragistics.Win.UIElementBorderStyle.Dotted
                e.Layout.GroupByBox.ShowBandLabels = Infragistics.Win.UltraWinGrid.ShowBandLabels.IntermediateBandsOnly
            
                e.Layout.Override.CellAppearance.BackColor = Color.White
                e.Layout.Override.CellAppearance.BackColor2 = Color.Blue
                e.Layout.Override.CellAppearance.BackGradientStyle = Infragistics.Win.GradientStyle.VerticalBump
            
                e.Layout.AddNewBox.Hidden = False
                e.Layout.AddNewBox.Style = Infragistics.Win.UltraWinGrid.AddNewBoxStyle.Compact
                e.Layout.AddNewBox.ButtonStyle = Infragistics.Win.UIElementButtonStyle.PopupBorderless
                e.Layout.AddNewBox.ButtonConnectorStyle = Infragistics.Win.UIElementBorderStyle.Dotted
            
            End Sub
            </pre>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridLayout">
            <summary>
            An object that maintains the structure and settings for an <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/>, <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/> or <see cref="T:Infragistics.Win.UltraWinGrid.UltraDropDown"/> control. 
            </summary>
            <remarks>
            <p class="body">The <b>DisplayLayout</b> property of an object is used to access the UltraGridLayout object that determines the settings of various properties related to the appearance and behavior of the object. The UltraGridLayout object provides a simple way to maintain multiple layouts for the grid and apply them as needed. You can also save grid layouts to disk, the registry or a storage stream and restore them later.</p>
            <p class="body">The UltraGridLayout object has properties such as <b>Appearance</b> and <b>Override</b>, so the UltraGridLayout object has sub-objects of these types, and their settings are included as part of the layout. However, the information that is actually persisted depends on how the settings of these properties were assigned. If the properties were set using the UltraGridLayout object's intrinsic objects, the property settings will be included as part of the layout. However, if a named object was assigned to the property from a collection, 
            the layout will only include the reference into the collection, not the actual settings of the named object. (For an overview of the difference between named and intrinsic objects, please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</p>
            <p class="body">For example, if the Layout object's <b>Appearance</b> property is used to set values for the intrinsic Appearance object like this:</p>
            <p class="code">UltraGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</p>
            <p class="body">Then the setting (in this case, <b>ForeColor</b>) will be included as part of the layout, and will be saved, loaded and applied along with the other layout data. However, suppose you apply the settings of a named object to the UltraGridLayout's <b>Appearance</b> property in this manner:</p>
            <p class="code">UltraWinGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.Appearances("New1").ForeColor = vbBlue</p>
            <p class="code">UltraWinGrid1.Layout.Appearance = UltraWinGrid1.Appearances("New1")</p>
            <p class="body">In this case, the ForeColor setting will not be persisted as part of the layout. Instead, the layout will include a reference to the "New1" Appearance object and use whatever setting is present in that object when the layout is applied.</p>
            <p class="body">By default, the layout includes a copy of the entire Appearances collection, so if the layout is saved and restored using the default settings, the object should always be present in the collection when it is referred to. However, it is possible to use the <b>Load</b> and <b>Save</b> methods of the UltraGridLayout object in such a way that the collection will not be re-created when the layout is applied. If this is the case, and the layout contains a reference to a nonexistent object, the default settings for that object's properties will be used.</p>
            <p></p>
            <p class="body">
            The following sample code shows how to set some UltraGridLayout properties in the InitializeLayout event.
            </p>
            <p></p>
            <pre>
            Private Sub UltraGrid1_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles UltraGrid1.InitializeLayout
            
                e.Layout.ViewStyle = Infragistics.Win.UltraWinGrid.ViewStyle.MultiBand
                e.Layout.ViewStyleBand = Infragistics.Win.UltraWinGrid.ViewStyleBand.OutlookGroupBy
            
                e.Layout.AutoFitColumns = True
                e.Layout.MaxRowScrollRegions = 3
                e.Layout.CaptionAppearance.ForeColor = Color.Red
            
                e.Layout.GroupByBox.BandLabelBorderStyle = Infragistics.Win.UIElementBorderStyle.Dotted
                e.Layout.GroupByBox.ShowBandLabels = Infragistics.Win.UltraWinGrid.ShowBandLabels.IntermediateBandsOnly
            
                e.Layout.Override.CellAppearance.BackColor = Color.White
                e.Layout.Override.CellAppearance.BackColor2 = Color.Blue
                e.Layout.Override.CellAppearance.BackGradientStyle = Infragistics.Win.GradientStyle.VerticalBump
            
                e.Layout.AddNewBox.Hidden = False
                e.Layout.AddNewBox.Style = Infragistics.Win.UltraWinGrid.AddNewBoxStyle.Compact
                e.Layout.AddNewBox.ButtonStyle = Infragistics.Win.UIElementButtonStyle.PopupBorderless
                e.Layout.AddNewBox.ButtonConnectorStyle = Infragistics.Win.UIElementBorderStyle.Dotted
            
            End Sub
            </pre>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.#ctor(System.String)">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.DisposeObjects(System.IDisposable[])">
            <summary>
            Helper function that array of IDisposables and
            disposes of them if not null
            </summary>
            <param name="objectsToDispose"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.InProgress(System.Enum)">
            <summary>
            Returns true if the object is attached to a grid that is firing the event.
            </summary>
            <returns></returns>
            <remarks>
            <p class="body">You can use the <b>InProgress</b> property in your event code to determine whether the code is being executed by the object that fired the event. This property is also useful when you have multiple instances of a control, as it will always apply to a specific instance.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetAppearanceHolders">
            <summary>
            Resets all appearanceHolders in the appearanceHolder array
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Reset">
            <summary>
            Resets all Layout properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeColScrollRegions">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetColScrollRegions">
            <summary>
            Resets ColSrollRegions. The control will revert to having one main column scrolling region.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeRowScrollRegions">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetRowScrollRegions">
            <summary>
            Resets row scroll regions. The control will revert to having one main row scrolling region.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ToString">
            <summary>
            Returns a null string from ToString so that a default
            string doesn't appear in the property window 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeAppearance">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetAppearance">
            <summary>
            Resets the Appearance object associated with the Displaylayout.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeAppearances">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeAppearanceHolders">
            <summary>
            Returns true if any appearance properties need to be
            persisted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetAppearances">
            <summary>
            Reset appearances to null
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeCaptionAppearance">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetCaptionAppearance">
            <summary>
            Reset appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeBands">
            <summary>
            Returns true if any band has a non default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeBandsSerializer">
            <summary>
            Returns true if any band has a non default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetBands">
            <summary>
            Calls the Reset method on each band
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeOverride">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetOverride">
            <summary>
            Reset override
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeValueLists">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetValueLists">
            <summary>
            Resets valuelists
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeGroupByBox">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetGroupByBox">
            <summary>
            Reset addnewbox
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeAddNewBox">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetAddNewBox">
            <summary>
            Resets the AddNew box
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeBorderStyle">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetBorderStyle">
            <summary>
            Resets BorderStyle to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeInterBandSpacing">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetInterBandSpacing">
            <summary>
            Resets border interband spacing to its default value (5).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeMaxColScrollRegions">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetMaxColScrollRegions">
            <summary>
            Resets MaxColScrollRegions to its default value (10).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeMaxRowScrollRegions">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetMaxRowScrollRegions">
            <summary>
            Resets ResetMaxRowScrollRegions to its default value (10).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeRowConnectorColor">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetRowConnectorColor">
            <summary>
            Resets RowConnectorColor to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeRowConnectorStyle">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetRowConnectorStyle">
            <summary>
            Resets RowConnectorStyle to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeAutoFitColumns">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetAutoFitColumns">
            <summary>
            Resets AutoFitColumns to its default value (false).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeTabNavigation">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetTabNavigation">
            <summary>
            Resets TabNavigation to its default value (next cell).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeBorderStyleCaption">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetBorderStyleCaption">
            <summary>
            Resets BorderStyleCaption to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeScrollStyle">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetScrollStyle">
            <summary>
            Resets ScrollStyle to its default value (Deferred).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeScrollBounds">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetScrollBounds">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBounds"/> property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToLastItem"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeSplitterBarHorizontalAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetSplitterBarHorizontalAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeSplitterBarVerticalAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetSplitterBarVerticalAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeScrollbars">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetScrollbars">
            <summary>
            Resets Scrollbars to its default value (Automatic).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ClearViewStyle(System.Boolean)">
            <summary>
            Clears the ViewStyle scheme used to render row data.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeViewStyle">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetViewStyle">
            <summary>
            Resets ViewStyle to its default value (multiband).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeViewStyleBand">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetViewStyleBand">
            <summary>
            Reset ViewStyleBand to its default setting (vertical).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ClearGroupByColumns">
            <summary>
            Removes all the group by columns from all the bands ungrouping all the rows.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Clone">
            <summary>
            Creates and returns a reference to a clone (identical copy) of this object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to a copy of an object. This is different from setting a variable equal to an object, which does not make a new copy.</p>
            <p class="body">This method is also useful when you want to base one object on another. For example, if you wanted one Appearance object to be the same as another, with the exception of several properties, you could clone the existing Appearance object, make changes to the copy, and use it to change an object's appearance.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Clone(Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Creates and returns a reference to a clone (identical copy) of this object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to return a reference to a copy of an object. This is different from setting a variable equal to an object, which does not make a new copy.</p>
            <p class="body">This method is also useful when you want to base one object on another. For example, if you wanted one Appearance object to be the same as another, with the exception of several properties, you could clone the existing Appearance object, make changes to the copy, and use it to change an object's appearance.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are copied:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul class="body">
            	<li>AddNewBox</li>
            	<li>AlphaBlendEnabled</li>
            	<li>BorderStyle</li>
            	<li>BorderStyleCaption</li>
            	<li>Caption</li>
            	<li>Enabled</li>
            	<li>EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul class="body">
            	<li>Font</li>
            	<li>InterBandSpacing</li>
            	<li>MaxColScrollRegions</li>
            	<li>MaxRowScrollRegions</li>
            	<li>Override</li>
            	<li>RowConnectorColor</li>
            	<li>RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul class="body">
            	<li>ScrollBars</li>
            	<li>TabNavigation</li>
            	<li>TagVariant</li>
            	<li>TipDelay</li>
            	<li>ViewStyle</li>
            	<li>ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">The UltraGridLayout object supports an additional way to copy from an Layout object, the <b>CopyFrom</b> method.</p>
            </remarks>
            <param name="propertyCategories">Optional property category</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.CopyFrom(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
             Applies the attributes of an existing UltraGridLayout object to the current UltraGridLayout object, using the property categories specified.
            </summary>
            <remarks>
            <p class="body">Invoke this method to copy some or all of an existing UltraGridLayout object's property settings to another UltraGridLayout object. This method does not create a new UltraGridLayout object - it merely copies settings from one object to another.</p>
            <p class="body">Invoke the <b>Clone</b> method to make a copy of the current UltraGridLayout object. <b>Clone</b> returns a reference to an UltraGridLayout object, whereas this method does not.</p>
            <p class="body">Multiple categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are copied:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            <td valign="top"><ul class="body">
            <li>AddNewBox</li>
            <li>AlphaBlendEnabled</li>
            <li>BorderStyle</li>
            <li>BorderStyleCaption</li>
            <li>Caption</li>
            <li>Enabled</li>
            <li>EstimatedRows</li></ul>
            </td>
            <td valign="top"><ul class="body">
            <li>Font</li>
            <li>InterBandSpacing</li>
            <li>MaxColScrollRegions</li>
            <li>MaxRowScrollRegions</li>
            <li>Override</li>
            <li>RowConnectorColor</li>
            <li>RowConnectorStyle</li></ul>
            </td>
            <td valign="top"><ul class="body">
            <li>ScrollBars</li>
            <li>TabNavigation</li>
            <li>TagVariant</li>
            <li>TipDelay</li>
            <li>ViewStyle</li>
            <li>ViewStyleBand</li></ul>
            </td>
            </tr>
            </table>
            </p>
            </remarks>
            <param name="source">Source layout object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.CopyFrom(Infragistics.Win.UltraWinGrid.UltraGridLayout,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
             Applies the attributes of an existing UltraGridLayout object to the current UltraGridLayout object, using the property categories specified.
            </summary>
            <remarks>
            <p class="body">Invoke this method to copy some or all of an existing UltraGridLayout object's property settings to another UltraGridLayout object. This method does not create a new UltraGridLayout object - it merely copies settings from one object to another.</p>
            <p class="body">Invoke the <b>Clone</b> method to make a copy of the current UltraGridLayout object. <b>Clone</b> returns a reference to an UltraGridLayout object, whereas this method does not.</p>
            <p class="body">Multiple categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are copied:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            <td valign="top"><ul class="body">
            <li>AddNewBox</li>
            <li>AlphaBlendEnabled</li>
            <li>BorderStyle</li>
            <li>BorderStyleCaption</li>
            <li>Caption</li>
            <li>Enabled</li>
            <li>EstimatedRows</li></ul>
            </td>
            <td valign="top"><ul class="body">
            <li>Font</li>
            <li>InterBandSpacing</li>
            <li>MaxColScrollRegions</li>
            <li>MaxRowScrollRegions</li>
            <li>Override</li>
            <li>RowConnectorColor</li>
            <li>RowConnectorStyle</li></ul>
            </td>
            <td valign="top"><ul class="body">
            <li>ScrollBars</li>
            <li>TabNavigation</li>
            <li>TagVariant</li>
            <li>TipDelay</li>
            <li>ViewStyle</li>
            <li>ViewStyleBand</li></ul>
            </td>
            </tr>
            </table>
            </p>
            </remarks>
            <param name="source">Source layout object</param>
            <param name="propertyCategories">Optional property category</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(System.IO.Stream)">
            <summary>
            Loads a layout from a stream, including all properties.
            </summary>
            <param name="stream">The stream to read.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.IO.Stream)"/> method, from a stream. The stream can be used to retrieve the Layout data from different sources, such as a file on disk, an Internet location or from memory.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate  of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(System.String)">
            <summary>
            Loads a layout from a file, including all properties.
            </summary>
            <param name="filename">The name of the file to read.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.String)"/> method, from a stream. The stream can be used to retrieve the Layout data from different sources, such as a file on disk, an Internet location or from memory.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate  of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(System.IO.Stream,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Loads a layout from a stream, using the specified property categories.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="propertyCategories">Identifies which property categories to load.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <b>Save</b> method, from a stream. The stream can be used to retrieve the Layout data from different sources, such as a file on disk, an Internet location or from memory.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are loaded:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Loads a layout from a file, using the specified property categories.
            </summary>
            <param name="filename">The name of the file to read.</param>
            <param name="propertyCategories">Identifies which property categories to load.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.String)"/> method, from a file.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are loaded:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.IO.Stream)">
            <summary>
            Loads a layout from stream, including all properties.
            </summary>
            <param name="stream">The stream to read.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.IO.Stream)"/> method, from a stream. The stream can be used to retrieve the Layout data from different sources, such as a file on disk, an Internet location or from memory.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate  of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.String)">
            <summary>
            Loads a layout from a file, including all properties.
            </summary>
            <param name="filename">The name of the file to read.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.IO.Stream,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Loads a layout from a stream, using the specified property categories.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="propertyCategories">Identifies which property categories to load.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.IO.Stream)"/> method, from a stream. The stream can be used to retrieve the Layout data from different sources, such as a file on disk, an Internet location or from memory.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are loaded:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Loads a layout from a stream, using the specified property categories.
            </summary>
            <param name="filename">The name of the file to read.</param>
            <param name="propertyCategories">Identifies which property categories to load.</param>
            <remarks>
            <p class="body">Invoking this method loads a layout, created by invoking the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)"/> method, from a file.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are loaded:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(Infragistics.Win.UltraWinGrid.UltraGridLayout,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Loads the current layout with attributes of the passed in UltraGridLayout, using the specified property categories.
            </summary>
            <remarks>
            <p class="body">Invoking this method loads a Layout using another UltraGridLayout object as the source.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the Layout object are loaded:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be copied by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>
            <param name="newLayout">The layout with the property settings to be loaded.</param>
            <param name="propertyCategories">Specifies which properties of the layout to load.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.IO.Stream)">
            <summary>
            Saves a layout to a stream, including all properties.
            </summary>
            <remarks>
            <p class="body">Invoking this method saves a layout to a stream. The stream can be used to save the Layout data to different locations, such as a file on disk, an Internet location or to memory.</p>
            <p class="body">Invoke the <b>Load</b> method to restore the saved layout.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.String)">
            <summary>
            Saves a layout to a file, including all properties.
            </summary>
            <param name="filename">The name of the file to write.</param>
            <remarks>
            <p class="body">Invoking this method saves a layout to a file.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(System.String)"/> method to restore the saved layout.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.IO.Stream,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Saves a layout to a stream, using the specified property categories.
            </summary>
            <remarks>
            <p class="body">Invoking this method saves a layout to a stream. The stream can be used to save the Layout data to different locations, such as a file on disk, an Internet location or to memory.</p>
            <p class="body">Invoke the <b>Load</b> method to restore the saved layout.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are saved:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be saved by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Save(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Saves a layout to a file, using the specified property categories.
            </summary>
            <param name="filename">The name of the file to write.</param>
            <param name="propertyCategories">Identifies which property categories to save.</param>
            <remarks>
            <p class="body">Invoking this method saves a layout to a file.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Load(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)"/> method to restore the saved layout.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are saved:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be saved by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.IO.Stream)">
            <summary>
            Saves a layout to a stream, including all properties.
            </summary>
            <param name="stream">The stream to write to.</param>
            <remarks>
            <p class="body">Invoking this method saves a layout to a stream. The stream can be used to save the Layout data to different locations, such as a file on disk, an Internet location or to memory.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.IO.Stream)"/> method to restore the saved layout.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.String)">
            <summary>
            Saves a layout to a file including all properties.
            </summary>
            <param name="filename">The name of the file to write.</param>
            <remarks>
            <p class="body">Invoking this method saves a layout to a file.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.String)"/> method to restore the saved layout.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.IO.Stream,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Saves a layout to a stream, using the specified property categories.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="propertyCategories">Identifies which property categories to save.</param>
            <remarks>
            <p class="body">Invoking this method saves a layout to a stream. The stream can be used to save the Layout data to different locations, such as a file on disk, an Internet location or to memory.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.IO.Stream,Infragistics.Win.UltraWinGrid.PropertyCategories)"/> method to restore the saved layout.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are saved:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            			///		<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be saved by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.SaveAsXml(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)">
            <summary>
            Saves a layout to a file, using the specified property categories.
            </summary>
            <param name="filename">The name of the file to write.</param>
            <param name="propertyCategories">Identifies which property categories to save.</param>
            <remarks>
            <p class="body">Invoking this method saves a layout to a file.</p>
            <p class="body">Invoke the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadFromXml(System.String,Infragistics.Win.UltraWinGrid.PropertyCategories)"/> method to restore the saved layout.</p>
            <p class="body">When specifying 256 (PropCatGeneral), the following property settings for the UltraGridLayout object are saved:</p>
            <p class="body"><table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul>
            	<li class="body">AddNewBox</li>
            	<li class="body">AlphaBlendEnabled</li>
            	<li class="body">BorderStyle</li>
            	<li class="body">BorderStyleCaption</li>
            	<li class="body">Caption</li>
            	<li class="body">Enabled</li>
            	<li class="body">EstimatedRows</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">Font</li>
            	<li class="body">InterBandSpacing</li>
            	<li class="body">MaxColScrollRegions</li>
            	<li class="body">MaxRowScrollRegions</li>
            	<li class="body">Override</li>
            	<li class="body">RowConnectorColor</li>
            	<li class="body">RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul>
            	<li class="body">ScrollBars</li>
            	<li class="body">TabNavigation</li>
            	<li class="body">TagVariant</li>
            	<li class="body">TipDelay</li>
            	<li class="body">ViewStyle</li>
            	<li class="body">ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">Multiple Layout categories can be saved by combining them using logical <b>Or</b>.</p>
            <p class="body">The <b>Clone</b> and <b>CopyFrom</b> methods can be invoked to make a duplicate of a layout.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.System#ICloneable#Clone">
            <summary>
            Returns a clone of the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeScrollBarLook">
            <summary>
            Indicates whether the property needs to be serialized.
            </summary>
            <returns>A boolean indicating whether the property needs to be serialized.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetScrollBarLook">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeMaxBandDepth">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetMaxBandDepth">
            <summary>
            Resets the MaxBandDepth property to its default value 100.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializePriorityScrolling">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetPriorityScrolling">
            <summary>
            Resets ScrollStyle to its default value (false).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeFilterDropDownButtonImage">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetFilterDropDownButtonImage">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeFilterDropDownButtonImageActive">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetFilterDropDownButtonImageActive">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeSummaryButtonImage">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetSummaryButtonImage">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.RefreshFilters">
            <summary>
            Reevaluates the filters on the rows.
            </summary>
            <remarks>
            <p class="body">Ultragrid does not evaluate the filter conditions on rows when data changes. This can be useful when the data has changed and you want the row filters conditions evaluated on the rows.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeUseFixedHeaders">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetUseFixedHeaders">
            <summary>
            Resets the UseFixedHeaders property to its default value of false.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeFixedHeaderOnImage">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetFixedHeaderOnImage">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeFixedHeaderOffImage">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetFixedHeaderOffImage">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeColumnScrollbarSmallChange">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetColumnScrollbarSmallChange">
            <summary>
            Resets the ColumnScrollbarSmallChange property to its default vlaue of 30.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Infragistics#Win#ISupportPresets#GetPresetProperties(Infragistics.Win.PresetType)">
            <summary>
            Returns a list of properties which can be used in a Preset
            </summary>
            <param name="presetType">Determines which type(s) of properties are returned</param>
            <returns>An array of strings indicating property names</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.Infragistics#Win#ISupportPresets#GetPresetTargetTypeName">
            <summary>
            Returns the TypeName of the Preset target
            </summary>
            <returns>Returns "UltraGridLayout"</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ShouldSerializeLoadStyle">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ResetLoadStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadStyle"/> to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.LoadStyle.PreloadRows"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.GetCachedGraphics">
            <summary>
            Called to get a graphics object suitable for doing metrics calculations only.
            </summary>
            <returns>A graphics object suitable for doing metrics calculations only. This graphics object shouldn't be rendered on.</returns>
            <remarks>
            <p>Do NOT call the <b>Dispose</b> method on the graphics object returned from this method.</p>
            <p>Instead, each call to this method should be paired with a call to <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ReleaseCachedGraphics(System.Drawing.Graphics)"/>.</p>
            <p>During graphics caching calls to <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.GetCachedGraphics"/> will return a single cached graphics object and calls to <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ReleaseCachedGraphics(System.Drawing.Graphics)"/> will be ignored.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ReleaseCachedGraphics(System.Drawing.Graphics)">
            <summary>
            Called to release a graphics object that was returned from a prior call to <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.GetCachedGraphics"/>.
            </summary>
            <param name="gr">The graphics object to release.</param>
            <remarks>
            <p>Do NOT call the <b>Dispose</b> method on the graphics object returned from <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.GetCachedGraphics"/>. Use this method instead.</p>
            <p>During graphics caching calls to <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.GetCachedGraphics"/> will return a single cached graphics object and calls to <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.ReleaseCachedGraphics(System.Drawing.Graphics)"/> will be ignored.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.IsDrawing">
            <summary>
            Returns true if the layout is currently being rendered.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Infragistics#Win#IImageListProvider#ImageList">
            <summary>
            Returns the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ImageList"/> property.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.InitializingAllSubItems">
            <summary>
            Determines whether sub-items are currently being initialized. This property is read-only and is only available at run-time.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseScrollWindow">
            <summary>
            Specifies whether to use scroll window when scrolling the grid.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseScrollWindow"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Scrollbars"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBarLook"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ActiveRow">
            <summary>
            Returns the active row. This property is not available at design-time.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveRow"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.IsDisplayLayout">
            <summary>
            Returns true if this is the grid's main display layout.
            </summary>
            <remarks>
            <p class="body">Since you may want to apply different layouts for display and printing, this property indicates that this layout is being used for display purposes. Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.IsPrintLayout"/> to determine if the layout is being used for printing.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.IsPrintLayout">
            <summary>
            Returns true if this is the layout being used for printing.
            </summary>
            <remarks>
            <p class="body">Since you may want to apply different layouts for display and printing, this property indicates that this layout is being used for printing purposes. Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.IsDisplayLayout"/> to determine if the layout is being used for display.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.SplitterBarWidth">
            <summary>
            The width of the splitterbars based on the splitter border style (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ColScrollRegions">
            <summary>
            A collection of column scrolling region objects.
            </summary>
            <remarks>
            <p class="body">The ColScrollRegions collection contains the ColScrollRegion objects that represent all of the column scrolling regions that exist in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.RowScrollRegions">
            <summary>
            A collection of row scrolling region objects.
            </summary>
            <remarks>
            <p class="body">The RowScrollRegions collection contains the RowScrollRegion objects that represent all of the row scrolling regions that exist in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance">
            <summary>  
            Returns or sets the Appearance object that controls the object's formatting.
            </summary>  
            <remarks>
            <p class="body">The <b>Appearance</b> property of an object is used to associate the object with an Appearance object that will determine its appearance. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For many objects, you do not set formatting properties directly. Instead, you set the properties of an Appearance object, which controls the formatting of the object it is attached to.</p>
            <p class="body">There are two ways of working with the <b>Appearance</b> property and assigning the attributes of an Appearance object to other objects. One way is to create a new Appearance object, adding it directly to the Appearances collection. (Both the Appearance object and the Appearances collection are parts of the control's persistable layout and are therefore located in the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DisplayLayout"/> object.) Then you assign the new Appearance object to the <b>Appearance</b> property of the object you want to format. This method uses a "named" Appearance object that you must explicitly create (and to which you must assign property settings) before it can be used. For instance, you could create an object in the control's Appearances collection and assign it some values as follows:</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearances("New1").BorderColor = vbBlue</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearances("New1").ForeColor = vbRed</p>
            <p class="body">Creating the object in this way does not apply formatting to any visible part of the control. The object simply exists in the collection with its property values, waiting to be used. To actually use the object, you must assign it to the control's (or another object's) <b>Appearance</b> property:</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearance = UltraWinGrid1.DisplayLayout.Appearances("New1")</p>
            <p class="body">In this case, only one Appearance object exists. The control's appearance is governed by the settings of the "New1" object in the collection. Any changes you make to the object in the collection will immediately be reflected in the control.</p>
            <p class="body">The second way of working with the <b>Appearance</b> property is to use it to set property values directly, such as:</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearance.ForeColor = vbBlue</p>
            <p class="body">In this case, an Appearance object is automatically created by the control. This Appearance object is not a member of an Appearances collection and it does not have a name. It is specific to the object for which it was created; it is an "intrinsic" Appearance object. Changes to the properties of an intrinsic Appearance object are reflected only in the object to which it is attached.</p>
            <p class="body">Note that you can assign properties from a named Appearance object to an intrinsic Appearance object without creating a dependency relationship. For example, the following code...</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearance.ForeColor = UltraWinGrid1.DisplayLayout.Appearances("New1").ForeColor</p>
            <p class="body">...does <i>not</i> establish a relationship between the foreground color of the intrinsic object and that of the named object. It is simply a one-time assignment of the named object's value to that of the intrinsic object. In this case, two Appearance objects exist - one in the collection and one attached to the control - and they operate independently of one another.</p>
            <p class="body">If you wish to assign all the properties of a named object to an intrinsic object at once without creating a dependency relationship, you can use the <b>Clone</b> method of the Appearance object to duplicate its settings and apply them. So if you wanted to apply all the property settings of the named Appearance object "New1" to the control's intrinsic Appearance object, but you did not want changes made to "New1" automatically reflected in the grid, you would use the following code:</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearance = UltraWinGrid1.DisplayLayout.Appearances("New1").Clone</p>
            <p class="body">Note that the properties of an Appearance object can also operate in a hierarchical fashion. Certain properties can be set to a "use default" value, which indicates to the control that the property should take its setting from the object's parent. This functionality is enabled by default, so that unless you specify otherwise, child objects resemble their parents, and formatting set at higher levels of the grid hierarchy is inherited by objects lower in the hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.HasAppearance">
            <summary>
            Returns true if an Appearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearances">
            <summary>
            A collection of all the Appearance objects created for use with this control.
            </summary>
            <remarks>
            <p class="body">The Appearances collection is used to contain Appearance objects that you have created and added to the control as pre-defined formatting templates. It does not represent a collection of all the Appearance objects that exist in the control. The intrinsic Appearance objects that are stored by objects such as the UltraGridBand, UltraGridRow, UltraGridCell are not included in the grid's Appearances collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.CaptionAppearance">
            <summary>
            Sets the formatting attributes of an object's caption based upon the Appearance object.
            <see cref="T:Infragistics.Win.Appearance"/>
            </summary>
            <remarks>
            <p class="body">The <b>CaptionAppearance</b> property is used to specify the appearance of the grid's caption (the grid's caption is visible whenever the <b>Caption</b> property of the grid is set to a non-empty string). When you assign an Appearance object to the <b>CaptionAppearance</b> property, the properties of that object will be applied to the grid's caption. 
            You can use the <b>CaptionAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the caption, for example:</p> 
            <p class="code">UltraWinGrid1.CaptionAppearance.ForeColor = vbBlue</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.HasCaptionAppearance">
            <summary>
            Returns true if an CaptionAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Bands">
            <summary>
            A collection of UltraGridBand objects. When used at the grid level, the collection includes all the UltraGridBand objects in the control.
            </summary>
            <remarks>
            <p class="body">The Bands collection contains all of the UltraGridBand objects in the grid. Each UltraGridBand object represents a single level of a hierarchical data set.</p>
            <see cref="T:Infragistics.Win.UltraWinGrid.BandsCollection"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.BandsSerializer">
            <summary>
            Returns a clone of the bands collection. This is for internal use by UltraGrid to seriaize/deserialize bands.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Rows">
            <summary>
            Returns the row collection associated with this layout. For display layout this is the same
            as the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.Rows"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Override">
            <summary>
            The UltraGridOverride object is used to determine the behavior of bands in the grid. Applying an UltraGridOverride to an object replaces that object's default behavior with the behavior specified by the settings of the UltraGridOverride. The DisplayLayout object has an <b>Override</b> property setting that determines the default settings for all UltraGridBands. The UltraGridBand object also has an <b>Override</b> property for settings specific to that band.
            </summary>
            <remarks>
            <p class="body">Because the UltraWinGrid was designed primarily to work with hierarchical data, hierarchical concepts are built into the control at many levels. One of the fundamental design attributes of the Grid is that the objects that make up the control exist in hierarchies, and are influenced by the other objects in a hierarchical fashion. Through the concept of inheritance, objects in the Grid can derive the settings of their properties from the settings of objects that exist above them in a given hierarchy.</p>
            <p class="body">Two of the main hierarchies you will encounter in the UltraWinGrid are the Appearance hierarchy and the Override hierarchy. The Appearance hierarchy provides a way for Grid objects to inherit the settings of the properties that affect the object's appearance, such as properties related to color, font and transparency. The Override hierarchy provides the inheritance framework for other properties of the grid that are not necessarily related to appearance. These two hierarchies are implemented through two objects: the Appearance object and the UltraGridOverride object. 
            Both of these objects serve as "formatters" - they offer collections of properties that are applied to other objects in order to produce a desired appearance or behavior. For example, the UltraGridBand object has an Override sub-object. All of the UltraGridBand's properties that can inherit their values exist as properties of the UltraGridBand's UltraGridOverride object; they do not appear directly as properties of the UltraGridBand object itself.</p>
            <p class="body">You will encounter two types of UltraGridOverride objects. Intrinsic UltraGridOverride objects are built in to other objects. They contain the Override properties associated with that object. They do not appear in the control's Overrides collection. The other type of UltraGridOverride is the stand-alone object that you can create by invoking the <b>Add</b> method of the Overrides collection. The settings of a stand-alone UltraGridOverride's properties do not have any effect on the Grid until the stand-alone object is applied to one of the intrinsic UltraGridOverride objects. 
            Stand-alone Overrides give you an easy way to create groups of attributes and apply them to objects as needed.</p>
            <p class="body">When you change the properties of an UltraGridOverride object, you are not required to specify a value for every property that object supports. Whether the UltraGridOverride object is a stand-alone object you are creating from scratch, or an intrinsic object that is already attached to some other object, you can set certain properties and ignore others. The properties you do not explicitly set are given a "use default" value that indicates there is no specific setting for that property.</p>
            <p class="body">Properties that are set to the "use default" value derive their settings from other objects by following an override hierarchy. In the override hierarchy, each object has a parent object from which it can inherit the actual numeric values to use in place of the "use default" values. The "use default" value should not be confused with the initial setting of the property, which is generally referred to as the default value. In many cases, the default setting of an object's property will be "use default"; this means that the property is initially set not to use a specific value. 
            The "use default" value will be 0 for an enumerated property (usually indicated by a constant ending in the word "default," such as HeaderClickActionDefault) or -1 (0xFFFFFFFF) for a numeric setting, such as that used by size and position-related properties.</p>
            <p class="body">So for example, if the UltraGridOverride object of the top-level band has its <b>HeaderClickAction</b> property set to 0 (HeaderClickActionDefault), the control will use the setting of the grid's <b>HeaderClickAction</b> property for the band, because the grid is above the top-level band in the override hierarchy. The top-most level of the override hierarchy is the UltraWinGrid control itself. If any of the UltraWinGrid's UltraGridOverride object properties are set to their "use default" values, the control uses built-in values (the "factory presets") for those properties. 
            For example, the factory preset of the <b>HeaderClickAction</b> property of the grid's UltraGridOverride object is the value that causes the column headers to be used for selecting columns: 1 (HeaderClickActionSelect). This is the value that will be used to determine how column headers in the grid will behave when the <b>HeaderClickAction</b> property of the grid's Override object is set to the "use default" value.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.HasOverride">
            <summary>
            Returns true if an UltraGridOverride object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ValueLists">
            <summary>
            Returns a collection of ValueList objects. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>ValueLists</b> property is used to access the collection of ValueList objects associated with the UltraWinGrid. ValueList objects are used to provide the contents of the dropdown lists that are displayed in a cell when the column containing the cell has its <b>Style</b> property set to one of the dropdown list styles.</p>
            <p class="body">Each ValueList object in the collection can be accessed by using its <b>Index</b> or <b>Key</b> values. Using the <b>Key</b> value is preferable, because the order of an object within the collection (and therefore its <b>Index</b> value) may change as objects are added to and removed from the collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.HasValueLists">
            <summary>
            Returns true if an valuelist object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.GroupByBox">
            <summary>
            Returns a reference to the GroupByBox object associated wiht the layout. The GroupByBox is used to specify GroupBy rows when the control is in GroupBy mode.
            <see cref="T:Infragistics.Win.UltraWinGrid.GroupByBox"/> 
            </summary>
            <remarks>
            <p class="body">The GroupBy Box is an interface element that gives you a way to dynamically group row data for display. When the GroupBy Box is visible, you can drag column headers into it using the mouse. The data will then be grouped according to the field you have specified. The grid creates a series of GroupBy rows whihc serve to aggregate data that has a common field value. You can then expand or collapse the GroupBy row to display or hide the data for a particular value.</p>
            <p class="body">For example, suppose you have a band in the grid that displays address information, including a field for City. If you drag the header of the City column into the GroupBy box, the grid will display a GroupBy row for every city that occurs in the rows of the band. You can expand the GroupBy row for a particular city to see all the data that relates to that city (i.e. all the data that has the name of the chosen city specified in its City field.)</p>
            <p class="body">The GroupBy Box object supports properties that give you control over the look of the GroupBy Box interface element (including an Appearance property.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.AddNewBox">
            <summary>
            The AddNewBox object represents the AddNew Box interface for entering new data rows into the grid.
            </summary>
            <remarks>
            <p class="body">When a grid is being used to display a flat recordset, the conventional approach for adding data has been to place an empty row at the bottom of the grid. New data is entered into this row and appended to the data source, then the row reserved for new data entry is cleared and moved down to appear below the newly added row. However, when working with a hierarchical recordset, this metaphor is no longer effective. Multiple bands of data are represented as distinct groups of rows, and which group of rows receives the new data is significant. Simply adding new data to the last row in a band will not position the new record correctly with respect to the band's parent recordset.</p>
            <p class="body">To effectively add new data to a hierarchical recordset, the UltraGrid implements an interface called the "AddNew Box." The AddNew Box displays one or more buttons that are used to trigger the addition of new data. The number of buttons corresponds to the number of hierarchical bands displayed. Each band has its own AddNew button, and connecting lines link the buttons, illustrating a hierarchical relationship that mirrors that of the data.</p>
            <p class="body">To use the AddNew Box, you first set focus to a row or cell in the band to which you want to add data. You should determine where in the hierarchy you want the record to appear, then select a record that corresponds to that location. You then click the AddNew button for the band you want to contain the new data, and an empty data entry row appears in the band a the point you selected. For example, if you have a Customers/Orders hierarchy and you wanted to add data for a new order, you would first locate the customer to whom the order belonged, select that customer's record (or one of that customer's existing order records) and click the AddNew button for the Orders band. A blank row would appear below any existing orders that were displayed for the customer.</p>
            <p class="body">The AddNewBox object contains properties that control the various attributes of the AddNew Box interface. For example, you can use the <b>Hidden</b> property of the AddNewBox object to selectively display or hide the interface, thus enabling or disabling the user's ability to add new data. You can also use this object to control the appearance of the AddNew buttons, and specify other formatting features. You can also chose between the standard and compact display styles for the AddNew Box. The compact style preserves screen space by compressing the display of the AddNew buttons and eliminating the display of a hierarchical structure.</p>
            <p class="body"><img src="addnew.gif" width="505" height="280" alt="" border="0"></img></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.HasAddNewBox">
            <summary>
            Returns true if an AddNewBox object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Grid">
            <summary>
            Returns the associated UltraGridBase instance or null if not set (read-only).
            </summary>
            <remarks>
            <p class="body"><b>Grid</b> property returns the UltraGridBase instance this UltraGridLayout object is associated with. UltraGridLayout object keeps a reference back to the UltraGridBase instance it belongs to. For example, given ultraGrid1 of type UltraGrid, ultraGrid1 == ultraGrid1.DisplayLayout.Grid will always evaluate to true. The same applies to UltraCombo and UltraDropDown as well since they all derive from UltraGridBase class.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.BorderStyle">
            <summary>
            Specifies the style that will be used for the border of the Grid control.
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.InterBandSpacing">
            <summary>
            Returns or sets the vertical space between bands.
            </summary>
            <remarks>
            <p class="body">This is the vertical space between the last child row of parent record A, and the first child row of Parent Record B, where Parent record B is the next sibling record after parent record A.</p>
            <p class="body">The <b>InterbandSpacing</b> property determines the spacing between bands in a hierarchical record set. Specifically, it determines the vertical space between the last row of one band and the first row of that band's child band. The higher the value, the greater the space between bands and their children.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.MaxColScrollRegions">
            <summary>
            Returns or sets the maximum number of column scrolling regions.
            </summary>
            <remarks>
            <p class="body">The <b>MaxColScrollRegions</b> property can be used to limit the number of column scrolling regions that may be present at one time in the UltraWinGrid. When the maximum number of regions has been created, no more may be added either through code or by using the user interface of the grid.</p>
            <p class="body">The default setting of this property is 10. The minimum setting for this property is 1.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.MaxRowScrollRegions">
            <summary>
            Returns or sets the maximum number of row scrolling regions.
            </summary>
            <remarks>
            <p class="body">The <b>MaxRowScrollRegions</b> property can be used to limit the number of row scrolling regions that may be present at one time in the UltraGrid. When the maximum number of regions has been created, no more may be added either through code or by using the user interface of the grid.</p>
            <p class="body">The default setting of this property is 10. The minimum setting for this property is 1.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.RowConnectorColor">
            <summary>
            Returns or sets the color of the lines used to connect rows.
            </summary>
            <remarks>
            <p class="body">The <b>RowConnectorColor</b> property determines the color of the lines used to connect rows and bands when hierarchical data is being displayed by the grid. In addition to specifying the color of these lines, you can also set their style using the <b>RowConnectorStyle</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.RowConnectorStyle">
            <summary>
            Returns or sets the style of the lines used to connect rows.
            </summary>
            <remarks>
            <p class="body">The <b>RowConnectorStyle</b> property is used to determine the type of line that will be used to connect child bands to their parents. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, row connector lines formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.AutoFitColumns">
            <summary>
            Specifies whether the AutoFitColumns feature is enabled. This feature automatically resizes the column widths proportionally to fit the visible area of the grid.
            </summary>
            <remarks>
            <p class="body">AutoFitColumns provides automatic resizing of the columns in a band to fit within the visible area of a grid. When set to True, the columns of the band will automatically resize themselves proportionallly so that all columns for the band are visible. If you have set up the grid so that it can be resized (for example, by automatically adjusting its size based on that of its container) the columns will resize themselves dynamically as the size of the grid changes.</p>
            <p class="body">Note that while you can apply this setting at run-time, resetting AutoFitColumns to False will not restore the columns to their previous widths. The internally stored column width is altered by setting this property; if you wish to restore column widths after changing the setting of AutoFitColumns you must write code to store and re-apply the widths.</p>
            <p class="body">For UltraDropDown and UltraCombo this feature auto-fits the columns to <see cref="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DropDownWidth"/> setting. If the <b>DropDownWidth</b> is set to -1 or 0 then the columns are resized to fit the width of the UltraDropDown or the UltraCombo control.</p>
            <p class="body">Note that this is different from having the column resize itself to ensure that all the cell contents are fully visible. For that use <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize(System.Int32)"/>.</p>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize(System.Int32)"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.TabNavigation">
            <summary>
            Returns or sets a value that indicates how the control will respond when the TAB key is pressed.
            </summary>
            <remarks>
            <p class="body">When this property is set to 0 (TabNavigationNextCell) and a cell has focus, pressing TAB will give focus to the cell to the right, or the first cell in the row below the active row if the active cell is the rightmost cell in the row. If a row has focus, pressing TAB will give focus to the row below the active row, unless the active row is the last row in the control, in which case the next control in the form's tab order will receive focus.</p>
            <p class="body">When this property is set to 1 (TabNavigationNextControl) the control passes focus from itself to the next control in the tab order when the TAB key is pressed.</p>
            <p class="body">The 2 (TabNavigationNextControlOnLastCell) combines these two kinds of functionality. The TAB key will shift focus to the next control on the form only when the last cell in the grid has focus, otherwise it will move between cells. (Similarly, when the first cell in the grid has focus, pressing SHIFT+TAB will shift focus to the previous control on the form.)</p>
            <p class="body">Use the <b>TabStop</b> property of a cell or column to determine whether an individual cell or the cells in a column should receive focus when the user presses the TAB key.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.BorderStyleCaption">
            <summary>
            Returns or sets the border style of the control's caption area.
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
            <remarks>
            The caption area is displayed when caption text is specified for the grid. If the grid's <b>Text</b> property is set to an empty string, the caption will not be displayed.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollStyle">
            <summary>
            Controls how vertical row scrolling is done in the grid.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseScrollWindow"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Scrollbars"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBarLook"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBounds">
            <summary>
            Specifies the vertical scrolling behavior in regard to how the UltraGrid scrolls rows. Default is <see cref="F:Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToLastItem"/>.
            </summary>
            <remarks>
            <p class="body">Setting <b>ScrollBounds</b> to <see cref="F:Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill"/> will disallow the user from scrolling further down once the last row becomes visible. While setting it to <see cref="F:Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToLastItem"/> will allow the user to continue scrolling until last row is the only visible row in the row scroll region.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseScrollWindow"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Scrollbars"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBarLook"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.SplitterBarHorizontalAppearance">
            <summary>
            Appearance for the horizontal splitter bar and the split box.
            </summary>
            <remarks>
            <p class="body">This is applied to both the splitbox for splitting the row scroll region as well as the splitter bar that gets shown between the split row scroll regions.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.SplitterBarVerticalAppearance">
            <summary>
            Appearance for the vertical splitter bar and the split box.
            </summary>
            <remarks>
            <p class="body">This is applied to both the splitbox for splitting the col scroll region as well as the splitter bar that gets shown between the split col scroll regions.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Scrollbars">
            <summary>
            Returns or sets a value that determines whether horizontal and/or vertical scrollbars are shown.
            </summary>
            
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ViewStyle">
            <summary>
            Returns or sets a value that determines the type of view displayed by the control.
            </summary>
            <remarks>
            <p class="body">If the grid is bound to a valid data source, the grid checks the <b>ViewStyle</b> property and determines if the data source is supplying a hierarchical recordset or a flat recordset.</p>
            <p class="body">If the data source is supplying hierarchical data and the <b>ViewStyle</b> property is set to 1 (ViewStyleMultiBand) the grid displays a hierarchical recordset resembling:</p>
            <p class="body"><img src="viewvert.gif" width="505" height="299" alt="" border="0"></img></p>
            <p class="body">Otherwise, the grid displays a flat, single-band recordset, which looks like this:</p>
            <p class="body"><img src="viewflat.gif" width="486" height="199" alt="" border="0"></img></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ViewStyleBand">
            <summary>
            Returns or sets a value that determines the type of view displayed by the control.
            </summary>
            <remarks>
            <p class="body">The <b>ViewStyleBand</b> property of the UltraWinGrid determines how bands will be arranged within the control. The arrangement of bands also depends on the type of recordset to which the control is bound - a flat (non-hierarchical) recordset will only appear in a single band, regardless of the setting of this property.</p>
            <p class="body">If the control is bound to a hierarchical recordset, you have a choice of styles for viewing the bands of hierarchical data. You can choose to view the data in a single band (in which case only the top-most level of the hierarchy will be shown). You can select a horizontal view, where bands are separated into columns that break the data up from left to right:</p>
            <p class="body"><img src="viewhoriz.gif" width="505" height="240" alt="" border="0"></img></p>
            <p class="body">You can also choose a vertical view, where bands are separated into groups of rows, and indented in a manner similar to that of an outline or tree view:</p>
            <p class="body"><img src="viewvert.gif" width="505" height="299" alt="" border="0"></img></p>
            <p class="body">In general, the vertical view style fits more data into a smaller area, while the horizontal view style makes the divisions between the levels of the hierarchy more apparent. Which view style you choose will depend on the requirements of your application.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UIElement">
            <summary>
            The main UIElement for the grid (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ScrollBarLook">
            <summary>
            Determines the appearance of the scroll bars.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.MaxBandDepth">
            <summary>
            Gets or sets the max band depth. Grid will load upto MaxBandDepth number of bands.
            </summary>
            <remarks>
            <p class="body">Use this property to force the grid to load upto only a certain number of bands. This can come in use where you have a recursive data relation where a table is related to itself and you only want the grid to drill down the band hierarchy only upto a certain leve.</p>
            <p class="body">Default value for this property is 100 and range is 1-100 inclusive. Throws an ArgumentOutOfRange exception if set to a value below 1 or greater than 100.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.PriorityScrolling">
            <summary>
            Gets/sets whether callbacks made during a scroll operation occur synchronously or asynchronously.
            </summary>
            <value>
            When true, scroll notifications as a result of a scroll arrow or scroll track click will occur synchronously.
            </value>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FilterDropDownButtonImage">
            <summary>
            Gets or sets the image that's used to draw the filter drop down buttons on the column headers.
            </summary>
            <remarks>
            <p class="body">Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FilterDropDownButtonImageActive"/> to set the image for headers with active filters. FilterDropDownButtonImage will be used for headers that don't have any filters in effect.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FilterDropDownButtonImageActive"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FilterDropDownButtonImageActive">
            <summary>
            Gets or sets the image that's used to draw the filter drop down buttons on the column headers when there is a row filter active on the column.
            </summary>
            <remarks>
            <p class="body">Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FilterDropDownButtonImage"/> to set the image for headers with no active filters. ActiveFilterDropDownButtonImage will be used for headers that have filters in effect.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FilterDropDownButtonImage"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.SummaryButtonImage">
            <summary>
            This image will be drawn on the column headers for summary rows icon. Summary rows icon is the icon that shows up on the column headers when summaries are enabled on that column. User can click on this icon to select summaries he/she wants performed on the associated field.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ForceSerialization">
            <summary>
            Internal property.
            </summary>
            <remarks>
            This property is used internally as a workaround for a serialization bug in Visual Studio that was introduced in version 1.1.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.IsExportLayout">
            <summary>
            Indicates whether this layout is an export layout.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders">
            <summary>
            Specifies whether the fixed-headers feature is enabled. Fixed-headers feature lets you fix (freeze) columns so they do not scroll when the grid is scrolled horizontally.
            </summary>
            <remarks>
            <p class="body">Fixed headers functionality lets you fix columns so they always remain in view even when the grid is scrolled horizontally.</p>
            <p class="body">After enabling the fixed headers functionality, you can fix a header by setting the <see cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/> property of the header to true. If no headers are fixed, setting this property to true will cause the row selectors to be fixed. In other words the row selectors will remian in view when the grid is scrolled horizontally.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.FixedHeaderIndicator"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FixedHeaderOnImage">
            <summary>
            Gets or sets the image that's used to draw the fixed header indicator when the header is fixed.
            </summary>
            <remarks>
            <p class="body">Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FixedHeaderOnImage"/> to change the image in the fixed header indicator of the headers that are fixed.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FixedHeaderOffImage"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FixedHeaderOffImage">
            <summary>
            Gets or sets the image that's used to draw the fixed header indicator when the header is not fixed.
            </summary>
            <remarks>
            <p class="body">Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FixedHeaderOffImage"/> to change the image in the fixed header indicator of the headers that are not fixed.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.FixedHeaderOnImage"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.ColumnScrollbarSmallChange">
            <summary>
            Specifies the small change for the horizontal scrollbar in a column scroll region. Default is 30.
            </summary>
            <remarks>
            <p class="body">
            You can use ColumnScrollbarSmallChange property to change the small change of the scrollbar in the column scroll region. By default it is 30. Small change of the scrollbar specifies how much the it will scroll when the arrow is clicked.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadStyle">
            <summary>
            Specifies how rows are loaded. Default value is <see cref="F:Infragistics.Win.UltraWinGrid.LoadStyle.PreloadRows"/>.
            </summary>
            <remarks>
            <p class="body">Set <b>LoadStyle</b> to <see cref="F:Infragistics.Win.UltraWinGrid.LoadStyle.LoadOnDemand"/> to load rows as needed instead of loading all rows at once. Some operations, like sorting, will cause the all rows to be loaded regardless of the load style settings because they require access to all rows.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridLayout.LayoutTypeConverter">
            <summary>
            Layout object type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LayoutTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.LayoutTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridLayout.DisplayLayoutTypeConverter">
            <summary>
            Layout object type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLayout.DisplayLayoutTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns property descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridDisplayLayout.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridDisplayLayout.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridDisplayLayout.ToString">
            <summary>
            Returns a null string from ToString so that a default
            string doesn't appear in the property window 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.LayoutsCollection">
            <summary>
            A collection of Layouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.System#ICloneable#Clone">
            <summary>
            Returns a clone of the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Add">
            <summary>
               <para>
                  Adds a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/>
                  to the collection.
               </para>
            </summary>
            <exception cref="T:System.ArgumentNullException">
               The <paramref name="layout"/>argument was <see langword="null"/>.
            </exception>
            <returns>The newly added layout object</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Adds the specified layout object to the layouts collection.
            </summary>
            <param name="layout">Layout object to add to the collection.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Appends a layout to the collection
            </summary>
            <param name="value">Must be a Layout object</param>
            <returns>Index in collection</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a layout to the collection
            </summary>
            <param name="index">Index in collection</param>
            <param name="value">Must be a Layout object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Insert(System.Int32,Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Inserts a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/> into the collection
            </summary>
            <param name="index">Index in collection at which the item should be inserted</param>
            <param name="layout">Layout to insert</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Remove(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Remove a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridLayout"/> from the collection
            </summary>
            <param name="layout">Layout to remove from the collection</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Remove(System.Object)">
            <summary>
            Remove a layout from the collection
            </summary>
            <param name="value">Must be a Layout object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a layout from the collection
            </summary>
            <param name="index">Index to be removed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Add(System.String)">
            <summary>
            Adds layout object to layout collection
            </summary>
            <param name="key">The key in the collection</param>
            <returns>The newly added layout object</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutsCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            A collection of Layouts.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LayoutsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LayoutsCollection.IsReadOnly">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LayoutsCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LayoutsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LayoutsCollection.IsFixedSize">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.LayoutEnumerator">
            <summary>
            Enumerator for the LayoutsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.LayoutEnumerator.#ctor(Infragistics.Win.UltraWinGrid.LayoutsCollection)">
            <summary>
            constructor
            </summary>
            <param name="layouts"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LayoutEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnClipMode">
            <summary>
            Enum for specifying <see cref="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.ColumnClipMode"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnClipMode.Default">
            <summary>
            Default is resolved to SplitClippedColumns in groups and row-layout mode, and in the regular mode (non-group and non-row-layout modes) it's resolved to RepeatClippedColumns.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnClipMode.RepeatClippedColumns">
            <summary>
            When a column is clipped because there is not enough remaining space on the page, it will be repeated on the next page to ensure that it's fully visible. Columns that are wider than the width of a full page will not be repeated.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.ColumnClipMode.SplitClippedColumns">
            <summary>
            When a column is clipped because there is not enough remaining space on the page, it will be displayed on the next page starting from the point where it got clipped on the previous page.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.LogicalPageInfo">
            <summary>
            Summary description for LogicalPageInfo.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo">
            <summary>
            Summary description for LogicalPageLayoutInfo.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.ColumnClipMode">
            <summary>
            Specifies the action to take when a column gets clipped due to lack of enough space on the page to fully display the column.
            </summary>
            <remarks>
            <p><seealso cref="T:Infragistics.Win.UltraWinGrid.ColumnClipMode"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.FitWidthToPages">
            <summary>
            Returns or sets a value that specifies the maximum number of sheets of paper that will be used to print a single logical page of the report.
            </summary>
            <remarks>
            <p class="body">When you print a report using UltraWinGrid, you may find that the data from the grid does not easily fit onto a single sheet of paper. Although this is usually because there are too many rows to fit vertically, it is also possible that your data consists of too many columns to fit horizonatally. For this reason, the control must sometimes make a distinction between a single "logical" page and the "physical" page (or sheets of paper) that may be required to print it. Essentially, logical pages break only on row boundaries. If you print a report with enough columns to fill the widths of three sheets of paper, the first logical page will comprise three physical pages.</p>
            <p class="body"><div align="center"><img src="logical page.gif" width="417" height="282" alt="Logical vs. Physical Pages" border="0"></img></div></p>
            <p class="body">The <b>FitWidthToPages</b> property limits the number of physical pages that a report may span. The default value for this property is 0, which indicates that the report may span as many physical pages are required to print all of the columns. If you set this property to a non-zero value, the control will scale the output so that the columns in the report will fit onto the specified number of pages. Note that scaling is proportional; if the data is reduced in width to fit, it will also be reduced in height, resulting in smaller print and more rows on each page.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.ClippingOverride">
            <summary>
            Returns or sets a value that determines whether to use extended clipping.
            </summary>
            <remarks>
            <p class="body">There are inconsistencies in the way certain printer drivers implement the printing APIs that UltraWinGrid uses to create its reports. In most instances, the control can detect the presence of these drivers and compensate automatically.</p>
            <p class="body">Some printer drivers handle the clipping of text regions inconsistently. Without compensation, reports printed using these drivers may have text that overlaps multiple cells, or letters may extend below the grid lines dividing headers from rows, or rows from rows. Text wrapping may also be affected.</p>
            <p class="body">Note that, while rows can automatically resize themselves vertically to accommodate larger font sizes, column and group headers cannot. If the text in a column or group header is being clipped, you may simply need to resize the header so that all the text is showing. However, under normal circumstances the header text should never extend past the borders of the header, either vertically or horizontally.</p>
            <p class="body">The <b>ClippingOverride</b> property gives you the ability to determine how UltraWinGrid will handle the detection and correction of printer driver clipping inconsistencies. The default setting, ClippingOverrideAuto, causes the control to automatically detect whether the current driver requires compensation, and apply it if it does. This setting should work in most cases, and should not be changed unless you absolutely have to.</p>
            <p class="body">The other settings of <b>ClippingOverride</b> give you manual control over whether clipping compensation is applied. Setting the property to ClippingOverrideYes will apply text clipping compensation even if the control determines the driver does not require it. A setting of ClippingOverrideNo will turn off compensation, even if the control determines that it is necessary.</p>
            <p class="body">You may find that you only need to apply correction to certain versions of a particular printer driver. You can use the properties of the <a href="ms-help://ms.vscc/ms.msdnvs/cpref/html/frlrfsystemdrawingprintingprintdocumentclasstopic.htm"><b>PrintDocument</b> object</a> to determine which printer dirver is being used to print the report and what the version of that driver is.</p>
            <p class="note"><b>Note</b> An incorrect setting for the <b>ClippingOverride</b> property may produce unpredictable results when printing reports. You may see text overlapping the lines in the grid, text extending outside the cell that contains it, or you may see a gap between the edge of the printed text and the edge of the cell. If you experience problems such as these, first try setting <b>ClippingOverride</b> to its default setting. If you find these types of problems occurring when using the default value, try setting the property to one of the other values.</p>
            <p class="body">You should also note that problems of this nature may stem from problems completely external to UltraWinGrid and your application, such as insufficient printer memory. When attempting to troubleshoot printing problems, make sure your printer settings are correct and try using different driver settings (such as printing TrueType fonts as graphics or printing at a lower resolution) before changing the value of this property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageHeaderBorderStyle">
            <summary>
            Returns or sets a value that determines the printed border style of the page header.
            </summary>
            <remarks>
            <p class="body">The border styles available for report headers are the same as those available for other types of UltraWinGrid objects, such as cells, rows and column headers. If you choose the default setting, the page header will be drawn without borders.</p>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageFooterBorderStyle">
            <summary>
            Returns or sets a value that determines the printed border style of the page footer. 
            </summary>
            <remarks>
            <p class="body">The border styles available for report footers are the same as those available for other types of UltraWinGrid objects, such as cells, rows and column headers. If you choose the default setting, the page footer will be drawn without borders.</p>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageFooter">
            <summary>
            Returns or sets the text that will be printed at the bottom of each page.
            </summary>
            <remarks>
            <p class="body">The text you specify for the page footer will appear at the bottom of each physical page. If you want to make changes to the text of the footer, you can do so in the <b>InitializeLogicalPrintPage</b> event handler. This will change the footer for the logical page only. (<i>See the <a href="Infragistics.Win.UltraWinGrid~Infragistics.Win.UltraWinGrid.UltraGrid~InitializeLogicalPrintPage_EV.html"><span style="text-decoration : none;"><b>InitializeLogicalPrintPage</b></span></a> event topic for a description of the difference between logical and physical pages.</i>)</p>
            <p class="body">You can insert the page number in to the text of your page footer by using a substitution code. The code will be replaced with the physical page number of the page being printed. To insert the physical page number into the page footer, add the following substitution code to the text string you assign to the <b>PageFooter</b> property: <img src="pagenumcode.gif" width="30" height="14" border="0" align="baseline"></img></p>
            <p class="body">You can choose to include the physical page number, the logical page number or some combination of the two on each page. To insert the physical page number on each page, simply include the substitution code in the text of your page footer. To insert the logical page number, you can intitalize a logical page counter variable in the <b>IntializePrint</b> event, then use the <b>InitializeLogicalPrintPage</b> event to increment the counter variable and change the text of the page footer to include the new logical page count value.</p>
            <p class="body">You can justify individual sections of the page footer by specifying a tab-delimited string for the <b>PageFooter</b> property. Text specified will be left-aligned until a tab character is encountered. Text following the first tab character that comes before the second tab character will be centered. Text following the second tab character will be right-aligned. For example, you could right align the entire page footer by beginning the text string with two tab characters.</p> 
            <p class="body">Including a tab character in the footer text will override any alignments specified for the footer. If no tab characters are included in the text, the default alignment will be used (as determined by the settings of the Appearance object returned by <b>PageFooterAppearance</b>.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageHeader">
            <summary>
            Returns or sets the text that will be printed at the top of each page.
            </summary>
            <remarks>
            <p class="body">The text you specify for the page header will appear at the top of each physical page. If you want to make changes to the text of the header, you can do so in the <b>InitializeLogicalPrintPage</b> event. This will change the header for the logical page only. (<i>See the <a href="Infragistics.Win.UltraWinGrid~Infragistics.Win.UltraWinGrid.UltraGrid~InitializeLogicalPrintPage_EV.html"><span style="text-decoration : none;"><b>InitializeLogicalPrintPage</b></span></a> event topic for a description of the difference between logical and physical pages.</i>)</p>
            <p class="body">You can insert the page number in to the text of your page header by using a substitution code. The code will be replaced with the physical page number of the page being printed. To insert the physical page number into the page header, add the following substitution code to the text string you assign to the <b>PageHeader</b> property: <img src="pagenumcode.gif" width="30" height="14" border="0" align="baseline"></img></p>
            <p class="body">You can choose to include the physical page number, the logical page number or some combination of the two on each page. To insert the physical page number on each page, simply include the substitution code in the text of your page header. To insert the logical page number, you can intitalize a logical page counter variable in the <b>IntializePrint</b> event, then use the <b>InitializeLogicalPrintPage</b> event to increment the counter variable and change the text of the page header to include the new logical page count value.</p>
            <p class="body">You can justify individual sections of the page header by specifying a tab-delimited string for the <b>PageHeader</b> property. Text specified will be left-aligned until a tab character is encountered. Text following the first tab character that comes before the second tab character will be centered. Text following the second tab character will be right-aligned. For example, you could right align the entire page header by beginning the text string with two tab characters.</p> 
            <p class="body">Including a tab character in the header text will override any alignments specified for the header. If no tab characters are included in the text, the default alignment will be used (as determined by the settings of the Appearance object returned by <b>PageHeaderAppearance</b>.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageFooterHeight">
            <summary>
            Returns or sets a value that specifies the height of the page footer.
            </summary>
            <remarks>
            <p class="body">The <b>PageHeaderHeight</b> property determines the amount of space reserved on each page of the report for the page header information. The default value for this property is -1, which causes the control to allocate space for the header based on the size of the text specified in the <b>PageHeader</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageHeaderHeight">
            <summary>
            Returns or sets a value that specifies the height of the page header.
            </summary>
            <remarks>
            <p class="body">The <b>PageFooterHeight</b> property determines the amount of space reserved on each page of the report for the page header information. The default value for this property is -1, which causes the control to allocate space for the footer based on the size of the text specified in the <b>PageFooter</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageFooterAppearance">
            <summary>
            Returns or sets the Appearance object that controls the formatting of page footer.
            </summary>
            <remarks>
            <p class="body">The <b>PageFooterAppearance</b> property provides access to the Appearance object being used to control the formatting of the text that appears at the bottom of the printout. The Appearance object has properties that control settings such as color, font, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.LogicalPageLayoutInfo.PageHeaderAppearance">
            <summary>
            Page Header's appearance
            </summary>
            <remarks>
            <p class="body">The <b>PageHeaderAppearance</b> property provides access to the Appearance object being used to control the formatting of the text that appears at the top of the printout. The Appearance object has properties that control settings such as color, font, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.MergedCellUIElement">
            <summary>
            The ui element class for representing a merged cell.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Constructor.
            </summary>
            <param name="parent">The parent ui element.</param>
            <param name="row">Row associated with the first cell in the group of merged cells.</param>
            <param name="column">The column associated with the merged cells.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden.
            </summary>
            <param name="appData"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the element or null. 
            </summary>
            <param name="type"></param>
            <param name="checkParentElementContexts"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.GetDescendant(System.Type,System.Object[])">
            <summary>
            Overridden. Returns the element of the requested type that satisfies all of the passed in contexts
            </summary>
            <param name="type"><see cref="T:System.Type"/>The type (or base class type) of the UIElement to look for.</param>
            <param name="contexts">The contexts that must all match with the contexts of the element.</param>
            <returns>Descendent element of this element that matches the specified type and contexts.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.WantsInputNotification(Infragistics.Win.UIElementInputType,System.Drawing.Point)">
            <summary>
            Overridden. Returns true if this ui element is interested in getting notificaions of type inputType
            at the specified location. Default implementation always returns true.
            </summary>
            <param name="inputType">The type of notification.</param>
            <param name="point">Point of interest.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.Contains(System.Drawing.Point,System.Boolean)">
            <summary>
            Overridden.
            </summary>
            <param name="point"></param>
            <param name="ignoreClipping"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.DrawChildElements(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.IntersectInvalidRect(System.Drawing.Rectangle)">
            <summary>
            Returns the intersection of the element's rect with the invalid rect for the
            current draw operation.
            </summary>
            <param name="invalidRect">Invalid rect</param>
            <returns>The intersection of the element's rect with the invalid rect.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.VerifyChildElements(Infragistics.Win.ControlUIElementBase,System.Boolean)">
            <summary>
            Overridden.
            </summary>
            <param name="controlElement"></param>
            <param name="recursive"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.MergedCellUIElement.OnAfterDraw(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MergedCellUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MergedCellUIElement.BorderSides">
            <summary>
            Overridden property that returns an appropriate Border3DSide
            structure for drawing the borders for the cell UI element
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MergedCellUIElement.ClipSelf">
            <summary>
            Returning true causes all drawing of this element to be expicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MergedCellUIElement.Region">
            <summary>
            Returns the region of this element. The deafult returns the element's
            Rect as a region. This method can be overriden to supply an irregularly
            shaped region 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.MergedCellUIElement.ThemedElementRegion">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridOverride">
            <summary>
            Returns or sets the UltraGridOverride for the object. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Override</b> property of an object is used to associate the object with an UltraGridOverride object that will determine the object's appearance and behavior. UltraGridOverride objects are used to consolidate certain properties of the grid and the UltraGridBand object that can derive their settings from other objects in a hierarchical fashion. Properties of the UltraGridOverride object provide a form of inheritance for UltraGridBand objects that exist in a hierarchical relationship; they can be set so that they take their values from objects above them in the hierarchy.</p>
            <p class="body">There are two ways of working with the <b>Override</b> property and assigning the settings of an UltraGridOverride object to other objects. One way is to create a new UltraGridOverride object, adding it directly to the Overrides collection. Then you assign the new UltraGridOverride object to the <b>Override</b> property of the object whose appearance and behavior you want to modify. This method uses a "named" UltraGridOverride object that you must explicitly create (and to which you must assign property settings) before it can be used. For instance, you could create an object in the grid's Overrides collection and assign it some values as follows:</p>
            <p class="code">UltraWinGrid1.Overrides.Add "New1"</p>
            <p class="code">UltraWinGrid1.Overrides("New1").SelectTypeRow = SelectType.Extended</p>
            <p class="code">UltraWinGrid1.Overrides("New1").MaxSelectedRows = 5</p>
            <p class="body">Creating the object in this way does not apply its property settings to any band or to the grid itself. The object simply exists in the collection with its property values, waiting to be used. To actually use the object, you must assign it to the <b>Override</b> property of the grid or an UltraGridBand object:</p>
            <p class="code">UltraWinGrid1.Bands(0).Override = UltraWinGrid1.Overrides("New1")</p>
            <p class="body">In this case, only one UltraGridOverride object exists. The behavior and appearance of the first band in the grid is governed by the settings of the "New1" object in the collection. Any changes you make to the object in the collection will immediately be reflected in the grid.</p>
            <p class="body">The second way of working with the <b>Override</b> property is to use it to set property values directly, such as:</p>
            <p class="code">UltraWinGrid1.Bands(0).Override.SelectTypeCol = ssSelectTypeSingle</p>
            <p class="body">In this case, an UltraGridOverride object is automatically created by the control. This UltraGridOverride object is not a member of an Overrides collection and it does not have a name. It is specific to the object for which it was created; it is an "intrinsic" UltraGridOverride object. Changes to the properties of an intrinsic UltraGridOverride object are reflected only in the object to which it is attached (in this case, the UltraGridBand object indicated by "Bands(0)").</p>
            <p class="body">Note that you can assign properties from a named UltraGridOverride object to an intrinsic UltraGridOverride object without creating a dependency relationship. For example, the following code...</p>
            <p class="code">UltraWinGrid1.Bands(0).Override.MaxSelectedRows = UltraWinGrid1.Overrides("New1").MaxSelectedRows</p>
            <p class="body">...does not establish a relationship between the number of rows that can be selected in the intrinsic object and the same setting in the named object. It is simply a one-time assignment of the named object's value to that of the intrinsic object. In this case, two UltraGridOverride objects exist - one in the collection and one attached to the Band object - and they operate independently of one another.</p>
            <p class="body">If you wish to assign all the properties of a named object to an intrinsic object at once without creating a dependency relationship, you can use the <b>Clone</b> method of the UltraGridOverride object to duplicate its settings and apply them. So if you wanted to apply all the property settings of the named UltraGridOverride object "New1" to the grid's intrinsic UltraGridOverride object, but you did not want changes made to "New1" automatically reflected in the grid, you would use the following code:</p>
            <p class="code">UltraWinGrid1.Override = UltraWinGrid1.Overrides("New1").Clone</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.#ctor">
            <summary>
            Constructor used to add a valuelist within the properties
            table
            </summary>		                              
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Constructor
            </summary>
            <param name="layout"></param>                                 
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="layout"></param>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.OnDispose">
            <summary>
            Called when this object is Disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ToString">
            <summary>
            Returns a null string from ToString so that a default
            string doesn't appear in the property window 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAppearanceHolders">
            <summary>
            Returns true if any appearance properties need to be
            persisted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAppearanceHolders">
            <summary>
            Resets all appearanceHolders in the appearanceHolder array
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAppearances">
            <summary>
            Resets all appearances in the appearances array
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeActiveRowAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetActiveRowAppearance">
            <summary>
            Resets Active Row's Appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeActiveCellAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetActiveCellAppearance">
            <summary>
            Reset Active Cell's appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellButtonAppearance">
            <summary>
            Returns true if the CellButtonAppearance needs to be
            serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellButtonAppearance">
            <summary>
            Resets the CellButtonAppearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCardAreaAppearance">
            <summary>
            Returns true if the CardAreaAppearance needs to be
            serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCardAreaAppearance">
            <summary>
            Resets the CardAreaAppearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeActiveCardCaptionAppearance">
            <summary>
            Returns true if the ActiveCardCaptionAppearance needs to be
            serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetActiveCardCaptionAppearance">
            <summary>
            Resets the ActiveCardCaptionAppearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCardCaptionAppearance">
            <summary>
            Returns true if the CardCaptionAppearance needs to be
            serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCardCaptionAppearance">
            <summary>
            Resets the CardCaptionAppearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectedCardCaptionAppearance">
            <summary>
            Returns true if the SelectedCardCaptionAppearance needs to be
            serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectedCardCaptionAppearance">
            <summary>
            Resets the SelectedCardCaptionAppearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellAppearance">
            <summary>
            Resets the Cell's appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMaskLiteralsAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMaskLiteralsAppearance">
            <summary>
            Resets the MaskLiteralsAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeEditCellAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetEditCellAppearance">
            <summary>
            Resets the Edit Cell's Appearance object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeHeaderAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetHeaderAppearance">
            <summary>
            Resets the Header Appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowAlternateAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowAlternateAppearance">
            <summary>
            Resets the alternate Row's appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSelectorAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSelectorAppearance">
            <summary>
            Resets the RowSelector Appearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSelectorHeaderAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSelectorHeaderAppearance">
            <summary>
            Resets the RowSelectorHeaderAppearance Appearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectedCellAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectedCellAppearance">
            <summary>
            Resets the selected cell appearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectedRowAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectedRowAppearance">
            <summary>
            Resets the selected Row's Appearance.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowAppearance">
            <summary>
            Resets the RowAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowPreviewAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowPreviewAppearance">
            <summary>
            Resets the RowPreviewAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSummaryFooterAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSummaryFooterAppearance">
            <summary>
            Resets the SummaryFooterAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSummaryFooterCaptionAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSummaryFooterCaptionAppearance">
            <summary>
            Resets the SummaryFooterCaptionAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSummaryValueAppearance">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSummaryValueAppearance">
            <summary>
            Resets the SummaryValueAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSummaryFooterCaptionVisible">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSummaryFooterCaptionVisible">
            <summary>
            Resets SummaryFooterCaptionVisible property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowAddNew">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowAddNew">
            <summary>
            Resets AllowAddNew to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowColMoving">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowColMoving">
            <summary>
            Resets AllowColMoving to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowColSizing">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowColSizing">
            <summary>
            Resets AllowColSizing to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowColSwapping">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowColSwapping">
            <summary>
            Resets AllowColSwapping to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowDelete">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowDelete">
            <summary>
            Reset AllowDelete to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowGroupMoving">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowGroupMoving">
            <summary>
            Resets AllowGroupMoving to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowGroupSwapping">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowGroupSwapping">
            <summary>
            Resets AllowGroupSwapping to its default (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowGroupBy">
            <summary>
            Returns true if AllowGroupBy needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowGroupBy">
            <summary>
            Resets AllowGroupBy to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowFilterMode">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowFilterMode">
            <summary>
            Resets the property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowRowFiltering">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowRowFiltering">
            <summary>
            Resets the property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowFilterAction">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowFilterAction">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFilteredOutRowAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFilteredOutRowAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFilteredOutCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFilteredOutCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFilteredInRowAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFilteredInRowAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFilteredInCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFilteredInCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowRowSummaries">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowRowSummaries">
            <summary>
            Resets the property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByColumnsHidden">
            <summary>
            Returns true if property needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByColumnsHidden">
            <summary>
            Resets the property to its default value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowUpdate">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowUpdate">
            <summary>
            Resets AllowUpdate to its default value (default).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleRow">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleRow">
            <summary>
            Resets BorderStyleRow to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleSummaryFooter">
            <summary>
            Returns true if the key needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleSummaryFooter">
            <summary>
            Resets BorderStyleSummaryFooter to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleSummaryValue">
            <summary>
            Returns true if the key needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleSummaryValue">
            <summary>
            Resets BorderStyleSummaryValue to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleSummaryFooterCaption">
            <summary>
            Returns true if the key needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleSummaryFooterCaption">
            <summary>
            Resets BorderStyleSummaryFooterCaption to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleCell">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleCell">
            <summary>
            Resets BorderStyleCell to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleCardArea">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleCardArea">
            <summary>
            Resets BorderStyleCardArea to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleHeader">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleHeader">
            <summary>
            Resets BorderStyleHeader to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellClickAction">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellClickAction">
            <summary>
            Resets CellClickAction to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellMultiLine">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellMultiLine">
            <summary>
            Resets CellMultiline to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellPadding">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellPadding">
            <summary>
            Resets CellPadding to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellSpacing">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellSpacing">
            <summary>
            Resets CellSpacing to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCardSpacing">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCardSpacing">
            <summary>
            Resets CardSpacing to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeDefaultColWidth">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetDefaultColWidth">
            <summary>
            Resets DefaultColWidth to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeDefaultRowHeight">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetDefaultRowHeight">
            <summary>
            Resets DefaultRowHeight to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeExpansionIndicator">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetExpansionIndicator">
            <summary>
            Resets ExpansionIndicator to its default setting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeHeaderClickAction">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetHeaderClickAction">
            <summary>
            Resets HeaderClickAction to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMaxSelectedCells">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMaxSelectedCells">
            <summary>
            Resets MaxSelectedCells to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMaxSelectedRows">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMaxSelectedRows">
            <summary>
            Resets MaxSelectedRows to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeNullText">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetNullText">
            <summary>
            Resets NullText to its default value ("null").
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSelectors">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSelectors">
            <summary>
            Resets RowSelectors to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSizing">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSizing">
            <summary>
            Resets RowSizing to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSizingArea">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSizingArea">
            <summary>
            Resets RowSizingArea to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSpacingBefore">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSpacingBefore">
            <summary>
            Resets RowSpacingBefore to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSpacingAfter">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSpacingAfter">
            <summary>
            Resets RowSpacingAfter to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByRowSpacingBefore">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByRowSpacingBefore">
            <summary>
            Resets GroupByRowSpacingBefore to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByRowSpacingAfter">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByRowSpacingAfter">
            <summary>
            Resets GroupByRowSpacingAfter to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSizingAutoMaxLines">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSizingAutoMaxLines">
            <summary>
            Resets RowSizingMaxLines to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectTypeCell">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectTypeCell">
            <summary>
            Resets SelectTypeCell to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectTypeCol">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectTypeCol">
            <summary>
            Reset SelectTypeCol to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectTypeRow">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectTypeRow">
            <summary>
            Resets SelectTypeRow to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTipStyleCell">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTipStyleCell">
            <summary>
            Resets TipStyleCell to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTipStyleRowConnector">
            <summary>
            Returns true if the key needs to be serialized (not null)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTipStyleRowConnector">
            <summary>
            Resets TipStyleRowConnector to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTipStyleScroll">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTipStyleScroll">
            <summary>
            Resets TipStyleScroll to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByColumnAppearance">
            <summary>
            Returns true if the GroupByColumnAppearance needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByColumnAppearance">
            <summary>
            Resets GroupByColumnAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByColumnHeaderAppearance">
            <summary>
            Returns true if the GroupByColumnHeaderAppearance needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByColumnHeaderAppearance">
            <summary>
            Resets GroupByColumnHeaderAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByRowAppearance">
            <summary>
            Returns true if the GroupByRowAppearance needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByRowAppearance">
            <summary>
            Resets GroupByRowAppearance
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByRowDescriptionMask">
            <summary>
            Returns true if the GroupByRowDescriptionMask needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByRowDescriptionMask">
            <summary>
            Reset GroupByRowDescriptionMask
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeGroupByRowPadding">
            <summary>
            Returns true if the GroupByRowPadding needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetGroupByRowPadding">
            <summary>
            Reset GroupByRowPadding
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSelectTypeGroupByRow">
            <summary>
            Returns true if the SelectTypeGroupByRow needs to be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSelectTypeGroupByRow">
            <summary>
            Reset SelectTypeGroupByRow
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSelectorHeaderStyle">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSelectorHeaderStyle">
            <summary>
            Resets RowSelectorHeaderStyle to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeRowSelectorWidth">
            <summary>
            Returns true if the RowSelectorWidth property is set to a value other than the default value of 0.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetRowSelectorWidth">
            <summary>
            Resets the RowSelectorWidth property to its default value of 0.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleRowSelector">
            <summary>
            Returns true if the BorderStyleRowSelector property is set to a value other than the default value of <see cref="F:Infragistics.Win.UIElementBorderStyle.Default"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleRowSelector">
            <summary>
            Resets the BorderStyleRowSelector property to its default value of <see cref="F:Infragistics.Win.UIElementBorderStyle.Default"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowRowLayoutCellSizing">
            <summary>
            Returns true if the AllowRowLayoutCellSizing property is set to a value other than the default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Default"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowRowLayoutCellSizing">
            <summary>
            Resets the AllowRowLayoutCellSizing property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Default"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAllowRowLayoutLabelSizing">
            <summary>
            Returns true if the AllowRowLayoutLabelSizing property is set to a value other than the default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Default"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAllowRowLayoutLabelSizing">
            <summary>
            Resets the AllowRowLayoutLabelSizing property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutSizing.Default"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetColumnAutoSizeMode">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeColumnAutoSizeMode">
            <summary>
            Returns true if the property is set to a value other than the default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetCellDisplayStyle">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeCellDisplayStyle">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFixedHeaderIndicator">
            <summary>
            Retruns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFixedHeaderIndicator">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFixedCellSeparatorColor">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFixedCellSeparatorColor">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFixedHeaderAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFixedHeaderAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFixedCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFixedCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTemplateAddRowCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTemplateAddRowCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAddRowCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAddRowCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTemplateAddRowAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTemplateAddRowAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeAddRowAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetAddRowAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTemplateAddRowSpacingBefore">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTemplateAddRowSpacingBefore">
            <summary>
            Resets TemplateAddRowSpacingBefore to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeTemplateAddRowSpacingAfter">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetTemplateAddRowSpacingAfter">
            <summary>
            Resets TemplateAddRowSpacingAfter to its default value (-1).
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeBorderStyleTemplateAddRow">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetBorderStyleTemplateAddRow">
            <summary>
            Resets BorderStyleTemplateAddRow to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMinRowHeight">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMinRowHeight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MinRowHeight"/> to its default value of -1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeShowInkButton">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetShowInkButton">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeShowCalculatingText">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetShowCalculatingText">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.Infragistics#Win#ISupportPresets#GetPresetProperties(Infragistics.Win.PresetType)">
            <summary>
            Returns a list of properties which can be used in a Preset
            </summary>
            <param name="presetType">Determines which type(s) of properties are returned</param>
            <returns>An array of strings indicating property names</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.Infragistics#Win#ISupportPresets#GetPresetTargetTypeName">
            <summary>
            Returns the TypeName of the Preset target
            </summary>
            <returns>Returns "UltraGridOverride"</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFormulaErrorAppearance">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFormulaErrorAppearance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FormulaErrorAppearance"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeFormulaRowIndexSource">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetFormulaRowIndexSource">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMergedCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMergedCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMergedCellContentArea">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMergedCellContentArea">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeMergedCellStyle">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetMergedCellStyle">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeColumnSizingArea">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetColumnSizingArea">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeSupportDataErrorInfo">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetSupportDataErrorInfo">
            <summary>
            Resets the property to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeDataErrorRowAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetDataErrorRowAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeDataErrorCellAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetDataErrorCellAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShouldSerializeDataErrorRowSelectorAppearance">
            <summary>
            Returns true if the property needs to be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.ResetDataErrorRowSelectorAppearance">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ActiveRowAppearance">
            <summary>
            Returns or sets the active row's Appearance object.
            </summary>
            <remarks>
            <p class="body">The <b>ActiveRowAppearance</b> property is used to specify the appearance of the active row (as determined by the <b>ActiveRow</b> property). When you assign an Appearance object to the <b>ActiveRowAppearance</b> property, the properties of that object will be applied to any row that becomes the active row. You can use the <b>ActiveRowAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the active row, for example:</p> 
            <p class="code">UltraWinGrid1.Override.ActiveRowAppearance.BackColor = vbBlue</p>
            <p class="body">Because you may want the active row to look different at different levels of a hierarchical record set, <b>ActiveRowAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different active row appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the grid level to determine the properties for that band. In other words, any band without an override will use the grid's override, therefore the active row in that band will use the grid-level setting of <b>ActiveRowAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasActiveRowAppearance">
            <summary>
            Returns true if an ActiveRowAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ActiveCellAppearance">
            <summary>
            Returns or sets the active cell's Appearance object.
            </summary>
            <remarks>
            <p class="body">The <b>ActiveCellAppearance</b> property is used to specify the appearance of the active cell (as determined by the <b>ActiveCell</b> property). When you assign an Appearance object to the <b>ActiveCellAppearance</b> property, the properties of that object will be applied to any cell that becomes the active cell. You can use the <b>ActiveCellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the active cell, for example:</p> 
            <p class="code">UltraWinGrid1.Override.ActiveCellAppearance.BackColor = vbBlue</p>
            <p class="body">Because you may want the active cell to look different at different levels of a hierarchical record set, <b>ActiveCellAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different active cell appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the active cell will use the grid-level setting of <b>ActiveCellAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasActiveCellAppearance">
            <summary>
            Returns true if an ActiveCellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellAppearance">
            <summary>
             Determines the formatting attributes that will be applied to the cells in a band or the grid.
            </summary>
            <remarks>
            <p class="body">The <b>CellAppearance</b> property is used to specify the appearance of all the cells in a band or the grid. When you assign an Appearance object to the <b>CellAppearance</b> property, the properties of that object will be applied to all the cells belonging to the object specified. You can use the <b>CellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the cells, for example:</p> 
            <p class="code">UltraWinGrid1.Override.CellAppearance.BackColor = vbYellow</p>
            <p class="body">Because you may want the cells to look different at different levels of a hierarchical record set, <b>CellAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different cell appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the cells of that band will use the grid-level setting of <b>CellAppearance</b>.</p>
            <p class="body">You can override the <b>CellAppearance</b> setting for specific cells by setting the <b>Appearance</b> property of the UltraGridCell object directly. The cell will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>CellAppearance</b> property of the band it occupies.</p>
            <p class="body">If any of the properties of the Appearance object specified for the <b>CellAppearance</b> property are set to default values, the properties from the Appearance object of the row containing the cell are used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellButtonAppearance">
            <summary>
             Determines the formatting attributes that will be applied to the buttons in cells in a band or the grid.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasCellButtonAppearance">
            <summary>
            Returns true if an CellButtonAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CardAreaAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the card area in a band or the grid.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasCardAreaAppearance">
            <summary>
            Returns true if an CardAreaAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ActiveCardCaptionAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the card Label in a band or the grid.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasActiveCardCaptionAppearance">
            <summary>
            Returns true if an ActiveCardCaptionAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CardCaptionAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the card's caption in a band or the grid.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasCardCaptionAppearance">
            <summary>
            Returns true if an CardCaptionAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectedCardCaptionAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the selected card's caption in a band or the grid.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasSelectedCardCaptionAppearance">
            <summary>
            Returns true if an SelectedCardCaptionAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MaskLiteralsAppearance">
            <summary>
            If the cell has MaskInput set or is using a UltraMaskedEdit control
            then this appearance will be applied to the literal chars while in
            edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasMaskLiteralsAppearance">
            <summary>
            Returns true if an CellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasCellAppearance">
            <summary>
            Returns true if an CellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.EditCellAppearance">
            <summary>
            Determines the Appearance object applied to the UltraGridCell object when it is in editing mode.
            </summary>
            <remarks>
            <p class="body">The <b>EditCellAppearance</b> property is used to specify the appearance of the cell that is in edit mode. (The <b>ActiveCell</b> property indicates which cell is currently active; a cell that is being edited is always the active cell. You can use the <b>IsInEditMode</b> property of the control to determine whether the cell is currently being edited.) When you assign an Appearance object to the <b>EditCellAppearance</b> property, the properties of that object will be applied to any cell that is in edit mode. You can use the <b>EditCellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the cell being edited, for example:</p>
            <p class="code">UltraWinGrid1.Override.EditCellAppearance.BackColor = vbRed</p>
            <p class="body">Because you may want the edit cell to look different at different levels of a hierarchical record set, <b>EditCellAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the edit cell will use the grid-level setting of <b>EditCellAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasEditCellAppearance">
            <summary>
            Returns true if an EditCellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HeaderAppearance">
            <summary>
            Returns or sets the Appearance object used to set the header formatting attributes.
            </summary>
            <remarks>
            <p class="body">The <b>HeaderAppearance</b> property is used to specify the appearance of all the headers in a band or the grid. When you assign an Appearance object to the <b>HeaderAppearance</b> property, the properties of that object will be applied to all the column or group headers associated with the object that you specified. You can use the <b>HeaderAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to headers, for example:</p> 
            <p class="code">UltraWinGrid1.Override.HeaderAppearance.BackColor = vbBlack</p>
            <p class="body">Because you may want the headers to look different at different levels of a hierarchical record set, <b>HeaderAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different header appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the headers of that band will use the grid-level setting of <b>HeaderAppearance</b>.</p>
            <p class="body">You can override the <b>HeaderAppearance</b> setting for specific headers by setting the <b>Appearance</b> property of the Header object directly. The header will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>HeaderAppearance</b> property of the band it occupies.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasHeaderAppearance">
            <summary>
            Returns true if a HeaderAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowAlternateAppearance">
            <summary>
            Returns or sets the Appearance object for alternate rows.
            </summary>
            <remarks>
            <p class="body">The <b>RowAlternateAppearance</b> property is used in conjunction with the <b>RowAppearance</b> property to apply different formatting options to odd and even rows in the grid. Even-numbered rows will use the Appearance specified by the <b>RowAlternateAppearance</b> property. If you do not specify a value for <b>RowAlternateAppearance</b>, the Appearance specified by <b>RowAlternateAppearance</b> will apply to all the rows in the band or the grid.</p>
            <p class="body">When you assign an Appearance object to the <b>RowAlternateAppearance</b> property, the properties of that object will be applied to the even-numbered rows belonging to the object specified. You can use the <b>RowAlternateAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the rows, for example:</p> 
            <p class="Code">UltraWinGrid1.Override.RowAppearance.ForeColor = vbRed</p>
            <p class="body">Because you may want the alternate rows to look different at different levels of a hierarchical record set, <b>RowAlternateAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different alternate row appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the alternate rows of that band will use the grid-level setting of <b>RowAlternateAppearance</b>.</p>
            <p class="body">You can override the <b>RowAlternateAppearance</b> setting for specific rows by setting the <b>Appearance</b> property of the UltraGridRow object directly. The row will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>RowAlternateAppearance</b> property of the band it occupies.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasRowAlternateAppearance">
            <summary>
            Returns true if a RowAlternateAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSelectorAppearance">
            <summary>
            Returns or sets the default Appearance object for the row selectors.
            </summary>
            <remarks>
            <p class="body">The <b>RowSelectorAppearance</b> property is used to specify the appearance of the row selectors. When you assign an Appearance object to the <b>RowSelectorAppearance</b> property, the properties of that object will be applied to the row selectors of all all rows in the band or the rid, depending on where the UltraGridOverride object is being used. You can use the <b>RowSelectorAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the active cell, for example:</p> 
            <p class="Code">UltraWinGrid1.Override.RowSelectorAppearance.ForeColor = vbBlack</p>
            <p class="body">Because you may want the row selectors to look different at different levels of a hierarchical record set, <b>RowSelectorAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different row selector appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the row selectors will use the grid-level setting of <b>RowSelectorAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasRowSelectorAppearance">
            <summary>
            Returns true if an RowSelectorAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSelectorHeaderAppearance">
            <summary>
            Returns or sets the default Appearance object for the row selector header.
            </summary>
            <remarks>
            <p class="body">The <b>RowSelectorHeaderAppearance</b> property is used to specify the appearance of the row selector header. When you assign an Appearance object to the <b>RowSelectorHeaderAppearance</b> property, the properties of that object will be applied to the row selector header for the band or all bands in the grid, depending on where the UltraGridOverride object is being used. You can use the <b>RowSelectorHeaderAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the active cell, for example:</p> 
            <p class="Code">UltraWinGrid1.Override.RowSelectorHeaderAppearance.ForeColor = vbBlack</p>
            <p class="body">Because you may want the row selector header to look different at different levels of a hierarchical record set, <b>RowSelectorHeaderAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different row selector header appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the row selector header will use the grid-level setting of <b>RowSelectorHeaderAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasRowSelectorHeaderAppearance">
            <summary>
            Returns true if an RowSelectorHeaderAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectedCellAppearance">
            <summary>
            Returns or sets the default Appearance object for a selected cell.
            </summary>
            <remarks>
            <p class="body">The <b>SelectedCellAppearance</b> property is used to specify the appearance of any selected cells (you can determine which cells are selected by using the <b>Cells</b> property of the Selected object). When you assign an Appearance object to the <b>SelectedCellAppearance</b> property, the properties of that object will be applied to any cell that becomes selected. You can use the <b>SelectedCellAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to selected cells, for example:</p> 
            <p class="code">UltraWinGrid1.Override.SelectedCellAppearance.BackColor = vbRed</p>
            <p class="body">Because you may want the selected cell(s) to look different at different levels of a hierarchical record set, <b>SelectedCellAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different selected cell appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the selected cell(s) will use the grid-level setting of <b>SelectedCellAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasSelectedCellAppearance">
            <summary>
            Returns true if a SelectedCellAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectedRowAppearance">
            <summary>
            Returns or sets the default Appearance object for a selected row.
            </summary>
            <remarks>
            <p class="body">The <b>SelectedRowAppearance</b> property is used to specify the appearance of any selected rows (you can determine which rows are selected by using the <b>Rows</b> property of the Selected object). When you assign an Appearance object to the <b>SelectedRowAppearance</b> property, the properties of that object will be applied to any row that becomes selected. You can use the <b>SelectedRowAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to selected rows, for example:</p> 
            <p class="code">UltraWinGrid1.Override.SelectedRowAppearance.BackColor = vbYellow</p>
            <p class="body">Because you may want the selected row(s) to look different at different levels of a hierarchical record set, <b>SelectedRowAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different selected row appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the selected row(s) will use the grid-level setting of <b>SelectedRowAppearance</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasSelectedRowAppearance">
            <summary>
            Returns true if an SelectedRowAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowAppearance">
            <summary>
            Returns or sets the Appearance object for non-alternate rows.
            </summary>
            <remarks>
            <p class="body">The <b>RowAppearance</b> property is used to specify the appearance of all the rows in a band or the grid. You can use this property in combination with <b>RowAlternateAppearance</b> to apply different formatting options to odd and even rows in the grid. Odd-numbered rows will use the Appearance specified by the <b>RowAppearance</b> property. If you do not specify a value for <b>RowAlternateAppearance</b>, the Appearance specified by <b>RowAppearance</b> will apply to all the rows in the band or the grid.</p>
            <p class="body">When you assign an Appearance object to the <b>RowAppearance</b> property, the properties of that object will be applied to all the applicable rows belonging to the object specified. You can use the <b>RowAppearance</b> property to examine or change any of the appearance-related properties that are currently assigned to the rows, for example:</p> 
            <p class="code">UltraWinGrid1.Override.RowAppearance.ForeColor = vbYellow</p>
            <p class="body">Because you may want the rows to look different at different levels of a hierarchical record set, <b>RowAppearance</b> is a property of the UltraGridOverride object. This makes it easy to specify different row appearances for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's override, and the top-level band will use the grid's override. Therefore, if the top-level band does not have its override set, the rows of that band will use the grid-level setting of <b>RowAppearance</b>.</p>
            <p class="body">You can override the <b>RowAppearance</b> setting for specific rows by setting the <b>Appearance</b> property of the UltraGridRow object directly. The row will always use the values of its own Appearance object before it will use the values inherited from the Appearance object specified by the <b>RowAppearance</b> property of the band it occupies.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasRowAppearance">
            <summary>
            Returns true if a RowAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowPreviewAppearance">
            <summary>
            Returns or sets the Appearance object that controls the formatting of row's AutoPreview area.
            </summary>
            <remarks>
            <p class="body">The <b>RowPreviewAppearance</b> property provides access to the Appearance object being used to control the AutoPreview area of the rows in a band or the grid. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            <p class="body">To determine the settings of the AutoPreview area for a given row, use the <b>ResolvePreviewAppearance</b> method of the UltraGridRow object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasRowPreviewAppearance">
            <summary>
            Returns true if an RowPreviewAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryFooterAppearance">
            <summary>
            Returns or sets the Appearance object that controls the formatting of summary footers.
            </summary>
            <remarks>
            <p class="body">The <b>SummaryFooterAppearance</b> property provides access to the Appearance object being used to control the summary footers in a band or the grid. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasSummaryFooterAppearance">
            <summary>
            Returns true if an SummaryFooterAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryFooterCaptionAppearance">
            <summary>
            Returns or sets the Appearance object that controls the formatting of captions over summary footers.
            </summary>
            <remarks>
            <p class="body">The <b>SummaryFooterCaptionAppearance</b> property provides access to the Appearance object being used to control the captions over summary footers in a band or the grid. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasSummaryFooterCaptionAppearance">
            <summary>
            Returns true if an SummaryFooterCaptionAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryValueAppearance">
            <summary>
            Returns or sets the Appearance object that controls the formatting of summaries in summary footers.
            </summary>
            <remarks>
            <p class="body">The <b>SummaryValueAppearance</b> property provides access to the Appearance object being used to control the summaries in summary footers for a band or the grid. The Appearance object has properties that control settings such as color, borders, font, transparency, etc. For more information on how to use properties that end in "Appearance", consult the topic for the <b>Appearance</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasSummaryValueAppearance">
            <summary>
            Returns true if an SummaryValueAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryFooterCaptionVisible">
            <summary>
            Set this property to False to hide the summary footer captions.
            </summary>
            <remarks>
            <p class="body">By default summary footers have captions. Use this property to hide them for a particular band by setting it on that band's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Override"/> object or on all the bands by setting the layout's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Override"/> object.</p>
            <p class="body"><see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.SummaryFooterCaption"/> dictates the text that appears in the summary footer caption.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.SummaryFooterCaption"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowAddNew">
            <summary>
            Returns or sets a value that determines whether the user is allowed to add a new row of data.
            </summary>
            <remarks>
            <p class="body">This property determines whether the user can add new rows to the data in the band or the grid controlled by the specified override. This property also controls the appearance of the buttons in the AddNew box. If <b>AllowAddNew</b> is set to 2 (AllowAddNewNo) for a particular band, that band's button will be disabled in the AddNew box. This prevents the user from adding new data to the specified band.</p>
            <p class="body">To provide for the rapid entry of new data, you can use the <b>TabRepeat</b> setting. This value makes it possible to enter multiple rows of data efficiently using only the keyboard. When the user enters data in the last cell of the AddNew row, pressing the Tab key will automatically add a new row and position data input to the first cell of that row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowColMoving">
            <summary>
            Returns or sets a value that determines whether the user is allowed to move columns.
            </summary>
            <remarks>
            <p class="body">The <b>AllowColMoving</b> property determines how columns can be moved by the user in the band or the grid controlled by the specified override. Depending on the setting of <b>AllowColMoving</b>, users can move columns anywhere within the band, only within a group, or not at all. In order for the user to be able to move columns, column headers must be visible. If <b>AllowColMoving</b> is set to allow column moving within the band or the group, column headers become draggable, and are used to re-arrange the order of the columns via the mouse.</p>
            <p class="body">This property does not affect the ability of users to swap columns using the column swapping dropdown found in the column header (controlled by the <b>AllowColSwapping</b> property) or on the ability of the user to move groups within the grid (controlled by the <b>AllowGroupMoving</b> property).</p>
            <p class="body"><img src="swapping.gif" width="505" height="305" alt="" border="0"></img></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowColSizing">
            <summary>
            Returns or sets a value that determines whether the user is allowed to size columns.
            </summary>
            <remarks>
            <p class="body">The <b>AllowColSizing</b> property specifies how column resizing will be handled in the band or the grid controlled by the specified override. The <b>AllowColSizing</b> property determines not only whether columns can be resized, but how resizing columns within one band will affect the width of columns in other bands. By default, columns are aligned across multiple bands and the change in their widths is synchronized; when you resize one column, the others resize also. (You can change how columns align across bands by using the <b>ColSpan</b> property.) When <b>AllowColSizing</b> is set to 2 (AllowColSizingSync) a column resized in one band will resize all columns in other bands that occupy the same position. When <b>AllowColSizing</b> is set to 3 (AllowColSizingFree) the width of columns in the specified band can be changed independently of the widths of columns in other bands.</p>
            <p class="body">Due to the nature of Row-Layout functionality, <see cref="F:Infragistics.Win.UltraWinGrid.AllowColSizing.Synchronized"/> is not supported. If the property is set to that value, then it will resolve as <see cref="F:Infragistics.Win.UltraWinGrid.AllowColSizing.Free"/>.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutCellSizing"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutLabelSizing"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowColSwapping">
            <summary>
            Returns or sets a value that determines whether the user is allowed to swap columns.
            </summary>
            <remarks>
            <p class="body">The <b>AllowColSwapping</b> property determines how columns can be swapped by the user in the band or the grid controlled by the specified override. Depending on the setting of <b>AllowColSwapping</b>, users can swap columns within the band, within a group, or not at all. In order for the user to be able to swap columns, column headers must be visible. If <b>AllowColSwapping</b> is set to allow column swapping within the band or the group, the column headers will display a dropdown interface that is used to select the column that will be swapped with the current one. The contents of the dropdown list are also affected by the setting of <b>AllowColSwapping</b>.</p>
            <p class="body">This property does not affect the ability of users to move columns using the column moving functionality of the column headers (controlled by the <b>AllowColMoving</b> property) or on the ability of the user to swap groups within the grid (controlled by the <b>AllowGroupSwapping</b> property).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowDelete">
            <summary>
            Returns or sets a value that determines whether the user is allowed to delete rows.
            </summary>
            <remarks>
            <p class="body">This property determines whether the user can delete rows of data from the band or the grid controlled by the specified override. It does not control the deletion of data within individual cells (field-level deletion) only the removal of complete records from the data source (record-level deletion).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowGroupMoving">
            <summary>
            Returns or sets a value that determines whether the user is allowed move groups.
            </summary>
            <remarks>
            <p class="body">The <b>AllowGroupMoving</b> property determines whether groups can be moved by the user in the band or the grid controlled by the specified override. Depending on the setting of <b>AllowGroupMoving</b>, users can move groups anywhere within the band, or not at all. In order for the user to be able to move groups, group headers must be visible. If <b>AllowGroupMoving</b> is set to allow group moving, group headers become draggable, and are used to re-arrange the order of the groups via the mouse.</p>
            <p class="body">This property does not affect the ability of users to swap groups using the group swapping dropdown found in the group header (controlled by the <b>AllowGroupSwapping</b> property) or on the ability of the user to move columns within the grid (controlled by the <b>AllowColMoving</b> property).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowGroupSwapping">
            <summary>
            Returns or sets a value that determines whether the user is allowed to swap groups.
            </summary>
            <remarks>
            <p class="body">The <b>AllowGroupSwapping</b> property determines whether groups can be swapped by the user in the band or the grid controlled by the specified override. Depending on the setting of <b>AllowGroupSwapping</b>, users can swap groups within the band, or not at all. In order for the user to be able to swap groups, group headers must be visible. If <b>AllowGroupSwapping</b> is set to allow group swapping, the group headers will display a dropdown interface that is used to select the group that will be swapped with the current one.</p>
            <p class="body">This property does not affect the ability of users to move groups using the group moving functionality of the group headers (controlled by the <b>AllowGroupMoving</b> property) or on the ability of the user to swap columns within the grid (controlled by the <b>AllowColSwapping</b> property).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowGroupBy">
            <summary>
            Determines whether columns from this band can be dragged into
            the GroupByBox to become GroupBy columns. If resolved to default
            will assume 'Yes'.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode">
            <summary>
            Determines whether row filtering is done at the band level or individual rows collection level.
            If the view style is horizontal, this is ignored and the RowFilterMode is always taken to be
            AllRowsInBand.
            </summary>
            <remarks>
            <p class="body">This property determines determines whether row filtering is done at the band level or individual rows collection level. If this property is set to <b>AllRowsInBand</b> then when the user selects a filter criteria all row islands in that band are applied that filer. If the property is set to <b>SiblingRowsOnly</b> then the filter criteria is only applied to the current row island.</p>
            <p class="body"><b>NOTE:</b> This property effects how you specify filter criteria in code. If this property is set to <b>AllRowsInBand</b> then you must use UltraGridBand's ColumnFilters property (<see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/>). If this property is set to <b>SiblingRowsOnly</b> then you must use the RowsCollection's ColumnFilters (<see cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/>) property.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowFiltering"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsFilteredOut"/> <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredInNonGroupByRows"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowFiltering">
            <summary>
            Determines whether row filtering will be enabled on column headers in this band.
            </summary>
            <remarks>
            <p class="body">This property determines whether the user is allowed to filter rows. This property does not dictate whether you can specify filter criteria in code.</p>
            <p class="body">You can specify filter criteria in code via <see cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> or <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/> property depending on the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> property setting.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowsCollection.ColumnFilters"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.ColumnFilters"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.IsFilteredOut"/> <seealso cref="M:Infragistics.Win.UltraWinGrid.RowsCollection.GetFilteredInNonGroupByRows"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterAction">
            <summary>
            Specifies the action that the UltraGrid should take on rows that are filtered out.
            </summary>
            <remarks>
            <p class="body"><b>RowFilterAction</b> specifies what action is taken on rows that are filtered out. <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.AppearancesOnly"/> keeps the rows that are filtered out visible. <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.DisableFilteredOutRows"/> keeps the filtered out rows visible however it disables them so the user can't modify their contents. <see cref="F:Infragistics.Win.UltraWinGrid.RowFilterAction.HideFilteredOutRows"/> hides the rows that are filtered out.</p>
            <p class="body">When there are active row filters, FilteredOutRowAppearance and FilteredOutCellAppearance are applied to filtered out rows and their cells and FilteredInRowAppearance and FilteredInCellAppearance are applied to filtered in rows and their cells.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowFiltering"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutRowAppearance">
            <summary>
            Determines the formatting attributes that will be applied to rows that are filtered out.
            </summary>
            <remarks>
            <p class="body">When there are active row filters, <b>FilteredOutRowAppearance</b> applies to rows for which the filter conditions evaluate to false.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterAction"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to cells of rows that are filtered out.
            </summary>
            <remarks>
            <p class="body">When there are active row filters, <b>FilteredOutCellAppearance</b> applies to cells of rows for which the filter conditions evaluate to false.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterAction"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInRowAppearance">
            <summary>
            Determines the formatting attributes that will be applied to rows that are filtered in (not filtered out).
            </summary>
            <remarks>
            <p class="body">When there are active row filters, <b>FilteredInRowAppearance</b> applies to rows for which the filter conditions evaluate to true.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterAction"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to cells of rows that are filtered in (not filtered out).
            </summary>
            <remarks>
            <p class="body">When there are active row filters, <b>FilteredInCellAppearance</b> applies to cells of rows for which the filter conditions evaluate to true.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredInRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FilteredOutCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowFilterAction"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowSummaries">
            <summary>
            Determines whether row sumamries will be enabled on column headers in this band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByColumnsHidden">
            <summary>
            Determines if groupby columns will be displayed. If this resolves
            to 'default' then groupby columns are hidden.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.HiddenWhenGroupBy"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowUpdate">
            <summary>
            Returns or sets a value that determines whether the user is allowed to update the data.
            </summary>
            <remarks>
            <p class="body">The <b>AllowUpdate</b> property determines whether to permit changes to the data displayed in the band or the grid controlled by the specified override. All data entry functionality is disabled when <b>AllowUpdate</b> is set to False. Cells may be selected and placed in edit mode, but their contents cannot be edited. Users can still view data, select all or part of it and copy it to the clipboard. They can also re-arrange the layout of the grid by moving and resizing columns, groups, rows, etc.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleRow">
            <summary>
            Returns or sets a value that determines the border style of rows.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of a row in the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleSummaryFooter">
            <summary>
            Returns or sets a value that determines the border style of summary footers.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of summary footers in the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleSummaryValue">
            <summary>
            Returns or sets a value that determines the border style of summaries in summary footers.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of summaries in summary footers for the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleSummaryFooterCaption">
            <summary>
            Returns or sets a value that determines the border style of summary footer caption.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of summary footer caption for the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.SummaryFooterCaption"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleCell">
            <summary>
            Returns or sets a value that determines the border style of cells.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of cells in the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleCardArea">
            <summary>
            Returns or sets a value that determines the border style of Cards.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of cards in the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleHeader">
            <summary>
            An integer expression or constant that determines the appearance of the border of a header.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of a column or group header in the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellClickAction">
            <summary>
            Returns or sets a value that indicates what will occur when a cell is clicked.
            </summary>
            <remarks>
            <p class="body">The <b>CellClickAction</b> property specifies what will occur when the user navigates through the grid by clicking on cells in the band or the grid controlled by the specified override. You can choose whether cells that are clicked will put the cell into edit mode or select the cell or its row. Depending on your application, you may want to enable the user to edit any cell just by clicking on it, or you may want to require a separate action to trigger cell editing, such as double-clicking or a keystroke combination. Similarly, you can choose whether cells should be individually selectable, or if selecting the row is a sufficient response to clicking on a cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellMultiLine">
            <summary>
            Determines if the cell's data should be displayed in a multi-line format.
            </summary>
            <remarks>
            <p class="body">This property controls the display of multiple lines of text in edit cells in the band or the grid controlled by the specified override. When True, text will wrap in the area of the cell. If the <b>RowSizing</b> property is set to automatically resize the row, the row will expand in height until all lines of text are displayed (or the number of lines specified by the <b>RowSizingAutoMaxLines</b> property is reached).</p>
            <p class="body">The <b>CellMultiLine</b> property does not pertain to multi-line editing, only display. Also, you should note that setting a cell to multi-line mode will disable data masking. Only single-line cells can be masked (using the <b>MaskInput</b> and <b>MaskDisplayMode</b> properties.)</p>
            <p class="body"><div align="center"><img src="multiline.gif" width="96" height="63" alt="" border="0"></img></div></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellPadding">
            <summary>
            Returns or sets the amount of spacing, in pixels, between the cell's border and the cell's contents.
            </summary>
            <remarks>
            <p class="body">The <b>CellPadding</b> property determines the amount of space between the edges of a cell and the text of the cell in the band or the grid controlled by the specified override. It is similar to an internal margin for the cell. If you want to control the amount of space that surrounds the cell itself, use the <b>CellSpacing</b> property.</p>
            <p class="body">Setting <b>CellPadding</b> to a value of -1 will cause it to use the value from the next highest object in the override hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellSpacing">
            <summary>
            Returns or sets the amount of spacing, in pixels, between cells. Also determines the spacing between the cell's border and the row's border.
            </summary>
            <remarks>
            <p class="body">The <b>CellSpacing</b> property determines the amount of empty space in a row that will surround each cell in the band or the grid controlled by the specified override. Spacing between cells allows the background of the underlying row to become visible, along with any color, transparency or background picture that was assigned to the UltraGridRow object. Cell spacing adds space equally on all sides of the cell - top, bottom, left and right.</p>
            <p class="body">Setting <b>CellSpacing</b> to a value of -1 will cause it to use the value from the next highest object in the override hierarchy. </p>
            <p class="body">This property does not have any effect on the inside of the cell. To control the cell's interior spacing, use the <b>CellPadding</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CardSpacing">
            <summary>
            Returns or sets the amount of spacing, in pixels, between cards. 
            </summary>
            <remarks>
            <p class="body">The <b>CardSpacing</b> property determines the amount of empty space </p>
            <p class="body">Setting <b>CardSpacing</b> to a value of -1 will cause it to use the value from the next highest object in the override hierarchy. </p>
            <p class="body">This property does not have any effect on the inside of the card. To control the card's interior spacing, use the <b>CardSpacing</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DefaultColWidth">
            <summary>
            Returns or sets a value representing the default column width.
            </summary>
            <remarks>
            <p class="body">You can use this property to specify the width that columns will start with when the band or the grid controlled by the specified override is first displayed. Setting this property to 0 will cause the control to use the largest font size specified for the column to determine the column's width. Pictures are not taken into account by the control when calculating the default column width, so large pictures in cells may be clipped when they are displayed.</p>
            <p class="body">Setting <b>DefaultColWidth</b> to a value of -1 will cause it to use the value from the next highest object in the override hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DefaultRowHeight">
            <summary>
            Returns or sets a value representing the default row height.
            </summary>
            <remarks>
            <p class="body">You can use this property to specify the height that rows will start with when the band or the grid controlled by the specified override is first displayed. Setting this property to 0 will cause the control to use the largest font size specified for the row to determine the row's height. Pictures are not taken into account by the control when calculating the default row height, so large pictures in cells may be clipped when they are displayed.</p>
            <p class="body">Setting <b>DefaultRowHeight</b> to a value of -1 will cause it to use the value from the next highest object in the override hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ExpansionIndicator">
            <summary>
            Returns or sets a value that determines whether row expansion (plus/minus) indicators are displayed.
            </summary>
            <remarks>
            <p class="body">This property can be used to show expansion indicators for a row that has no children or hide them for a row that does.</p>
            <p class="body">The <b>Expanded</b> property can be used to indicate whether the expansion indicator appears expanded (minus) or collapsed (plus).</p>
            <p class="body">The <b>BeforeRowExpanded</b> and <b>BeforeRowCollapsed</b> events are generated when the user expands or collapses a row by clicking an expansion indicator.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HeaderClickAction">
            <summary>
            Returns or sets a value that determines what will occur when the user clicks on a header.
            </summary>
            <remarks>
            <p class="body">Setting <b>HeaderClickAction</b> to enable column sorting disables selection via group headers. Group headers cannot be used for sorting; the <b>HeaderClickAction.SortSingle</b> and <b>HeaderClickAction.SortMulti</b> settings only affect column headers.</p>
            <p class="body">When this property is set to <b>HeaderClickAction.SortMulti</b>, the user can use the SHIFT key in combination with the mouse to select multiple columns for sorting. The order in which columns are selected is significant, determining the order in which the data will be sorted.</p>
            <p class="body"><img src="headerclickaction.gif" width="510" height="325" alt="" border="0"></img></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MaxSelectedCells">
            <summary>
            Determines the maximum number of cells that a user can select at any one time.
            </summary>
            <remarks>
            <p class="body">The <b>MaxSelectedCells</b> property determines the maximum number of cells that can be selected at any one time in the band or the grid controlled by the specified override. This is an UltraGridOverride object property that can apply at either the grid level or the band level. When set at the band level, it determines how many cells may be simultaneously selected within the band. When applied at the grid level, it determines how many cells may be simultaneously selected in the entire control. The grid-level setting will override any band-level settings.</p>
            <p class="body">Setting <b>MaxSelectedCells</b> to 0 means there is no limit to the number of cells that may be selected simultaneously. Setting this property to a value of -1 will cause it to use the value from the next highest object in the override hierarchy.</p>
            <p class="body">This property operates independently of any column or row scrolling regions.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MaxSelectedRows">
            <summary>
            Determines the maximum number of rows that a user can select at any one time.
            </summary>
            <remarks>
            <p class="body">The <b>MaxSelectedRows</b> property determines the maximum number of rows that can be selected at any one time in the band or the grid controlled by the specified override. This is an UltraGridOverride object property that can apply at either the grid level or the band level. When set at the band level, it determines how many rows may be simultaneously selected within the band. When applied at the grid level, it determines how many rows may be simultaneously selected in the entire control. The grid-level setting will override any band-level settings.</p>
            <p class="body">Setting <b>MaxSelectedRows</b> to 0 means there is no limit to the number of rows that may be selected simultaneously. Setting this property to a value of -1 will cause it to use the value from the next highest object in the override hierarchy.</p>
            <p class="body">This property operates independently of any row scrolling regions.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.NullText">
            <summary>
            Returns or sets the string displayed in cells with null values.
            </summary>
            <remarks>
            You can use this property to customize the text displayed to the user when a null value is present in a cell. For example, you may want the cell to display "(empty)" or "no value". The default setting for this property is "null".
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSelectors">
            <summary>
            Returns or sets a value that determines whether row selectors will be displayed.
            </summary>
            <remarks>
            <p class="body">Row selectors are the part of the grid interface that appears at the left edge of each row. Row selectors provide information about the rows (which row is currently active, which rows have uncommitted edits) and you can click on a row selector to select the entire row at once. You can choose to display record selectors or not, either for the whole grid or on a band-by-band basis. The <b>RowSelectors</b> property specifies whether row selectors will be displayed in the band or the grid controlled by the specified override.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSizing">
            <summary>
            Returns or sets a value that determines the type of row sizing.
            </summary>
            <remarks>
            <p class="body">The <b>RowSizing</b> property specifies whether the user can resize rows using the mouse in the band or the grid controlled by the specified override and, if they can, how that resizing is accomplished. The grid can also resize rows automatically, based on the amount of data present in the cells that make up the row. If one cell contains a large amount of text, the row can be resized to accommodate all the text, or a particular number of lines of text, provided the cell is capable of displaying multiple lines of text. The <b>RowSizing</b> property also determines whether rows are resized independently of one another, or whether their heights are synchronized.</p>
            <p class="body">When using one of the auto-sizing settings, the size of each row is determined by the number of lines of text required to display the contents of a cell. The cell in the row that displays the most lines of text determines the size of the entire row. The <b>CellMultiLine</b> property is used to specify whether the text in a cell will wrap to multiple lines. You can limit the number of lines used by setting the <b>RowSizingAutoMaxLines</b> property.</p>
            <p class="body">Note: Certain modes of RowSizing are not avaiable in Row-Layout mode. <see cref="F:Infragistics.Win.UltraWinGrid.RowSizing.AutoFree"/> and <see cref="F:Infragistics.Win.UltraWinGrid.RowSizing.Free"/> resolve to <see cref="F:Infragistics.Win.UltraWinGrid.RowSizing.Sychronized"/> and <see cref="F:Infragistics.Win.UltraWinGrid.RowSizing.AutoFixed"/> resolves to <see cref="F:Infragistics.Win.UltraWinGrid.RowSizing.Fixed"/> in Row-Layout mode.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSizingArea">
            <summary>
            Returns or sets a value that determines which part of the grid's interface may be used to resize rows.
            </summary>
            <remarks>
            <p class="body">If row resizing is enabled (as determined by the <b>RowSizing</b> property) the user can resize rows using the mouse. Resizing is always accomplished by clicking on the bottom edge of the row and dragging the mouse. The <b>RowSizingArea</b> property specifies which part of the row responds to the mouse pointer to initiate resizing of the row. You can choose to have just the record selectors, just the borders of the data area, or both be active forrow resizing. When the mouse pointer passes over the active area of the row, the cursor changes to a resizing cursor.</p>
            <p class="body">When setting a value for this property, you may want to consider whether the record selectors will remain visible at all times as your application runs, or whether they can be scrolled out of view, and what effect this will have on the ability of users to resize rows. Also, you will need to determine if having the row borders in the data area active for row resizing will interfere with other mouse operations in the grid and distract the user.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingBefore">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered before a row (between the top of the row and the bottom edge of the above object.)
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSpacingBefore</b> property to specify the space that precedes a row in the band or the grid controlled by the specified override. Space between rows allows the background area of the grid to show through, and can be useful when you have specified a picture or a texture for the background. To control the space that follows a row, use the <b>RowSpacingAfter</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingAfter">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered after a row (between the bottom of the row and the top edge of the following object.)
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSpacingAfter</b> property to specify the space that follows a row in the band or the grid controlled by the specified override. Space between rows allows the background area of the grid to show through, and can be useful when you have specified a picture or a texture for the background. To control the space that precedes a row, use the <b>RowSpacingBefore</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowSpacingBefore">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered before a row (between the top of the row and the bottom edge of the above object.)
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSpacingBefore</b> property to specify the space that precedes a row in the band or the grid controlled by the specified override. Space between rows allows the background area of the grid to show through, and can be useful when you have specified a picture or a texture for the background. To control the space that follows a row, use the <b>RowSpacingAfter</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowSpacingAfter">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered after a row (between the bottom of the row and the top edge of the following object.)
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSpacingAfter</b> property to specify the space that follows a row in the band or the grid controlled by the specified override. Space between rows allows the background area of the grid to show through, and can be useful when you have specified a picture or a texture for the background. To control the space that precedes a row, use the <b>RowSpacingBefore</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSizingAutoMaxLines">
            <summary>
            Returns or sets the maximum number of lines a row will display when Auto-Sizing is enabled.
            </summary>
            <remarks>
            <p class="body">You can use the <b>RowSizing</b> property to specify that the control should automatically adjust the height of rows to accommodate multiple lines of text in the band or the grid controlled by the specified override. If a row contains one or more cells with the <b>CellMultiLine</b> property set to display more than one line of text, the row can resize itself so that all the text in the cell(s) is visible. Depending on the setting of <b>RowSizing</b>, just the row containing a multiline cell may be resized, or all the rows in the band or grid may be resized to match the one containing the multiline cell.</p>
            <p class="body">The <b>RowSizingAutoMaxLines</b> property is used to limit amount of row resizing the control will use to accommodate multiline cells. If one or more rows are being resized to display multiple lines of text, their height will only be increased enough to display the number of lines of text specified by this property. Use this property when you have rows that are being automatically resized and you want to display memo or long text fields in a multiline cell, but do not want rows growing too tall and disrupting the overall layout of the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeCell">
            <summary>
            Returns or sets a value that determines the cell selection type.
            </summary>
            <remarks>
            <p class="body">This property is used to specify which selection type will be used for the cells in the band or the grid controlled by the specified override. You can choose to allow the user to have multiple cells selected, only one cell at a time selected, or to disallow the selection of cells.</p>
            <p class="body">You can use the <b>SelectTypeCol</b> and <b>SelectTypeRow</b> properties to specify the way in which columns and rows may be selected.</p>
            <p class="body">Because you may want to enable different types of selection at different levels of a hierarchical record set, <b>SelectTypeCell</b> is a property of the UltraGridOverride object. This makes it easy to specify different selection options for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's setting for <b>SelectTypeCell</b>, and the top-level band will use the grid's setting.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeCol">
            <summary>
            Returns or sets a value that determines the column selection type.
            </summary>
            <remarks>
            <p class="body">This property is used to specify which selection type will be used for the columns in the band or the grid controlled by the specified override. You can choose to allow the user to have multiple columns selected, only one column at a time selected, or to disallow the selection of columns.</p>
            <p class="body">You can use the <b>SelectTypeCell</b> and <b>SelectTypeRow</b> properties to specify the way in which cells and rows may be selected.</p>
            <p class="body">Because you may want to enable different types of selection at different levels of a hierarchical record set, <b>SelectTypeCol</b> is a property of the UltraGridOverride object. This makes it easy to specify different selection options for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's setting for <b>SelectTypeCol</b>, and the top-level band will use the grid's setting.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeRow">
            <summary>
            Returns or sets a value that determines the row selection type.
            </summary>
            <remarks>
            <p class="body">This property is used to specify which selection type will be used for the rows in the band or the grid controlled by the specified override. You can choose to allow the user to have multiple rows selected, only one row at a time selected, or to disallow the selection of rows.</p>
            <p class="body">You can use the <b>SelectTypeCol</b> and <b>SelectTypeCell</b> properties to specify the way in which columns and cells may be selected.</p>
            <p class="body">Because you may want to enable different types of selection at different levels of a hierarchical record set, <b>SelectTypeRow</b> is a property of the UltraGridOverride object. This makes it easy to specify different selection options for each band by assigning each UltraGridBand object its own UltraGridOverride object. If a band does not have an override assigned to it, the control will use the override at the next higher level of the override hierarchy to determine the properties for that band. In other words, any band without an override will use its parent band's setting for <b>SelectTypeRow</b>, and the top-level band will use the grid's setting.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TipStyleCell">
            <summary>
            Returns or sets a value that determines whether a tip will be displayed when the mouse pauses over a cell.
            </summary>
            <remarks>
            <p class="body">This property determines whether the cells of the band or the grid controlled by the specified override will be capable of displaying pop-up tips. Cell tips display the contents of the cell, and generally only appear when the cell's area is not large enough to display all the data it contains, and the mouse has come to rest over the cell for a period of time (as specified by the <b>TipDelay</b> property).</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridCell.ToolTipText"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TipStyleRowConnector">
            <summary>
            Returns or sets a value that determines whether a tip will be displayed when the mouse pauses over a row connector line.
            </summary>
            <remarks>
            <p class="body">This property determines whether the lines connecting the rows of the band or the grid controlled by the specified override will be capable of displaying pop-up tips. When using hierarchical recordsets, often the parent record of a band will be out of view, above the top or below the bottom of the control. Row connector tips are a convenient way to discover which record is the parent of the data currently being displayed without having to scroll the control.</p>
            <p class="body">Row connector tips display data from a record that is attached to the connector line when the mouse has come to rest over the line for a period of time (as specified by the <b>TipDelay</b> property). The tip displays the name and value of one field in the record, as determined by the <b>ScrollTipField</b> property of the band in which the line is located.</p>
            <p class="body">When the mouse pointer passes over a connector line, it changes to a special connector line cursor that indicates the direction of the record whose data is being displayed in the pop-up tip. Normally, this cursor is an upward-pointing double arrow and the pop-up tip displays data from the previous record connected to line. But if the CTRL key on the keyboard is depressed, the mouse pointer changes to a downward-pointing double arrow and the pop-up tip displays data from the following record connected to line.</p>
            <p class="body"><img src="tipstyleconnector animation.gif" width="232" height="147" alt="" border="0"></img></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TipStyleScroll">
            <summary>
            Returns or sets a value that determines whether a tip displayed over the scrollbar when the scroll bar thumb is dragged.
            </summary>
            <remarks>
            <p class="body">This property determines whether the scrollbar of the band or the grid controlled by the specified override will be capable of displaying pop-up tips. When you drag the scrollbar thumb to scroll through a recordset, the data is not displayed in the grid until you release the mouse button to reposition the thumb. When <b>TipStyleScroll</b> is set to display scroll tips, a pop-up tip will appear over the thumb indicating which record will appear at the top of the grid when the scrollbar is released. The <b>ScrollTipField</b> property is used to specify which field from the data record will be displayed in the pop-up tip.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByColumnAppearance">
            <summary>
            Returns the default GroupByColumnAppearance
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasGroupByColumnAppearance">
            <summary>
            Returns true if an GroupByColumnAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByColumnHeaderAppearance">
            <summary>
            Returns the default GroupByColumnHeaderAppearance
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasGroupByColumnHeaderAppearance">
            <summary>
            Returns true if an GroupByColumnHeaderAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowAppearance">
            <summary>
            Returns the default GroupByRowAppearance
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.HasGroupByRowAppearance">
            <summary>
            Returns true if an GroupByRowAppearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowPadding">
            <summary>
            Specifies padding in pixels used around the GroupByRow's description. If set to -1 then 1 will be used. Default is -1.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.GroupByRowDescriptionMask">
            <summary>
            A string that determines what text be shown in groupby rows. It can include 
            special substitution strings (e.g. to specify child row count).
            </summary>
            <remarks>The default string is "[caption] : [value] ([count] [count,items,item,items])". 
            <p></p>
            <p>Note: the replaceable mask items are:</p>
            <p></p>
            <p>[caption] replaced with the groupby column headers caption.</p>
            <p>[value] replaced by the common cell value for this group by.</p>
            <p>[count] - the number of visible child rows.</p> 
            <p>[count,x,y,z] - If count is 0 will substitute the x string, or if count is 1 will substitute the y string otherwise will substitute the z string. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeGroupByRow">
            <summary>
            Determines how and if GroupByRows can be selected. Default is resolved to Extended.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSelectorHeaderStyle">
            <summary>
            Returns or sets a value that determines the style of the row selector header area.
            </summary>
            <remarks>
            <p class="body">The RowSelectorHeaderStyle determines the look and position of the area above the Row Selectors if Row Selectors are visible.</p>
            <p class="body">If the RowSelectorHeaderStyle is set to <b>None</b> there will be no visible element assigned to this area and the header of the first column will be aligned with the left edge of the column.</p>
            <p class="body">If the RowSelectorHeaderStyle is set to <b>ExtendFirstColumn</b> the header of the first column will extend to the left over the area above the Row Selectors.</p>
            <p class="body">If the RowSelectorHeaderStyle is set to <b>SeparateElement</b> a RowSelectorHeaderUIElement will be positioned above the Row Selectors and the header of the first column will be aligned with the left edge of the column.</p>
            <p class="body">The Default value is ExtendFirstColumn.</p>
            <p class="body">If the RowSelectorHeaderStyle is set to SeparateElement the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSelectorHeaderAppearance"/> object can be used to set the appearance of the RowSelectorHeader.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSelectorWidth">
            <summary>
            Gets or sets the row selector widths. Default value is 0 which means a reasonable default width will be used for row selectors.
            </summary>
            <remarks>
            <p>RowSelectorWidth proeprty can be used to control the widths of the row selectors. Default value is 0 which means a reasonable default width will be used for row selectors.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleRowSelector">
            <summary>
            Gets or sets the border style of row selectors.
            </summary>
            <remarks>
            <p>You can use this property to change the border style of the row selectors. If this preoprty is set to Default, then <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleHeader"/> is used for the row selectors.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutCellSizing">
            <summary>
            Indicates whether the user is allowed to resize cells in the row-layout mode.
            </summary>
            <remarks>
            <p class="body">You can set <see cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/> and <see cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/> for individual coumns to control per column resizing behavior.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutLabelSizing"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutLabelSizing">
            <summary>
            Indicates whether the user is allowed to resize cell labels (column labels associated with the cells) in the row-layout mode.
            </summary>
            <remarks>
            <p class="body">You can set <see cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/> and <see cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/> for individual coumns to control per column resizing behavior.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutCellSizing"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ColumnAutoSizeMode">
            <summary>
            Specifies column autosizing mode. If <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowColSizing"/> is set to None, then this is ignored.
            </summary>
            <remarks>
            <p class="body">
            When set the None, the user is not allowed to auto resize a column. If set to VisibleRows, then the column is resized based on the data in the visible rows. If set to SiblingRowsOnly, then the column is autoresized based on data in all the sibling rows. If set to AllRowsInBand, then the column is auto resized based on data in all rows in the band.
            </p>
            <p class="body">Note that this property determines if and how columns are auto-resized when the user auto-resizes one through the user interface by double-clicking on the right edge of the column header. It does not affect how the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridColumn.PerformAutoResize(System.Int32)"/> method works. When calling that method, you will need to explicitly specify the ColumnAutoSizeMode parameter.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.CellDisplayStyle">
            <summary>
            CellDisplayStyle specifies how the cells get rendered. You can use this property to speed up rendering of cells by setting it to <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FormattedText"/> or <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.PlainText"/>. Default is resolved to <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FullEditorDisplay"/>.
            </summary>
            <remarks>
            <p class="body"><b>CellDisplayStyle</b> specifies how the cells get rendered. You can use this property to speed up rendering of cells by setting it to <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FormattedText"/> or <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.PlainText"/>. Default is resolved to <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FullEditorDisplay"/>.</p>
            <p class="body"><see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FormattedText"/> draws the formatted cell value in the cells. <see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.PlainText"/> draws the cell value converted to text withought applying any formatting. It simply calls ToString on the cell value and draws the resulting text in the cell.<see cref="F:Infragistics.Win.UltraWinGrid.CellDisplayStyle.FullEditorDisplay"/> embedds an embeddable ui element which draws the cell value as well as draws any edit elements like buttons. This is a bit more performance intensive than <b>PlainText</b> and <b>FormattedText</b>. The advantage of using <b>FullEditorDisplay</b> which is the default is that any edit elements that the editor may render in cells do not get rendered until the cell enters the edit mode.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator">
            <summary>
            Specifies whether the user is allowed to fix or unfix headers in a band or a grid. NOTE: This property is ignored in Row-Layout mode as headers can't be fixed in Row-Layout mode.
            </summary>
            <remarks>
            <p class="body">FixedHeaderIndicator property specifies whether the user is allowed to fix or unfix headers.</p>
            <p class="body">NOTE: This property is ignored in Row-Layout mode as headers can't be fixed in Row-Layout mode.</p>
            <p><seealso cref="T:Infragistics.Win.UltraWinGrid.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.FixedHeaderIndicator"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedCellSeparatorColor">
            <summary>
            Specifies the color of the separator line that separates the cells associated with fixed headers and cells associated with non-fixed headers.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedCellAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderAppearance">
            <summary>
            Determines the formatting attributes that will be applied to fixed headers in a band or the grid.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to cells associated with fixed headers in a band or the grid.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.UseFixedHeaders"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FixedHeaderIndicator"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Fixed"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TemplateAddRowCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to cells of template add-rows.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AddRowCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to cells of add-rows.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TemplateAddRowAppearance">
            <summary>
            Determines the formatting attributes that will be applied to template add-rows.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AddRowAppearance">
            <summary>
            Determines the formatting attributes that will be applied add-rows.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TemplateAddRowSpacingBefore">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered before a template add-row (between the top of the row and the bottom edge of the above object.)
            </summary>
            <remarks>
            <p class="body">TemplateAddRowSpacingBefore is set to default, <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingBefore"/> will be used.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TemplateAddRowSpacingAfter"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingBefore"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingAfter"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TemplateAddRowSpacingAfter">
            <summary>
            Returns or sets the amount of spacing (in pixels) rendered after a template add-row (between the bottom of the row and the top edge of the following object.)
            </summary>
            <remarks>
            <p class="body">TemplateAddRowSpacingAfter is set to default, <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingAfter"/> will be used.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.TemplateAddRowSpacingBefore"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingBefore"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.RowSpacingAfter"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.BorderStyleTemplateAddRow">
            <summary>
            Returns or sets a value that determines the border style of template add-rows.
            </summary>
            <remarks>
            <p class="body">This property is used to set the border appearance of template add-rows in the band or the grid controlled by the specified override. You can choose from several line styles. Note that not all styles are available on all operating systems. If the version of the OS that is running your program does not support a particular line style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MinRowHeight">
            <summary>
            Specifies the minimum row height. By default the row heights are restricted by the font size and any drop down buttons that the cell may have. You can use this property to prevent the UltraGrid from imposing such a limit so you can programmatically set the row height to a smaller value than what UltraGrid calculates the minimum row height to be. Default value is -1. Setting this property to 0 will throw an exception since minimum row height has to be at least 1.
            </summary>
            <remarks>
            <p class="body"><b>MinRowHeight</b> specifies the minimum row height. By default the row heights are restricted by the font size and any drop down buttons that the cell may have. You can use this property to prevent the UltraGrid from imposing such a limit so you can programmatically set the row height to a smaller value than what UltraGrid calculates the minimum row height to be. UltraGrid will use this as the minimum row height. Setting this property to 0 will throw an exception since minimum row height has to be at least 1.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShowInkButton">
            <summary>
            Specifies whether ink editor buttons get shown in cells.
            </summary>
            <remarks>
            <p class="body">You can use <b>ShowInkButton</b> property to explicitly turn on or turn off inck buttons.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ShowCalculatingText">
            <summary>
            Specifies whether cells or summaries in the grid will display "#Calculating" when calculating with an UltraCalcManager.
            </summary>
            <remarks>
            <p class="body">You can use <b>ShowCalculatingText</b> property to explicitly turn on or turn off the display of the text during calculations.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FormulaErrorAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the cells containing formula errors.
            </summary>
            <remarks>
            <p class="body">The <b>FormulaErrorAppearance</b> property is used to specify the appearance of the cells with formula errors.</p> 
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaErrorAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Formula"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.Formula"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FormulaRowIndexSource">
            <summary>
            Specifies which row index to use in formula calculations.
            </summary>
            <remarks>
            <p class="body">FormulaRowIndexSource specifies which rows to use for calculations, all rows or just the visible rows. It also specifies which index to use in relative refereneces. <b>ListIndex</b> and <b>Index</b> specify that all rows should be used in calculations. <b>VisibleIndex</b> specifies that only the visible rows should be used for calculations. The summaries will be based on either all rows or just the visible ones depending on this property setting. Also if a column has a formula containing relative reference (like [column1(-1)] which references the column1 cell in the previous row), this property specifies whether to use list index, row index or the visible index for finding the relative cell. List index is the index of the data row in the underlying data list. It corrensponds to the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.ListIndex"/> value of the rows. Index is the UltraGridRow's index in its parent collection. It corresponds to <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Index"/> property of the rows. VisibleIndex, as the name suggests is the number of rows visible before the current row in the associated rows collection. Essentially it emulates IndexOf operation on a collection that contains only the visible rows (ones that are not filtered out or explicitly hidden). It corresponds to the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.VisibleIndex"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the merged cells.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellContentArea"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellStyle"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellContentArea">
            <summary>
            Specifies whether to position the contents of a merged cell in the entire area of the merged cell or just the visible area of the merged cell. Default is resolved to <b>VirtualRect</b>.
            </summary>
            <remarks>
            <b class="body">Specifies whether to position the contents of a merged cell in the entire area of the merged cell or just the visible area of the merged cell. Default is resolved to <b>VirtualRect</b>.</b>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellStyle">
            <summary>
            Specifies if and how cell merging is performed. Default is resolved to Never.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellContentArea"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.MergedCellAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.ColumnSizingArea">
            <summary>
            Returns or sets a value that determines which part of the grid's interface may be used to resize columns.
            </summary>
            <remarks>
            <p class="body">If column resizing is enabled (as determined by the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowColSizing"/> property) the user can resize columns using the mouse. Resizing is always accomplished by clicking on the right edge of the column and dragging the mouse. The <b>ColumnSizingArea</b> property specifies which part of the column responds to the mouse pointer to initiate resizing of the column. You can choose to have just the column headers, just the borders of the column cells, or both be active for column resizing. When the mouse pointer passes over the active area of the column, the cursor changes to a resizing cursor.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo">
            <summary>
            Specifies whether to make use of IDataErrorInfo interface implemented on the underlying row objects to display error info in rows and cells.
            </summary>
            <remarks>
            <p class="body">Specifies whether to make use of IDataErrorInfo interface implemented on the underlying row objects to display error info in rows and cells.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowSelectorAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the rows with data errors. A row is considered to have a data error if it's underlying list object implements IDataErrorInfo interface and querying that IDataErrorInfo indicates that the row has errors.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowSelectorAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorCellAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the cells with data errors. A cell is considered to have a data error if the associated row's underlying list object implements IDataErrorInfo interface and querying that IDataErrorInfo indicates that the cell has errors.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowSelectorAppearance"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowSelectorAppearance">
            <summary>
            Determines the formatting attributes that will be applied to the row selectors of rows with data errors. A row is considered to have a data error if it's underlying list object implements IDataErrorInfo interface and querying that IDataErrorInfo indicates that the row has errors.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorCellAppearance"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.DataErrorRowAppearance"/></p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridOverride.UltraGridOverrideTypeConverter">
            <summary>
            UltraGridOverride type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridOverride.UltraGridOverrideTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns property descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PageFooterUIElement">
            <summary>
            Summary description for PageFooterUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageFooterUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>PageFooterUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageFooterUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden InitAppearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageFooterUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageFooterUIElement.DrawImage(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default image rendering - does nothing
            </summary>
            <param name="drawParams"><see cref="T:Infragistics.Win.UIElementDrawParams"/></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageFooterUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default background picture drawing
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PageFooterUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PageHeaderUIElement">
            <summary>
            Summary description for PageHeaderUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageHeaderUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>PageHeaderUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageHeaderUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            overridden InitAppearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageHeaderUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageHeaderUIElement.DrawImage(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default image rendering - does nothing
            </summary>
            <param name="drawParams"><see cref="T:Infragistics.Win.UIElementDrawParams"/></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PageHeaderUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default background picture drawing
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PageHeaderUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws the row connector horz line. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.Row">
            <summary>
            Returns the UltraGridRow object associated with the UIElement. This property is not available at design time. This property is read-only at run time.
            </summary>
            <remarks>
            <p class="body">The <b>Row</b> property of an object refers to a specific row in the grid as defined by an UltraGridRow object. You use the <b>Row</b> property to access the properties of a specified UltraGridRow object, or to return a reference to the UltraGridRow object that is associated with the current object.</p>
            <p class="body">An UltraGridRow object represents a single row in the grid that displays the data from a single record in the underlying data source. The UltraGridRow object is one mechanism used to manage the updating of data records either singly or in batches (the other is the UltraGridCell object). When the user is interacting with the grid, one UltraGridRow object is always the active row, and determines both the input focus of the grid and the position context of the data source to which the grid is bound.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.SelectableItem">
            <summary>
            Override and return null for the pre row area since we don't want to select
            the row when they click here.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PreRowAreaUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintManager.PrinterMetricsGraphics">
            <summary>
            Gets the Printer Metrics Graphics object which can be used for Metrics calculations involving printing. 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PrintPreviewSettings">
            <summary>
            Class used to hold the Print Preview control Settings
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.Zoom">
            <summary>
            Returns or sets a value that determines the zoom level of the print preview window.
            </summary>
            <remarks>
            <p class="body">The Zoom property specifies the level of zoom that will be in effect when the Print Preview dialog is first displayed. Once the print preview is displayed, the user can change the zoom level by using the controls available in the dialog.</p>
            <p class="body">A value of 1.0 dispalys a full-size apge (100%). The default value is -1, which automatically sizes the page so that the full page is visible in the dialog.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.DialogHeight">
            <summary>
            Height of the print preview dialog. The default is -1 (automatically determined).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.DialogWidth">
            <summary>
            Width of the print preview dialog. The default is -1 (automatically determined).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.DialogTop">
            <summary>
            Returns or sets the print preview dialog's y-coordinate. Default is -1 (automatically determined).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.DialogLeft">
            <summary>
            Returns or sets the print preview dialog's x-coordinate. Default is -1 (automatically determined).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.DialogCaption">
            <summary>
            Caption of the print preview dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.PrintPreviewSettings.DialogIcon">
            <summary>
            Icon for the print preview dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.PropertyIds">
            <summary>
               uniquely identify each property.  
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Activation">
            <summary>
            property id identifying Activation property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ActiveCellAppearance">
            <summary>
            property id identifying ActiveCellAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ActiveRowAppearance">
            <summary>
            property id identifying ActiveRowAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Add">
            <summary>
            property id identifying Add property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddButtonCaption">
            <summary>
            property id identifying AddButtonCaption property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddButtonToolTipText">
            <summary>
            property id identifying AddButtonToolTipText property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddNewBox">
            <summary>
            property id identifying AddNewBox property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddNewBoxStyle">
            <summary>
            property id identifying AddNewBoxStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddNewRowButtonUIElement">
            <summary>
            property id identifying AddNewRowButtonUIElement property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowAddNew">
            <summary>
            property id identifying AllowAddNew property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowColMoving">
            <summary>
            property id identifying AllowColMoving property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowColSizing">
            <summary>
            property id identifying AllowColSizing property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowColSwapping">
            <summary>
            property id identifying AllowColSwapping property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowDelete">
            <summary>
            property id identifying AllowDelete property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowGroupMoving">
            <summary>
            property id identifying AllowGroupMoving property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowGroupSwapping">
            <summary>
            property id identifying AllowGroupSwapping property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowUpdate">
            <summary>
            property id identifying AllowUpdate property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AlphaBlendEnabled">
            <summary>
            property id identifying AlphaBlendEnabled property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Appearance">
            <summary>
            property id identifying Appearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoEdit">
            <summary>
            property id identifying AutoEdit property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoPreviewEnabled">
            <summary>
            property id identifying AutoPreviewEnabled property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoPreviewField">
            <summary>
            property id identifying AutoPreviewField property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoPreviewHidden">
            <summary>
            property id identifying AutoPreviewHidden property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoPreviewMaxLines">
            <summary>
            property id identifying AutoPreviewMaxLines property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoSizeEdit">
            <summary>
            property id identifying AutoSizeEdit property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Band">
            <summary>
            property id identifying Band property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Bands">
            <summary>
            property id identifying Bands property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyle">
            <summary>
            property id identifying BorderStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleCaption">
            <summary>
            property id identifying BorderStyleCaption property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleCell">
            <summary>
            property id identifying BorderStyleCell property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleHeader">
            <summary>
            property id identifying BorderStyleHeader property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleRow">
            <summary>
            property id identifying BorderStyleRow property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ButtonAppearance">
            <summary>
            property id identifying ButtonAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ButtonConnectorStyle">
            <summary>
            property id identifying ButtonConnectorStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ButtonConnectorColor">
            <summary>
            property id identifying ButtonConnectorColor property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ButtonDisplayStyle">
            <summary>
            property id identifying ButtonDisplayStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Caption">
            <summary>
            property id identifying Caption property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CaptionAppearance">
            <summary>
            property id identifying CaptionAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Cell">
            <summary>
            property id identifying Cell property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellAppearance">
            <summary>
            property id identifying CellAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellClickAction">
            <summary>
            property id identifying CellClickAction property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellMultiLine">
            <summary>
            property id identifying CellMultiLine property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellPadding">
            <summary>
            property id identifying CellPadding property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellSpacing">
            <summary>
            property id identifying CellSpacing property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Cells">
            <summary>
            property id identifying Cells property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Clear">
            <summary>
            property id identifying Clear property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ClearUnbound">
            <summary>
            property id identifying ClearUnbound property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColHeaderLines">
            <summary>
            property id identifying ColHeaderLines property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColHeadersVisible">
            <summary>
            property id identifying ColHeadersVisible property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColScrollRegion">
            <summary>
            property id identifying ColScrollRegion property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColScrollRegions">
            <summary>
            property id identifying ColScrollRegions property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColSpan">
            <summary>
            property id identifying ColSpan property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Column">
            <summary>
            property id identifying Column property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Columns">
            <summary>
            property id identifying Columns property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataChanged">
            <summary>
            property id identifying DataChanged, property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataType">
            <summary>
            property id identifying DataType property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DefaultColWidth">
            <summary>
            property id identifying DefaultColWidth property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DefaultRowHeight">
            <summary>
            property id identifying DefaultRowHeight property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Delete">
            <summary>
            property id identifying Delete property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Description">
            <summary>
            property id identifying Description property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DroppedDown">
            <summary>
            property id identifying DroppedDown property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.EditCellAppearance">
            <summary>
            property id identifying EditCellAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Enabled">
            <summary>
            property id identifying Enabled property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ExclusiveColScrollRegion">
            <summary>
            property id identifying ExclusiveColScrollRegion property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ExpandChildRowsOnLoad">
            <summary>
            property id identifying ExpandChildRowsOnLoad property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ExpandRowsOnLoad">
            <summary>
            property id identifying ExpandRowsOnLoad property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Expandable">
            <summary>
            property id identifying Expandable property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Expanded">
            <summary>
            property id identifying Expanded property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ExpansionIndicator">
            <summary>
            property id identifying ExpansionIndicator property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Indentation">
            <summary>
            property id identifying Indentation property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedHeight">
            <summary>
            property id identifying FixedHeight property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DisplayLayout">
            <summary>
            property id identifying DisplayLayout property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Group">
            <summary>
            property id identifying Group property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupHeaderLines">
            <summary>
            property id identifying GroupHeaderLines property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupHeadersVisible">
            <summary>
            property id identifying GroupHeadersVisible property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Groups">
            <summary>
            property id identifying Groups property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Header">
            <summary>
            property id identifying Header property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.HeaderAppearance">
            <summary>
            property id identifying HeaderAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.HeaderClickAction">
            <summary>
            property id identifying HeaderClickAction property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.HeaderVisible">
            <summary>
            property id identifying HeaderVisible property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Height">
            <summary>
            property id identifying Height property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Hidden">
            <summary>
            property id identifying Hidden property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Index">
            <summary>
            property id identifying Index property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.InterBandSpacing">
            <summary>
            property id identifying InterBandSpacing property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.IsAlternate">
            <summary>
            property id identifying IsAlternate property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Key">
            <summary>
            property id identifying Key property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Layout">
            <summary>
            property id identifying Layout property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Level">
            <summary>
            property id identifying Level property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LevelCount">
            <summary>
            property id identifying LevelCount property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LockedWidth">
            <summary>
            property id identifying LockedWidth property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaskClipMode">
            <summary>
            property id identifying MaskClipMode property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaskDataMode">
            <summary>
            property id identifying MaskDataMode property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaskDisplayMode">
            <summary>
            property id identifying MaskDisplayMode property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaskInput">
            <summary>
            property id identifying MaskInput property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxColScrollRegions">
            <summary>
            property id identifying MaxColScrollRegions property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxDate">
            <summary>
            property id identifying MaxDate property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxRowScrollRegions">
            <summary>
            property id identifying MaxRowScrollRegions property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxSelectedCells">
            <summary>
            property id identifying MaxSelectedCells property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxSelectedRows">
            <summary>
            property id identifying MaxSelectedRows property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxWidth">
            <summary>
            property id identifying MaxWidth property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MinDate">
            <summary>
            property id identifying MinDate, property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MinWidth">
            <summary>
            property id identifying MinWidth property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Nullable">
            <summary>
            property id identifying Nullable property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.NullText">
            <summary>
            NullText property id
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Override">
            <summary>
            property id identifying Override property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Overrides">
            <summary>
            property id identifying Overrides property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ParentColumn">
            <summary>
            property id identifying ParentColumn property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Prompt">
            <summary>
            property id identifying Prompt property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.PromptChar">
            <summary>
            property id identifying PromptChar property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.PadChar">
            <summary>
            PadChar property id
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ProportionalResize">
            <summary>
            property id identifying ProportionalResize property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Remove">
            <summary>
            property id identifying Remove property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowAlternateAppearance">
            <summary>
            property id identifying RowAlternateAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowAppearance">
            <summary>
            property id identifying RowAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowConnectorColor">
            <summary>
            property id identifying RowConnectorColor property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowConnectorStyle">
            <summary>
            property id identifying RowConnectorStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowPreviewAppearance">
            <summary>
            property id identifying RowPreviewAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowScrollRegion">
            <summary>
            property id identifying RowScrollRegion property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowScrollRegions">
            <summary>
            property id identifying RowScrollRegions property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSelectorAppearance">
            <summary>
            property id identifying RowSelectorAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSelectors">
            <summary>
            property id identifying RowSelectors property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSizing">
            <summary>
            property id identifying RowSizing property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSizingArea">
            <summary>
            property id identifying RowSizingArea property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSizingAutoMaxLines">
            <summary>
            property id identifying RowSizingAutoMaxLines property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSpacingAfter">
            <summary>
            property id identifying RowSpacingAfter property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSpacingBefore">
            <summary>
            property id identifying RowSpacingBefore property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ScrollTipField">
            <summary>
            property id identifying ScrollTipField property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Scrollbar">
            <summary>
            property id identifying Scrollbar property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Scrollbars">
            <summary>
            property id identifying Scrollbars property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelLength">
            <summary>
            property id identifying SelLength property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelStart">
            <summary>
            property id identifying SelStart property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelText">
            <summary>
            property id identifying SelText property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectTypeCell">
            <summary>
            property id identifying SelectTypeCell property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectTypeCol">
            <summary>
            property id identifying SelectTypeCol property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectTypeRow">
            <summary>
            property id identifying SelectTypeRow property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectecCellAppearance">
            <summary>
            property id identifying SelectecCellAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Selected">
            <summary>
            property id identifying Selected property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectedRowAppearance">
            <summary>
            property id identifying SelectedRowAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SizingMode">
            <summary>
            property id identifying SizingMode property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SortIndicator">
            <summary>
            property id identifying SortIndicator property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SortedColumns">
            <summary>
            property id identifying SortedColumns property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Style">
            <summary>
            property id identifying Style property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TabNavigation">
            <summary>
            property id identifying TabNavigation property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TabStop">
            <summary>
            property id identifying TabStop property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Text">
            <summary>
            property id identifying Text property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TipStyleCell">
            <summary>
            property id identifying TipStyleCell property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TipStyleRowConnector">
            <summary>
            property id identifying TipStyleRowConnector property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TipStyleScroll">
            <summary>
            property id identifying TipStyleScroll property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Value">
            <summary>
            property id identifying Value property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ValueList">
            <summary>
            property id identifying ValueList property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ValueLists">
            <summary>
            property id identifying ValueLists property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.VertScrollBar">
            <summary>
            property id identifying VertScrollBar property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ViewStyle">
            <summary>
            property id identifying ViewStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ViewStyleBand">
            <summary>
            property id identifying ViewStyleBand property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.VisiblePosition">
            <summary>
            property id identifying VisiblePosition property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Width">
            <summary>
            property id identifying Width property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnFormat">
            <summary>
            property id identifying the column's Format property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByColumnAppearance">
            <summary>
            Property id identifying Overrride's GroupByColumnAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByColumnHeaderAppearance">
            <summary>
            Property id identifying Overrride's GroupByColumnHeaderAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByRowAppearance">
            <summary>
            Property id identifying Overrride's GroupByRowAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByRowPadding">
            <summary>
            Property id identifying Override's GroupByRowPadding property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectTypeGroupByRow">
            <summary>
            Property id identifying Override's SelectTypeGroupByRow property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowGroupBy">
            <summary>
             Property id identifying Override's AllowGroupBy property		
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByColumnsHidden">
            <summary>
             Property id identifying Override's GroupByColumnsHidden property		
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByBox">
            <summary>
            property id identifying GroupByBox property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ShowBandLabels">
            <summary>
            proeprty id identifying GroupByBox.ShowBandLabels property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BandLabelAppearance">
            <summary>
            property id identifying GroupByBox.BandLabelAppearance proeprty
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BandLabelBorderStyle">
            <summary>
            property id identifying GroupByBox.BandLabelBorderStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.IsGroupByColumn">
            <summary>
            property id identifying Column.IsGroupByColumn property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByRowDescriptionMask">
            <summary>
            property id identifying Override.GroupByRowDescriptionMask property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Position">
            <summary>
            property id identifying ColScrollRegoin.Position
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoPreviewIndentation">
            <summary>
            property id identifying Band.AutoPreviewIndentation
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Case">
            <summary>
            property id identifying Column.Case property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Layouts">
            <summary>
            property id identifying Layouts collection
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataSource">
            <summary>
            property id identifying DataSource property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataMember">
            <summary>
            property id identifying DataMember property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ImageList">
            <summary>
            property id identifying ImageList property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectionStrategyFilter">
            <summary>
            property id identifying the SelectionStrategyFilter property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.UpdateMode">
            <summary>
            property id identifying the UpdateMode property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DisplayMember">
            <summary>
            property id identifying the DisplayMember property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ValueMember">
            <summary>
            property id identifying the ValueMember property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DropDownWidth">
            <summary>
            property id identifying the DropDownWidth property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxDropDownItems">
            <summary>
            property id identifying the MaxDropDownItems property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MinDropDownItems">
            <summary>
            property id identifying the MinDropDownItems property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoSize">
            <summary>
            property id identifying the AutoSize property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DropDownStyle">
            <summary>
            property id identifying the DropDownStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Padding">
            <summary>
            property id identifying the Padding property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaskLiteralsAppearance">
            <summary>
            Property id identifying the MaskLiteralsAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ButtonStyle">
            <summary>
            Property id identifying the ButtonStyle property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Appearances">
            <summary>
            Property id identifying the Appearances collection property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellButtonAppearance">
            <summary>
            Property id identifying the CellButtonAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleCard">
            <summary>
            property id identifying BorderStyleCard property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleCardArea">
            <summary>
            property id identifying BorderStyleCardArea property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardSpacing">
            <summary>
            property id identifying CardSpacing property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardAreaAppearance">
            <summary>
            Property id identifying the CardAreaAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardCaptionAppearance">
            <summary>
            Property id identifying the CardCaptionAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ActiveCardCaptionAppearance">
            <summary>
            Property id identifying the ActiveCardCaptionAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SelectedCardCaptionAppearance">
            <summary>
            Property id identifying the SelectedCardCaptionAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardView">
            <summary>
            Property id identifying the CardView property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoFitColumns">
            <summary>
            Property id identifying the AutoFitColumns property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardCaption">
            <summary>
            Property id identifying the CardCaption property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardSettings">
            <summary>
            Property id identifying the CardSettings property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CaptionField">
            <summary>
            Property id identifying the CaptionField property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowLabelSizing">
            <summary>
            Property id identifying the AllowLabelSizing property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowSizing">
            <summary>
            Property id identifying the AllowSizing property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AutoFit">
            <summary>
            Property id identifying the AutoFit property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CaptionLines">
            <summary>
            Property id identifying the CaptionLines property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardStyle">
            <summary>
            Property id identifying the CardStyle property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LabelWidth">
            <summary>
            Property id identifying the LabelWidth property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxCardAreaCols">
            <summary>
            Property id identifying the MaxCardAreaCols property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxCardAreaRows">
            <summary>
            Property id identifying the MaxCardAreaRows property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ShowCaption">
            <summary>
            Property id identifying the ShowCaption property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ScrollBarLook">
            <summary>
            Property id identifying the ScrollBarLook property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.PromptAppearance">
            <summary>
            Property id identifying PromptAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.HiddenWhenGroupBy">
            <summary>
            Property id identifying HiddenWhenGroupBy property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ScrollStyle">
            <summary>
            Property id identifying ScrollStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowRowFiltering">
            <summary>
            Property id identifying AllowRowFiltering property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowFilterMode">
            <summary>
            Property id identifying RowFilterMode property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ComparisionOperator">
            <summary>
            Property id identifying ComparisionOperator property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LogicalOperator">
            <summary>
            Property id identifying LogicalOperator property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CompareValue">
            <summary>
            Property id identifying CompareValue property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilterConditions">
            <summary>
            Property id identifying FilterConditions property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnFilter">
            <summary>
            Property id identifying ColumnFilter property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnFilters">
            <summary>
            Property id identifying ColumnFilters property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowRowSummaries">
            <summary>
            Property id identifying AllowRowSummaries property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleSummaryFooter">
            <summary>
            Property id identifying BorderStyleSummaryFooter property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleSummaryValue">
            <summary>
            Property id identifying BorderStyleSummaryValue property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryFooterAppearance">
            <summary>
            Property id identifying SummaryFooterAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryValueAppearance">
            <summary>
            Property id identifying SummaryValueAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DisplayInGroupBy">
            <summary>
            Property id identifying DisplayInGroupBy property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryType">
            <summary>
            Property id identifying SummaryType property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CustomSummaryCalculator">
            <summary>
            Property id identifying CustomSummaryCalculator property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DisplayFormat">
            <summary>
            Property id identifying DisplayFormat property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryPosition">
            <summary>
            Property id identifying SummaryPosition property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryPositionColumn">
            <summary>
            Property id identifying SummaryPositionColumn property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SourceColumn">
            <summary>
            Property id identifying SummaryPositionColumn property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Lines">
            <summary>
            Property id identifying Lines property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Summaries">
            <summary>
            Property id identifying Summaries property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryFooterCaptionVisible">
            <summary>
            Property id identifying SummaryFooterCaptionVisible property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryFooterCaption">
            <summary>
            Property id identifying SummaryFooterCaption property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.PriorityScrolling">
            <summary>
            Property id identifying SummaryFooterCaption property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleSummaryFooterCaption">
            <summary>
            Property id identifying SummaryFooterCaption property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryButtonImage">
            <summary>
            Property id identifying SummaryButtonImage property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilterDropDownButtonImage">
            <summary>
            Property id identifying FilterDropDownButtonImage property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilterDropDownButtonImageActive">
            <summary>
            Property id identifying FilterDropDownButtonImage property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.IsCardCompressed">
            <summary>
            Property id identifying IsCardCompressed property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByBoxStyle">
            <summary>
            Property id identifying GroupByBox.Style property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryFooterCaptionAppearance">
            <summary>
            Property id identifying SummaryFooterCaptionAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummarySettings">
            <summary>
            Property id identifying SummarySettings property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SummaryValue">
            <summary>
            Property id identifying SummaryValue property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSelectorWidth">
            <summary>
            Property id identifying RowSelector property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnAutoSizeMode">
            <summary>
            Property id identifying RowSelector property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.UseRowLayout">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LabelPosition">
            <summary>
            Property id identifying LabelPosition property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LabelSpan">
            <summary>
            Property id identifying LabelSpan property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MinimumCellSize">
            <summary>
            Property id identifying MinimumCellSize property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MinimumLabelSize">
            <summary>
            Property id identifying MinimumLabelSize property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.OriginX">
            <summary>
            Property id identifying OriginX property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.OriginY">
            <summary>
            Property id identifying OriginY property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.PreferredCellSize">
            <summary>
            Property id identifying PreferredCellSize property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.PreferredLabelSize">
            <summary>
            Property id identifying PreferredLabelSize property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SpanX">
            <summary>
            Property id identifying SpanX property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SpanY">
            <summary>
            Property id identifying SpanY property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.WeightX">
            <summary>
            Property id identifying WeightX property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.WeightY">
            <summary>
            Property id identifying WeightY property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleRowSelector">
            <summary>
            Property id identifying BorderStyleRowSelector property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowLayout">
            <summary>
            Property id identifying RowLayout property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowLayouts">
            <summary>
            Property id identifying RowLayouts property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowRowLayoutCellSizing">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutCellSizing"/> and <see cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/> properties.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AllowRowLayoutLabelSizing">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.AllowRowLayoutLabelSizing"/> and <see cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/> properties.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowLayoutLabelStyle">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowLayoutColumnInfo">
            <summary>
            Property id identifying RowLayoutColumnInfo property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellDisplayStyle">
            <summary>
            Property id identifying CellDisplayStyle property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnScrollbarSmallChange">
            <summary>
            Property id identifying ColumnScrollbarSmallChange property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Fixed">
            <summary>
            Property id identifying Fixed property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.UseFixedHeaders">
            <summary>
            Property id identifying UseFixedHeaders property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedHeaderIndicator">
            <summary>
            Property id identifying FixedHeaderIndicator property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedCellSeparatorColor">
            <summary>
            Property id identifying FixedCellSeparatorColor property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedHeaderAppearance">
            <summary>
            Property id identifying FixedHeaderAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedCellAppearance">
            <summary>
            Property id identifying FixedCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedHeaderOnImage">
            <summary>
            Property id identifying FixedHeaderOnImage property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FixedHeaderOffImage">
            <summary>
            Property id identifying FixedHeaderOffImage property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ReadOnly">
            <summary>
            Property id identifying ReadOnly property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowFilterAction">
            <summary>
            Property id identifying RowFilterAction	property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilteredOutRowAppearance">
            <summary>
            Property id identifying FilteredOutRowAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilteredOutCellAppearance">
            <summary>
            Property id identifying FilteredOutCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilteredInRowAppearance">
            <summary>
            Property id identifying FilteredInRowAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FilteredInCellAppearance">
            <summary>
            Property id identifying FilteredIntCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddRowAppearance">
            <summary>
            Property id identifying AddRowAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TemplateAddRowAppearance">
            <summary>
            Property id identifying TemplateAddRowAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TemplateAddRowSpacingAfter">
            <summary>
            Property id identifying TemplateAddRowSpacingAfter property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TemplateAddRowSpacingBefore">
            <summary>
            Property id identifying TemplateAddRowSpacingBefore property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.BorderStyleTemplateAddRow">
            <summary>
            Property id identifying BorderStyleTemplateAddRow property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DefaultCellValue">
            <summary>
            Property id identifying DefaultCellValue property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ScrollBounds">
            <summary>
            Property id identifying ScrollBounds property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CardScrollbars">
            <summary>
            Property id identifying CardScrollbars property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MinRowHeight">
            <summary>
            Property id identifying MinRowHeight property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CellInsets">
            <summary>
            Property id identifying CellInsets property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LabelInsets">
            <summary>
            Property id identifying LabelInsets property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.UseEditorMaskSettings">
            <summary>
            Property id identifying UseEditorMaskSettings property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.AddRowCellAppearance">
            <summary>
            Property id identifying AddRowCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.TemplateAddRowCellAppearance">
            <summary>
            Property id identifying TemplateAddRowCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ShowInkButton">
            <summary>
            Property id identifying ShowInkButton property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SplitterBarHorizontalAppearance">
            <summary>
            Property id identifying SplitterBarHorizontalAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SplitterBarVerticalAppearance">
            <summary>
            Property id identifying SplitterBarVerticalAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.CharacterCasing">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.CharacterCasing"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LoadStyle">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.LoadStyle"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Formula">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Formula"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FormulaErrorValue">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.FormulaErrorValue"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FormulaErrorAppearance">
            <summary>
            Property id identifying FormulaErrorAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ShowCalculatingText">
            <summary>
            Property id identifying ShowCalculatingText property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FormulaRowIndexSource">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.FormulaRowIndexSource"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MaxLength">
            <summary>
            MaxLength
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MergedCellAppearance">
            <summary>
            Property id identifying MergedCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MergedCellStyle">
            <summary>
            Property id identifying MergedCellStyle property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MergedCellEvaluationType">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellEvaluationType"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MergedCellContentArea">
            <summary>
            Property id identifying MergedCellContentArea property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.MergedCellEvaluator">
            <summary>
            Property id identifying <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.MergedCellEvaluator"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.LimitToList">
            <summary>
            Property id identifying LimitToList property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnSizingArea">
            <summary>
            Property id identifying ColumnSizingArea property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSelectorHeaderAppearance">
            <summary>
            property id identifying RowSelectorHeaderAppearance property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowSelectorHeaderStyle">
            <summary>
            property id identifying RowSelectorHeaderStyle property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.SupportDataErrorInfo">
            <summary>
            Property id identifying SupportDataErrorInfo property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataErrorRowAppearance">
            <summary>
            Property id identifying DataErrorRowAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataErrorCellAppearance">
            <summary>
            Property id identifying DataErrorCellAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.DataErrorRowSelectorAppearance">
            <summary>
            Property id identifying DataErrorRowSelectorAppearance property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByRowSpacingBefore">
            <summary>
            Property id identifying GroupByRowSpacingBefore property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.GroupByRowSpacingAfter">
            <summary>
            Property id identifying GroupByRowSpacingAfter property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.ColumnClipMode">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.ColumnClipMode"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.FitWidthToPages">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.FitWidthToPages"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.RowProperties">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.RowProperties"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.PropertyIds.Grid">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.Grid"/> property
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ResolveAppearanceContext">
            <summary>
            This structure is used to pass around context information
            between methods while resolving UltragRid appearances 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ResolveAppearanceContext.#ctor(System.Type,Infragistics.Win.AppearancePropFlags)">
            <summary>
            ctor
            </summary>
            <param name="objectType">The type of object being resolved</param>
            <param name="requestedProps">Bit flags identifying the appearance properties to be resolved</param>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowAutoPreviewUIElement">
            <summary>
            	Summary description for RowAutoPreviewUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowAutoPreviewUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the appearance object used by the AutoPreview area
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowAutoPreviewUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowAutoPreviewUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowAutoPreviewUIElement.Row">
            <summary>
            Returns the UltraGridRow object associated with the cell. This property is not available at design time. This property is read-only at run time.
            </summary>
            <remarks>
            <p class="body">The <b>Row</b> property of an object refers to a specific row in the grid as defined by an UltraGridRow object. You use the <b>Row</b> property to access the properties of a specified UltraGridRow object, or to return a reference to the UltraGridRow object that is associated with the current object.</p>
            <p class="body">An UltraGridRow object represents a single row in the grid that displays the data from a single record in the underlying data source. The UltraGridRow object is one mechanism used to manage the updating of data records either singly or in batches (the other is the UltraGridCell object). When the user is interacting with the grid, one UltraGridRow object is always the active row, and determines both the input focus of the grid and the position context of the data source to which the grid is bound.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowAutoPreviewUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement">
            <summary>
            The RowCellAreaUIElement contains the CellUIElements for a specific row.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.OnClick">
            <summary>
            Sets the active row to this row
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing if the row is a Card.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing if the row is a Card.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
            <param name="drawParams"><see cref="T:Infragistics.Win.UIElementDrawParams"/></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.GetAdjustableCursor(System.Drawing.Point)">
            <summary>
            The cursor to use over the adjustable area of the element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.GetAdjustmentRange(System.Drawing.Point,Infragistics.Win.UIElementAdjustmentRangeParams@)">
            <summary>
            Returns the range limits for adjusting the element in either or both
            dimensions. It also returns the initial rects for the vertical and horizontal
            bars that will need to be inverted during the mouse drag operation.
            </summary>
            <param name="point">Point</param>
            <param name="range">Returned limits</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.Row">
            <summary>
            Returns the UltraGridRow object associated with the cell. This property is not available at design time. This property is read-only at run time.
            </summary>
            <remarks>
            <p class="body">The <b>Row</b> property of an object refers to a specific row in the grid as defined by an UltraGridRow object. You use the <b>Row</b> property to access the properties of a specified UltraGridRow object, or to return a reference to the UltraGridRow object that is associated with the current object.</p>
            <p class="body">An UltraGridRow object represents a single row in the grid that displays the data from a single record in the underlying data source. The UltraGridRow object is one mechanism used to manage the updating of data records either singly or in batches (the other is the UltraGridCell object). When the user is interacting with the grid, one UltraGridRow object is always the active row, and determines both the input focus of the grid and the position context of the data source to which the grid is bound.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.ClipChildren">
            <summary>
            Overridden. Returning true causes all drawing of this element's child elements to be
            expicitly clipped to the area inside this elements borders
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.ClipRectChildren">
            <summary>
            Overridden. Returns the rect inside borders as the default
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.ChildElementArrayCapacity">
            <summary>
            Returns the expected number of child elements for this element
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.DrawsFocusRect">
            <summary>
            Returns true if this  element needs to draw a focus rect. This should 
            be overridden since the default implementation always returns false. 
            </summary>
            <remarks>Even if this property returns true the focus will not be drawn unless the control has focus.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowCellAreaUIElement.Adjustable">
            <summary>
            Returns true if row can be resized (using row cell area)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement">
            <summary>
               Summary description for RowColRegionIntersectionUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            consturctor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.Initialize(Infragistics.Win.UltraWinGrid.RowScrollRegion,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Initializes the row-col intersection ui element with the passed in rsr and csr.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the
            element or null. 
            </summary>
            <param name="type">The requested type or null to pick up default context object.</param>
            <param name="checkParentElementContexts"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            overridden method that draws appropriate background for this element
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.VerifyChildElements(Infragistics.Win.ControlUIElementBase,System.Boolean)">
            <summary>
            Overridden.
            </summary>
            <param name="controlElement"></param>
            <param name="recursive"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.OnMousePanVertical(System.Int32)">
            <summary>
            OnMousePanVertical
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.OnMousePanHorizontal(System.Int32)">
            <summary>
            OnMousePanHorizontal
            </summary>
            <param name="delta"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowScrollRegion">
            <summary>
            Returns the ColScrollRegion object to which a UIElement belongs. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the column scrolling region to which the UIElement belongs. You can use this reference to access any of the returned column scrolling region's properties or methods.</p>
            <p class="body">If the UIElement does not belong to a column scrolling region, Nothing is returned.</p>
            <p class="body">The <b>RowScrollRegion</b> property can be used to return a reference to an RowScrollRegion object to which a UIElement belongs.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.ColScrollRegion">
            <summary>
            Returns the RowScrollRegion object to which a UIElement belongs. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to an RowScrollRegion object that can be used to set properties of, and invoke methods on, the row scrolling region to which the UIElement belongs. You can use this reference to access any of the returned row scrolling region's properties or methods.</p>
            <p class="body">If the UIElement does not belong to a row scrolling region, Nothing is returned.</p>
            <p class="body">The <b>ColScrollRegion</b> property can be used to return a reference to an ColScrollRegion object to which a UIElement belongs.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.ClipChildren">
            <summary>
            Returning true causes all drawing of this element's children to be expicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.SupportsVerticalMousePanning">
            <summary>
            Gets whether this element is supporting vertical mouse panning
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.SupportsHorizontalMousePanning">
            <summary>
            Gets whether this element is supporting horizontal mouse panning
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.AccessibilityInstance">
            <summary>
            Returns the accesible object representing the data area of the grid.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject">
            <summary>
            The Accessible object for a row/column region intersection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>An AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (Nothing in Visual Basic) if no object is at the tested location.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
            <summary>
            Modifies the selection or moves the keyboard focus of the accessible object.
            </summary>
            <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection"/> values.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.DefaultAction">
            <summary>
            Gets a string that describes the default action of the object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowColRegionIntersectionUIElement.RowColRegionAccessibleObject.Grid">
            <summary>
            Returns the associated grid control.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowColSplitterIntersectionUIElement">
            <summary>
            UI element thats positioned at the intersection of row scroll region and col scroll region splitter bars.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColSplitterIntersectionUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.SplitterUIElement,Infragistics.Win.SplitterUIElement)">
            <summary>
            Constructor.
            </summary>
            <param name="parent"></param>
            <param name="leftRightAdjustmentSplitter"></param>
            <param name="upDownAdjustmentSplitter"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColSplitterIntersectionUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColSplitterIntersectionUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowColSplitterIntersectionUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Overridden.
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayout">
            <summary>
            RowLayout class. The RowLayout class contains information on how the cells in a row get laid out.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object.</param>
            <param name="context">Context for the deserialization.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.Apply">
            <summary>
            Applies the row layout.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.Reset">
            <summary>
            Resets the object to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.Reset(System.Boolean)">
            <summary>
            Resets this RowLayout object to default value or to the current rowlayout from the band if fromBand is true.
            </summary>
            <param name="fromBand"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ShouldSerialize">
            <summary>
            Returns true if any of the properties of this object are set a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ResetRowLayoutLabelStyle">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.Separate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ResetColumnInfos">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ResetRowLayoutLabelPosition">
            <summary>
            Resets the RowLayoutLabelPosition property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.LabelPosition.Default"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ResetCardView">
            <summary>
            Resets the property to its default value of <b>false</b>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ResetCardViewStyle">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ShouldSerializeColumnInfos">
            <summary>
            Returns true if the ColumnInfos preoprty contains a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ShouldSerializeRowLayoutLabelPosition">
            <summary>
            Returns true if the RowLayoutLabelPosition property is set to a value other than the default value of <see cref="F:Infragistics.Win.UltraWinGrid.LabelPosition.Default"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ShouldSerializeCardView">
            <summary>
            Returns true if the property is set to a value other than its default value of <b>false</b>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ShouldSerializeCardViewStyle">
            <summary>
            Returns true if the property is set to a value other than its default value of <see cref="F:Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.ShouldSerializeRowLayoutLabelStyle">
            <summary>
            Retruns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayout.Key">
            <summary>
            Returns or sets a value that uniquely identifies an object in a collection.
            </summary>
            <remarks>
            <p class="body">The <b>Key</b> property is a unique, user-defined object identification string that can be used interchangeably with the <b>Index</b> of an object when accessing it through code. If you attempt to assign a value to the <b>Key</b> property is not unique in the collection, an error will occur.</p>
            <p class="body">The value of the <b>Index</b> property of an object can change when objects in the collection are reordered, such as when you add or remove objects. If you expect the <b>Index</b> property to change dynamically, refer to objects in a collection using the <b>Key</b> property. In addition, you can use the <b>Key</b> property to make your program "self-documenting" by assigning meaningful names to the objects in a collection.</p>
            <p class="body">You can set the <b>Key</b> property when you use the <b>Add</b> method to add an object to a collection. In some instances, the <b>Key</b> property of an object may be blank if that object does not appear in a collection.</p>
            <p class="body">Also, note that the uniqueness of keys is only enforced when the <b>Key</b> property is set to a value. If a collection supports objects with blank keys, that collection may contain multiple objects that whose <b>Key</b> property is empty. In that case, you must use <b>Index</b> property to differentiate between the objects that have blank keys.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayout.ColumnInfos">
            <summary>
            Returns a keyed collection containing RowLayoutColumnInfo objects for each column in the band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayout.RowLayoutLabelPosition">
            <summary>
            Gets or sets the label position. Label position indicates the position of the column labels in the row layout mode.
            </summary>
            <remarks>
            <p>Label position indicates where to position the column label in relation to the associated cell in row layout mode.</p>
            <p><see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> must be set to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.WithCellData"/> for this to take effect in regular view (non-card view) mode. In card view, <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> must be set to a value other than <see cref="F:Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels"/>.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelPosition"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelPosition"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayout.RowLayoutLabelStyle">
            <summary>
            Gets or sets the row-layout label style.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayout.CardView">
            <summary>
            Gets ore sets the card view.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.CardView"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayout.CardViewStyle">
            <summary>
            Gets or sets the card-view style. Only has any effect if CardView is set to true.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayout.RowLayoutTypeConverter">
            <summary>
            RowLayoutTypeConverter type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.RowLayoutTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayout.RowLayoutTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo">
            <summary>
            Class for holding row layout information for a column.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Relative">
            <summary>
            This constant can be assigned to OriginX and OriginY to indicate that the cell be positioned relative to the last cell.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Remainder">
            <summary>
            This constant can be assigned to SpanX and SpanY to indicate that the cell occupy the rest of the logical row or the column in the row-layout respectively.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="columnKey"></param>
            <param name="unboundColumnIndex"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OnDispose">
            <summary>
            Called when the object is disposed off.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeLabelPosition">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeOriginX">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeOriginY">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeSpanX">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeSpanY">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeWeightX">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeWeightY">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeLabelSpan">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeMinimumLabelSize">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializePreferredLabelSize">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeMinimumCellSize">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializePreferredCellSize">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeAllowCellSizing">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeAllowLabelSizing">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeCellInsets">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerializeLabelInsets">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Listener notification
            </summary>
            <param name="propChange"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
            <param name="spanX"></param>
            <param name="spanY"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
            <param name="spanX"></param>
            <param name="spanY"></param>
            <param name="preferredCellWidth">0 for default.</param>
            <param name="preferredCellHeight">0 for default.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32,System.Int32,System.Int32,Infragistics.Win.UltraWinGrid.LabelPosition,System.Int32)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
            <param name="spanX"></param>
            <param name="spanY"></param>
            <param name="labelPosition"></param>
            <param name="labelSpan">1 is the default.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
            <param name="spanX"></param>
            <param name="spanY"></param>
            <param name="weightX">0.0 is the default.</param>
            <param name="weightY">0.0 is the default.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,Infragistics.Win.UltraWinGrid.LabelPosition,System.Int32)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
            <param name="spanX"></param>
            <param name="spanY"></param>
            <param name="weightX">0.0 is the default.</param>
            <param name="weightY">0.0 is the default.</param>
            <param name="labelPosition"></param>
            <param name="labelSpan">1 is the default.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Initialize(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,Infragistics.Win.UltraWinGrid.LabelPosition,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the row layout info with the passed in arguments.
            </summary>
            <param name="originX"></param>
            <param name="originY"></param>
            <param name="spanX"></param>
            <param name="spanY"></param>
            <param name="weightX">0.0 is the default.</param>
            <param name="weightY">0.0 is the default.</param>
            <param name="labelPosition"></param>
            <param name="labelSpan">1 is the default.</param>
            <param name="preferredCellWidth">0 for default.</param>
            <param name="preferredCellHeight">0 for default.</param>
            <param name="preferredLabelWidth">0 for default.</param>
            <param name="preferredLabelHeight">0 for default.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetOriginX">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Relative"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetOriginY">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Relative"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetSpanX">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetSpanY">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetWeightX">
            <summary>
            Resets the property to its default value,
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetWeightY">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetLabelPosition">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetLabelSpan">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Relative"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetMinimumLabelSize">
            <summary>
            Resets the property to its default value of size with 0 width and 0 height.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetPreferredLabelSize">
            <summary>
            Resets the property to its default value of size with 0 width and 0 height.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetMinimumCellSize">
            <summary>
            Resets the property to its default value of size with 0 width and 0 height.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetPreferredCellSize">
            <summary>
            Resets the property to its default value of size with 0 width and 0 height.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetAllowCellSizing">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetAllowLabelSizing">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetCellInsets">
            <summary>
            Resets the CellInsets property to the default value of an empty insets object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ResetLabelInsets">
            <summary>
            Resets the LabelInsets property to the default value of an empty insets object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.ShouldSerialize">
            <summary>pp
            Returns true is any of the properties have been set to non-default values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Reset">
            <summary>
            Resets all the properties to their default values.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Key">
            <summary>
            Returns or sets a value that uniquely identifies an object in a collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Column">
            <summary>
            Returns the associated column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelPosition">
            <summary>
            Indicates if and how the label (column header) is be shown in relation to the cell.
            </summary>
            <remarks>
            <p class="body">There are two row-layout modes concerning column label positioning. Column labels can be displayed with the cells inside of each row or in a separate area. This any setting of this property is honored when the column labels are displayed with the cells however only the <b>None</b> and <b>LabelOnly</b> are honored when the labels are in separate area. By default, the column labels are not displayed with the cells.</p>
            <p class="body">When column labels are displayed with cells, they are repeated in every row while in the other mode, they are displayed in a separate area. In card-view, that separate area is the card-label area left of the rows and in non-card-view, it is the header area above the rows. In card-view, setting <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> to a value other than <see cref="F:Infragistics.Win.UltraWinGrid.CardStyle.MergedLabels"/> displays the column labels with the cells. In non-card view setting the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutLabelStyle.WithCellData"/> displays the column labels with the cells.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelPosition"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.RowLayoutLabelStyle"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridCardSettings.Style"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanX"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanY"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelSpan"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelPositionResolved">
            <summary>
            Retruns the resolved LabelPosition. In merged-headers mode, since the headers are not with the cells,
            this property will resolve to None.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelSpan">
            <summary>
            Specifies the portion of SpanX or SpanY that is assigned to label (column header). When LablePosition is set to Left or Right LabelSpan specifies the portion of SpanX for the label and when it's Top or Bottom, it specifies the portion of SpanY for the label. If the LabelPosition is set to None or is not displayed with cells, then this property is ignored. If LabelPosition is set to <b>LabelOnly</b> which means cells aren't displayed then this property is ignored as well and the entire SpanX and SpanY is used for the label. Default value is 1.
            </summary>
            <remarks>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelPosition"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.MinimumLabelSize">
            <summary>
            Minimum label size. Default value is Size(0,0) which means it will calculate a reasonable default size.
            </summary>
            <remarks>
            <p class="body">If MinimumLabelSize property is set to a size with width greater then 0, then the bigger of the MinimumLabelSize width and PreferredLabelSize width will be used as the size of the label. The same applies to height as well.</p>
            <p class="body"><seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredLabelSize"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredCellSize"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.MinimumCellSize"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredLabelSize">
            <summary>
            Preferred label size. Default value is Size(0,0) which means it will calculate a reasonable default size.
            </summary>
            <remarks>
            <p class="body">Headers with the same OriginX and SpanX (vertically stacked) with different PreferredLabelSize settings will result in all such cells having the max of the widths when displayed. Likewise headers with the same OriginY and SpanY (horizontally aligned) with different PreferredCellSize settings will result in all such cells having the max of the heights when displayed.</p>
            <p class="body">If MinimumLabelSize property is set to a size with width greater then 0, then the bigger of the MinimumLabelSize width and PreferredLabelSize width will be used as the size of the label. The same applies to height as well.</p>
            <p class="body"><seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredCellSize"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.MinimumCellSize">
            <summary>
            Minimum cell size. Default value is Size(0,0) which means it will calculate a reasonable default size.
            </summary>
            <remarks>
            <p class="body">If MinimumCellSize property is set to a size with width greater then 0, then the bigger of the MinimumCellSize width and PreferredCellSize width will be used as the size of the cell. The same applies to height as well.</p>
            <p class="body"><seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredCellSize"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredLabelSize"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.MinimumLabelSize"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredCellSize">
            <summary>
            Preferred cell size. Default value is Size(0,0) which means it will calculate a reasonable default size.
            </summary>
            <remarks>
            <p class="body">If the Width of the PreferredCellSize is set to 0, then the value of <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Width"/> will be used as the width. If the Height is set to 0, then a reasonable default height will be calculated.</p>
            <p class="body">Cells with the same OriginX and SpanX (vertically stacked) with different PreferredCellSize settings will result in all such cells having the max of the widths when displayed. Likewise Cells with the same OriginY and SpanY (horizontally aligned) with different PreferredCellSize settings will result in all such cells having the max of the heights when displayed.</p>
            <p class="body">If MinimumCellSize property is set to a size with width greater then 0, then the bigger of the MinimumCellSize width and PreferredCellSize width will be used as the size of the cell. The same applies to height as well.</p>
            <p class="body"><seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.PreferredLabelSize"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginX">
            <summary>
            Horizontal coordinate in the row-layout.
            </summary>
            <remarks>
            <p class="body">OriginX specifies the horizontal cell coordinate in the row layout. If OriginX is set to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Relative"/> then it will be positioned relative to the last item in the row-layout.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginY"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanX"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanY"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginY">
            <summary>
            Vertical coordinate in the row-layout.
            </summary>
            <remarks>
            <p class="body">OriginY specifies the vertical cell coordinate in the row layout. If OriginY is set to <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Relative"/> then it will be positioned relative to the last item in the row-layout.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginX"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanX"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanY"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanX">
            <summary>
            Number of cells this item will span in the the row-layout horizontally. <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Remainder"/> constant specifies that this cell occupy remainder of space horizontally.
            </summary>
            <remarks>
            <p class="body">Number of cells this item will span in the the row-layout horizontally. <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Remainder"/> constant specifies that this cell occupy remainder of space horizontally.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginX"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginY"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanY"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanY">
            <summary>
            Number of cells this item will span in the row layout vertically. <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Remainder"/> constant specifies that this cell occupy remainder of space vertically.
            </summary>
            <remarks>
            <p calss="body">Number of cells this item will span in the row layout vertically. <see cref="F:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Remainder"/> constant specifies that this cell occupy remainder of space vertically.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginX"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginY"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanX"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginXResolved">
            <summary>
            Returns the resolved OriginX.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.OriginYResolved">
            <summary>
            Returns the resolved OriginY.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanXResolved">
            <summary>
            Returns the resolved SpanX.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.SpanYResolved">
            <summary>
            Returns the resolved SpanY.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.WeightX">
            <summary>
            Indicates how the extra horizontal space will be distributed among items. Default value is 0.0. Higher values give higher priority.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.WeightY">
            <summary>
            Indicates how the extra vertical space will be distributed among items. Default value is 0.0. Higher values give higher priority.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing">
            <summary>
            Indicates whether the user is allowed to resize the cell.
            </summary>
            <remarks>
            <p class="body">Indicates whether the user is allowed to resize the cell associated with the column associated with this RowLayoutInfoColumn object.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.RowLayoutSizing"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowLabelSizing">
            <summary>
            Indicates whether the user is allowed to resize the column label.
            </summary>
            <remarks>
            <p class="body">Indicates whether the user is allowed to resize the cell associated with the column associated with this RowLayoutInfoColumn object.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.RowLayoutSizing"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.AllowCellSizing"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.CellInsets">
            <summary>
            Returns an instance of Insets object used for specifying the insets around the cells.
            </summary>
            <remarks>
            <p class="body"><b>Insets</b> property sepcifies the insets or spacing around the cells.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.LabelInsets">
            <summary>
            Returns an instance of Insets object used for specifying the insets around the cells.
            </summary>
            <remarks>
            <p class="body"><b>Insets</b> property sepcifies the insets or spacing around the cells.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#Anchor">
            <summary>
            If the display area of the item is larger than the item, this property indicates where to anchor the item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#Fill">
            <summary>
            Fill indicates whether to resize the item to fill the extra spance if the layout item's display area is larger than its size.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#Insets">
            <summary>
            Indicates the padding around the layout item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#OriginX">
            <summary>
            <p>OriginX and OriginY define where the layout item will be placed in the virtual grid of the row layout. OriginX specifies the location horizontally while specifies the location vertically. These locations are the coordinates of the cells in the virtual grid that the row layout represents.</p>
            <p>The leftmost cell has OriginX of 0. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/> specifies that the item be placed just to the right of the item that was added to the layout manager just before this item was added. </p>
            <p>The default value is <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/>. OriginX should be a non-negative value.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#OriginY">
            <summary>
            <p>OriginX and OriginY define where the layout item will be placed in the virtual grid of the row-layout. OriginX specifies the location horizontally while specifies the location vertically. These locations are the coordinates of the cells in the virtual grid that the row-layout represents.</p>
            <p>The topmost cell has OriginY of 0. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/> specifies that the item be placed just below the item that was added to the layout manager just before this item was added.</p>
            <p>The default value is <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Relative"/>. OriginY should be a non-negative value.</p>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#SpanX">
            <summary>
            Specifies the number of cells this item will span horizontally. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Remainder"/> specifies that this item be the last one in the row and thus occupy remaining space.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#SpanY">
            <summary>
            Specifies the number of cells this item will span vertically. The constant <see cref="F:Infragistics.Win.Layout.GridBagConstraintConstants.Remainder"/> specifies that this item be the last one in the column and thus occupy remaining space.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#WeightX">
            <summary>
            Indicates how the extra horizontal space will be distributed among items. Default value is 0.0. Higher values give higher priority. The weight of the column in the virtual grid the row-layout layout represents is the maximum WeightX of all the items in the row.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#IGridBagConstraint#WeightY">
            <summary>
            Indicates how the extra vertical space will be distributed among items. Default value is 0.0. Higher values give higher priority. The weight of the column in the virtual grid the grid-bag layout represents is the maximum WeightY of all the items in the column.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#ILayoutItem#PreferredSize">
            <summary>
            Returns the ideal size.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#ILayoutItem#MinimumSize">
            <summary>
            Returns the minimum size.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.Infragistics#Win#Layout#ILayoutItem#IsVisible">
            <summary>
            Indicates whether this column is visible.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.RowLayoutColumnInfoTypeConverter">
            <summary>
            RowLayoutTypeConverter type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.RowLayoutColumnInfoTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo.RowLayoutColumnInfoTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnLayoutInfo">
            <summary>
            Class for holding row layout information for a column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnLayoutInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection">
            <summary>
            RowLayoutColumnInfosCollection class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the item in the collection that has the
            passed in key or -1 if key not found.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.GetItem(System.String)">
            <summary>
            Returns the cell of the columns that has the key
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.GetItem(System.Int32)">
            <summary>
            Returns the cell at the specified index
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.OnDispose">
            <summary>
            Called when the object is being disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.Reset">
            <summary>
            Resets the object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.AddRange(Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo[])">
            <summary>
            Adds a range of RowLayoutColumnInfo objects.
            </summary>
            <param name="ciArr"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.Count">
            <summary>
            Overridden. Returns the count.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.InitialCapacity">
            <summary>
            Property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.Item(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            indexer (by column)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollectionConverter">
            <summary>
            RowLayoutsCollectionConverter Class
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollectionConverter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns true
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfosCollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns porperty descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor">
            <summary>
            RowLayoutColumnInfosCollectionPropertyDescriptor class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.#ctor(Infragistics.Win.UltraWinGrid.RowLayoutColumnInfo,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="ci"></param>
            <param name="name"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Returns band object
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.Category">
            <summary>
            Gets category
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.ResourceName">
            <summary>
            Gets/SEts resource name
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.ResourceValue">
            <summary>
            Gets resource value
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.ComponentType">
            <summary>
            Gets component type
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.IsReadOnly">
            <summary>
            Return false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutColumnInfoPropertyDescriptor.PropertyType">
            <summary>
            Gets property type
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutsCollection">
            <summary>
            RowLayoutsCollection class.
            </summary>
            <remarks>
            <p><seealso cref="T:Infragistics.Win.UltraWinGrid.RowLayout"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.UseRowLayout"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.RowLayoutColumnInfo"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Constructor.
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Add(System.String)">
            <summary>
            Creates a new RowLayout object with the specified key and adds it to the collection. Keys have to be unique.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Add">
            <summary>
            Creates a new RowLayout object and adds it to the collection. It uses an empty key ("") as the key of the new object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Remove(Infragistics.Win.UltraWinGrid.RowLayout)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at specified index in the collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.AddRange(Infragistics.Win.UltraWinGrid.RowLayout[])">
            <summary>
            Adds a range of row layout objects.
            </summary>
            <param name="rowLayouts"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.OnDispose">
            <summary>
            Called when the object is being disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.ToString">
            <summary>
            Always returns empty string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.InitialCapacity">
            <summary>
            Property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutsCollection.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutsCollectionConverter">
            <summary>
            RowLayoutsCollectionConverter Class
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollectionConverter.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns true
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutsCollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns porperty descriptor
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor">
            <summary>
            RowLayoutPropertyDescriptor class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.#ctor(Infragistics.Win.UltraWinGrid.RowLayout,System.String)">
            <summary>
            constructor
            </summary>
            <param name="rowLayout"></param>
            <param name="name"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Returns row layout object
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Does nothing
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Returns false
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.Category">
            <summary>
            Gets category
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.ResourceName">
            <summary>
            Gets/SEts resource name
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.ResourceValue">
            <summary>
            Gets resource value
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.ComponentType">
            <summary>
            Gets component type
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.IsReadOnly">
            <summary>
            Return false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowLayoutPropertyDescriptor.PropertyType">
            <summary>
            Gets property type
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ValuePropertyDescriptor.#ctor(System.Type,Infragistics.Win.UltraWinGrid.UltraGridBand,System.String)">
            <summary>
            Contructor
            </summary>
            <param name="type">Element type in the list objects.</param>
            <param name="band"></param>
            <param name="name"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ValuePropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Component is an instance of UltraGridRow for which to set
            the value to the bound list.
            </summary>
            <param name="rowObject"></param>
            <param name="value"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ValuePropertyDescriptor.IsReadOnly">
            <summary>
            return this.band.IsReadOnly
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowEnumerator">
            <summary>
            Enumerator for a collection of rows
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowEnumerator.#ctor(Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="rows"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowEnumerator.#ctor(Infragistics.Win.UltraWinGrid.SelectedRowsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="rows"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next row in the collection.
            </summary>
            <returns><b>True</b> if the enumerator was successfully advanced to the next element; <b>false</b> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollbarUIElement">
            <summary>
            RowScrollbarUIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollbarUIElement.RowScrollRegion">
            <summary>
            returns the associated row scroll region
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollRegion">
            <summary>
            Defines a region that scrolls rows. Adjacent row scroll regions are separated by splitter bars.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.#ctor(System.Int32)">
            <summary>
            contructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.ShouldSerialize">
            <summary>
            Returns true is any of the properties have been
            set to non-default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.Reset">
            <summary>
            Resets all properties back to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.SetPivotItem(Infragistics.Win.UltraWinGrid.GridItemBase)">
            <summary>
            Keeps track of pivot item for extended selection procesing
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.Scroll(Infragistics.Win.UltraWinGrid.RowScrollAction)">
            <summary>
            Scrolls a scrolling region by the specified increment.
            </summary>
            <remarks>
            <p class="body">Invoke this method to scroll a scrolling region.</p>
            <p class="body">When a rowscrollregion is scrolled, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">The <b>ScrollCellIntoView</b>, <b>ScrollColumnIntoView</b>, <b>ScrollGroupIntoView</b>, and <b>ScrollRowIntoView</b> methods can be invoked to scroll an object into a scrolling region's viewable area. </p>
            </remarks>
            <param name="action"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.ScrollCellIntoView(Infragistics.Win.UltraWinGrid.UltraGridCell,Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            Scrolls the specified cell into view for a scrolling region.
            </summary>
            <remarks>
            <p class="body">Invoke this method to ensure that a cell is viewable in a column or row scrolling region.</p>
            <p class="body">If this method is invoked for a colscrollregion and the column is already in the viewable area of the region, this method does not perform any scrolling.</p>
            <p class="body">If the colscrollregion is scrolled as a result of invoking this method, the value of the column scrolling region's <b>Position</b> property changes and the <b>BeforeColRegionScroll</b> event is generated. If the rowscrollregion is scrolled as a result of invoking this method, the <b>BeforeRowRegionScroll</b> event is generated.</p>
            <p class="body">The <b>Scroll</b>, <b>ScrollColumnIntoView</b>, <b>ScrollGroupIntoView</b>, and <b>ScrollRowIntoView</b> methods can also be invoked to scroll an object into a scrolling region's viewable area.</p>
            </remarks>
            <param name="cell"></param>
            <param name="colScrollRegion"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.Split">
            <summary>
            Splits the region in half.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.Split(System.Int32)">
            <summary>
            Splits a scrolling region into two scrolling regions. 
            </summary>
            <remarks>
            <p class="body">Invoke this method to split one scrolling region into two scrolling regions. This method returns a ColScrollRegion object or a RowScrollRegion object that corresponds to the new scrolling region that is created by the split.</p>
            <p class="body">ColScrollRegions are split from right to left, with the new region created by the split appearing to the left of the existing region. RowScrollRegions are split from bottom to top, with the new region created by the split appearing above the existing region.</p>
            <p class="body">Specifying <i>width</i> when splitting a ColScrollRegion will set the width of the new region (leftmost of the two resulting ColScrollRegions.) Specifying <i>height</i> when splitting a RowScrollRegion will set the height of the new region (topmost of the two resulting RowScrollRegions.)</p>
            <p class="body">When a ColScrollRegion is split, the <b>BeforeColRegionSplit</b> and the <b>AfterColRegionSplit</b> events are generated. When a RowsScrollRegion is split, the <b>BeforeRowRegionSplit</b> and the <b>AfterRowRegionSplit</b> events are generated.</p>
            </remarks>
            <param name="extent">Specifying 0 for extent will split the specified region in half. </param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.GetUIElement(Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            gets a RowColRegionIntersectionUIElement for this RowScrollRegion and
            csr ColScrollRegion
            </summary>
            <param name="csr"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.ScrollRowIntoView(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Scrolls passed in row into view.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.GetScrollPosition">
            <summary>
            Returns the scroll position of the first row
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.ResetScrollInfo">
            <summary>
            Sets the scollinfo of the scrollbar to match its new size and
            the region's extent
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.AreRowsSelectionCompatible(Infragistics.Win.UltraWinGrid.UltraGridRow,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Returns true if two rows are selection compatible. 
            Whether they belong to the same band and if they are at the
            same level.
            </summary>
            <param name="row1"></param>
            <param name="row2"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.OnDispose">
            <summary>
            Called when the object is disposed of.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.IsVerticalScrollbar">
            <summary>
            Returns true since this region has a vertical scrollbar
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.IsActiveScrollRegion">
            <summary>
            Returns true if the row scroll region is the same instance as the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveRowScrollRegion"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.VisibleRows">
            <summary>
            Returns a reference to a VisibleRows collection of the Row objects that are currently displayed in a rowscrollregion. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a VisibleRows collection that can be used to retrieve references to the Row objects that are currently displayed in a rowscrollregion. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">As rows in the rowscrollregion are scrolled into and out of view, their corresponding Row objects are added to and removed from the VisibleRows collection returned by this property.</p>
            <p class="body">Rows that have their <b>Hidden</b> property set to True, and therefore are not displayed, are not included in the collection.</p>
            <p class="body">The <b>Count </b>property of the returned VisibleRows collection can be used to determine the number of rows currently displayed in the rowscrollregion.</p>
            <p class="body">NOTE: The visible rows collection will always contain an extra row scrolled out of view at the bottom. This is helpful in determining the next row that will come into view when the row scroll region is scrolled down by one row. See example section to find out the dimensions of visible rows and if they are actually visible on the screen.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.Rect">
            <summary>
            The overall rect of this row scrolling region
            (spanning all column scrolling regions)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.FirstRow">
            <summary>
            Gets or sets the first visible row in this row scroll region.
            </summary>
            <remarks>
            <p class="body">FirstRow property can be used to access the first visible row. It can also be used to set the first visible row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.Height">
            <summary>
            Returns or sets the height of an object in container units.
            </summary>
            <remarks>
            <p class="body">The <b>Height</b> property is used to determine the vertical dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For the RowScrollRegion object, this property always includes the horizontal scrollbar's <B>Height</B> for the ColScrollRegion.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.Width">
            <summary>
            Returns or sets the width of an object in container units.
            </summary>
            <remarks>
            <p class="body">The <b>Width</b> property is used to determine the horizontal dimension of an object. It is generally expressed in the scale mode of the object's container, but can also be specified in pixels.</p>
            <p class="body">For the ColScrollRegion object, this property always includes the vertical scrollbar's <b>Width</b> for the RowScrollRegion.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.SafeOrigin">
            <summary>
            Always returns a vaild origin even if it hasn't been set yet.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.Index">
            <summary>
            The index of this RowScrollRegion in the RowScrollRegions collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegion.Top">
            <summary>
            gets the top of the scroll region in client coordinates
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollRegion.RowScrollRegionTypeConverter">
            <summary>
            RowScrollRegion type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.RowScrollRegionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegion.RowScrollRegionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection">
            <summary>
            Collection of all row scrolling regions in a layout
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            contructor
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.Add(System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.OnDispose">
            <summary>
            Called when this object is disposed of
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.Remove(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            Remove a region from the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.Reset">
            <summary>
            Resets all properties back to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.CopyTo(Infragistics.Win.UltraWinGrid.RowScrollRegion[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.IsReadOnly">
            <summary>
            overridden method indicates that the collection can not
            be modified
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.IsSplitBoxVisible">
            <summary>
            True is the little split box above of the vertical
            scrollbar is visible. This property is read-only and is 
            determined based on the number of RowScrollRegions
            and the value of the layout's MaxRowScrollRegions
            property.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.RowScrollRegionEnumerator">
            <summary>
            inner class implements IEnumerator interface
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.RowScrollRegionEnumerator.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection)">
            <summary>
            constructor
            </summary>
            <param name="rowScrollRegions"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowScrollRegionsCollection.RowScrollRegionEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSelectorUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            Since a Row Selector element doesn't have any child elements
            PositionChildElements doesn't do anything
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.OnClick">
            <summary>
            Sets active row to this row
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.GetAdjustableCursor(System.Drawing.Point)">
            <summary>
            The cursor to use over the adjustable area of the element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.GetAdjustmentRange(System.Drawing.Point,Infragistics.Win.UIElementAdjustmentRangeParams@)">
            <summary>
            Returns the range limits for adjusting the element in either or both
            dimensions. It also returns the initial rects for the vertical and horizontal
            bars that will need to be inverted during the mouse drag operation.
            </summary>
            <param name="point">point</param>
            <param name="range">Returned limits</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.DrawImage(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws the row selector icons (if any)
            </summary> 
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.Row">
            <summary>
            The associated Row object (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks><para>The border style of cells, rows, and headers can be set 
            by the BorderStyleCell, BorderStyleRow, and BorderStyleHeader properties 
            respectively.</para>
            <para>The border style of the AddNew box buttons can be set by the 
            ButtonBorderStyle property.</para>
            <para>Note that not all styles are available on all operating systems. 
            If the version of the OS that your program is running on does not support 
            a particular border style, borders formatted with that style will be 
            drawn using solid lines.</para></remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorUIElement.Adjustable">
            <summary>
            Returns true row can be resized (using row selector area)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement">
            <summary>
            RowSelectorHeaderUIElement
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Override InitAppearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <p class="body">Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement.RequiresSeparator">
            <summary>
            Returns a boolean indicating if the item requires the rendering a separator.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSelectorHeaderUIElement.RowsCollection">
            <summary>
            Returns the RowsCollection object associated with the UIElement. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>RowsCollection</b> property of an object refers to a collection of Infragistics.Win.UltraWinGrid.UltraGridRow objects.</p>
            <p class="body">The UltraGridRow objects in a Rows Collection make up a data island. The top-level Rows of a grid are all part of a single data island.</p>
            <p class="body">If the grid is hierarchical, then one or more top-level UltraGridRow objects will have its own Rows Collection, which contains one or more Row objects.</p>
            <p class="body">This creates a tree structure of parent and child rows that is used to display hierarchical data.</p>                                                                                                                                                                                                                                                                     
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSplitBoxUIElement">
            <summary>
            The element that appears above the vertical 
            scrollbar that is used for spliiting RowScrollRegions
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitBoxUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden.
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitBoxUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitBoxUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSplitBoxUIElement.BorderSides">
            <summary>
            Flags indicating which sides of the element to
            draw borders.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement">
            <summary>
            The element that appears to the top of the vertical
            scrollbar that is used fro spliiting RowScrollRegions
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Overridden.
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.SupportsUpDownAdjustmentsFromPoint(System.Drawing.Point)">
            <summary>
            Returns true if the element can be moved or resized vertically
            </summary>
            <param name="point">In client coordinates</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.RowScrollRegion">
            <summary>
            Row Splitter bars row scroll region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSplitterBarUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks><para>The border style of cells, rows, and headers can be set 
            by the BorderStyleCell, BorderStyleRow, and BorderStyleHeader properties 
            respectively.</para>
            <para>The border style of the AddNew box buttons can be set by the 
            ButtonBorderStyle property.</para>
            <para>Note that not all styles are available on all operating systems. 
            If the version of the OS that your program is running on does not support 
            a particular border style, borders formatted with that style will be 
            drawn using solid lines.</para></remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement">
            <summary>
            ui elment for button on the column headers for showing the summaries dialog.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>RowSummariesButtonUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws small arrow in the foreground
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            does nothing as SwapButtonUIElement does not get a focus
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.OnMouseEnter">
            <summary>
            called when mouse enters this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.OnMouseLeave">
            <summary>
            called when the mouse leaves this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowSummariesButtonUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks>
            <para>The border style of cells, rows, and headers can be set by the BorderStyleCell, BorderStyleRow, and BorderStyleHeader properties respectively.</para>
            <para>The border style of the AddNew box buttons can be set by the ButtonBorderStyle property.</para>
            <para>Note that not all styles are available on all operating systems. If the version of the OS that your program is running on does not support a particular border style, borders formatted with that style will be drawn using solid lines.</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.RowUIElement">
            <summary>
            The DataAreaUIElement contains the row and column scrolling
            regions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.OnDispose">
            <summary>
            Called when the object is being disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns an object of requested type that relates to the
            element or null. 
            </summary> 
            <param name="type">The requested type or null to pick up default context object. </param>
            <param name="checkParentElementContexts"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.InitializeRow(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Initializes the row element with the passed in row.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.PositionChildElementsForCardArea">
            <summary>
            Positions elements for rows that are CardView area rows.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.ApplyAdjustment(System.Drawing.Point)">
            <summary>
            Called after a move/resize operation. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.GetAdjustmentRange(System.Drawing.Point,Infragistics.Win.UIElementAdjustmentRangeParams@)">
            <summary>
            Returns the range limits for adjusting the element in either or both
            dimensions. It also returns the initial rects for the vertical and horizontal
            bars that will need to be inverted during the mouse drag operation.
            </summary>
            <param name="point">The point where the mouse is in client coordinates</param>
            <param name="range">Returned limits</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowUIElement.OnElementAdjustmentStart(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called when a mousedown is received and a resize operation is started..
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.SubObjectPropChangeHandler">
            <summary>
            Returns the event handler that notifies OnSubObjectPropChanged
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.RowDisposedHandler">
            <summary>
            Returns the event handler that notifies OnSubObjectPropChanged
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.Row">
            <summary>
            The associated Row object (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks><para>The border style of cells, rows, and headers can be set 
            by the BorderStyleCell, BorderStyleRow, and BorderStyleHeader properties 
            respectively.</para>
            <para>The border style of the AddNew box buttons can be set by the 
            ButtonBorderStyle property.</para>
            <para>Note that not all styles are available on all operating systems. 
            If the version of the OS that your program is running on does not support 
            a particular border style, borders formatted with that style will be 
            drawn using solid lines.</para></remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.ClipChildren">
            <summary>
            Returning true causes all drawing of this element's children to be explicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.SupportsLeftRightAdjustmentsFromRightBorder">
            <summary>
            True if this element supports left to right adjustments by grabbing the right border
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.IsAccessibleElement">
            <summary>
            Indicates if the element supports accessibility
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.RowUIElement.AccessibilityInstance">
            <summary>
            Returns the accesible object representing this row.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.Selected">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.Selected.#ctor">
            <summary>
            Returns a reference to a Selected object containing collections of all the selected objects in the grid. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Selected</b> property of the UltraWinGrid is used to work with any of the currently selected items in the grid. It provides access to the Selected object, which contains three collection sub-objects. Each collection holds one type of selected object; there are collections for rows, columns and cells. Whenever an UltraGridRow, UltraGridColumn or UltraGridCell object in the grid is selected, it is added to the corresponding collection of the Selected object. Deselecting an object removes it from the collection.</p>
            <p class="body">You can use the <b>Selected</b> property to iterate through the selected items of any type, or to examine or change the properties of any selected item.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.Selected.Cells">
            <summary>
            Returns a reference to a collection of the selected UltraGridCell objects. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a collection of UltraGridCell objects that can be used to retrieve references to the UltraGridCell objects that are currently selected. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">As cells are selected and deselected, their corresponding UltraGridCell objects are added to and removed from the SelectedCells collection returned by this property. When a cell is selected or deselected, the <b>BeforeSelectChange</b> event is generated.</p>
            <p class="body">The <b>Count</b> property of the returned SelectedCells collection can be used to determine the number of cells that either belong to a row or are currently selected.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.Selected.Rows">
            <summary>
            Returns a reference to a collection of the selected UltraGridRow objects. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a collection of UltraGridRow objects that can be used to retrieve references to the UltraGridRow objects that are currently selected. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">As rows are selected and deselected, their corresponding UltraGridRow objects are added to and removed from the SelectedRows collection returned by this property.</p>
            <p class="body">When a row is selected or deselected, the <b>BeforeSelectChange</b> event is generated.</p>
            <p class="body">The <b>Count</b>property of the returned SelectedRows collection can be used to determine the number of rows currently selected.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.Selected.Columns">
            <summary>
            Returns a reference to a collection of the selected UltraGridColumn objects. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a collection of UltraGridColumn objects that can be used to retrieve references to the UltraGridColumn objects that are currently selected. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">As columns are selected and deselected, their corresponding UltraGridColumn objects are added to and removed from the SelectedCols collection returned by this property.</p>
            <p class="body">When a column is selected or deselected, the <b>BeforeSelectChange</b> event is generated.</p>
            <p class="body">The <b>Count</b>property of the returned SelectedCols collection can be used to determine the number of columns currently selected.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SelectedCellsCollection">
            <summary>
            Summary description for SelectedCellsCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.Clear">
            <summary>
            Clears the collection unselecting any selected cells.
            </summary>
            <remarks>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.AddRange(Infragistics.Win.UltraWinGrid.UltraGridCell[])"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Selected"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.AddRange(Infragistics.Win.UltraWinGrid.UltraGridCell[])">
            <summary>
            Selects cells contained in the passed in array keeping existing selected cells selected.
            </summary>
            <param name="cells"></param>
            <remarks>
            <p>This method can be used to select a range of cells. It will keep the existing selected cells and select the passed in cells.</p>
            <p>You can use UltraGridCell.Selected property to select or unselect individual cells.</p>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.Clear"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridCell.Selected"/></p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.CopyTo(Infragistics.Win.UltraWinGrid.UltraGridCell[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.IsReadOnly">
            <summary>
            returns whether the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.Item(System.Int32)">
            <summary>
            Index into collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedCellsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SelectedColsCollection">
            <summary>
            Summary description for SelectedColsCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.GetEnumerator">
            <summary>
            returns a type safe enumerator
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.Clear">
            <summary>
            Clears the collection unselecting any selected cols.
            </summary>
            <remarks>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.AddRange(Infragistics.Win.UltraWinGrid.ColumnHeader[])"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Selected"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.AddRange(Infragistics.Win.UltraWinGrid.ColumnHeader[])">
            <summary>
            Selects column headers contained in the passed in array keeping the existing selected column headers selected.
            </summary>
            <param name="columnHeaders"></param>
            <remarks>
            <p>This method can be used to select a range of column headers. It will keep the existing selected column headers and select the passed in column headers.</p>
            <p>You can use HeaderBase.Selected property to select or unselect individual column headers.</p>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.Clear"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.HeaderBase.Selected"/></p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedColsCollection.CopyTo(Infragistics.Win.UltraWinGrid.ColumnHeader[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedColsCollection.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedColsCollection.IsReadOnly">
            <summary>
            returns whether the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedColsCollection.Item(System.Int32)">
            <summary>
            Index into collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedColsCollection.List">
            <summary>
            The list that contains the item references 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedColsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ColumnHeaderEnumerator">
            <summary>
            Enumerator for a collection of ColumnHeaders
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ColumnHeaderEnumerator.#ctor(Infragistics.Win.UltraWinGrid.SelectedColsCollection)">
            <summary>
            constructor
            </summary>
            <param name="columnHeaders"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.ColumnHeaderEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SelectedRowsCollection">
            <summary>
            Summary description for SelectedRowsCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.GetEnumerator">
            <summary>
            Returns a type safe enumerator.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.Clear">
            <summary>
            Clears the collection unselecting any selected rows.
            </summary>
            <remarks>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.AddRange(Infragistics.Win.UltraWinGrid.UltraGridRow[])"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Selected"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.AddRange(Infragistics.Win.UltraWinGrid.UltraGridRow[])">
            <summary>
            Selects rows contained in passed in rows array keeping the existing selected rows selected.
            </summary>
            <param name="rows"></param>
            <remarks>
            <p>This method can be used to select a range of rows. It will keep the existing selected rows and select the passed in rows.</p>
            <p>You can use UltraGridRow.Selected property to select or unselect individual rows.</p>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.Clear"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridRow.Selected"/></p>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.CopyTo(Infragistics.Win.UltraWinGrid.UltraGridRow[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.IsReadOnly">
            <summary>
            Indicates whether the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.Item(System.Int32)">
            <summary>
            Index into collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SelectedRowsCollection.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement">
            <summary>
            Daws the connector lines between sibling rows
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.UltraGridBand,Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Initializes a new <b>SiblingRowConnectorUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="parentBand">Associated parent <b>Band</b></param>
            <param name="parentRow">Associated parent <b>Row</b></param>
            <param name="firstChildConnector">True if this is the first child connector</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            does nothing since this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            draws the element
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.OnMouseHover">
            <summary>
            Activates the tooltip for the row connector vert line. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.OnMouseLeave">
            <summary>
            Called when mouse has left the ui element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.OnDoubleClick(System.Boolean)">
            <summary>
            Called when the use dblclicks with the left mouse btn
            over the row connector line 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.WantsMouseHoverNotification">
            <summary>
            Return true if this element wants to be notified when the mouse hovers over it. This property is read-only.
            </summary>
            <remarks>Returns true since row connectos need MouseHover notifications for showing the tooltips.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SiblingRowConnectorUIElement.Cursor">
            <summary>
            Returns the cursor that should be used when the mouse 
            is over the element. By default this just walks up
            the parent chain by returning its parent's cursor
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SerializedColumnID">
            <summary>
            Internal class used for serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SerializedColumnID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SortedColumnsCollection">
            <summary>
            Returns a collection of sorted column objects. This property is not 
            available at design-time.
            </summary><remarks><para>The SortedCols property is used to access the 
            collection of UltraGridColumn objects associated with an Band. An UltraGridColumn 
            object represents a single column in the grid; it usually corresponds to a 
            data field in the recordset underlying the grid, and it has properties that 
            determine the appearance and behavior of the cells that make up the column.</para>
            <para>The UltraGrid can automatically sort the contents of columns 
            without the addition of any code, provided the control is able to preload
            the rows in the band. Preloading is enabled by default if the recordset
            bound to the band contains less than 1000 rows. 
            If you do not want to preload rows, but you still want to provide column 
            sorting in the control, you must implement column sorting yourself using 
            the <b>BeforeSortChange</b> and <b>AfterSortChange</b> events.</para><para>
            Column headers can display a sort indicator in a column's header. 
            When clicked and the <b>HeaderClickAction</b> property is set to  
            SortSingle or SortMulti, 
            the <b>SortIndicator</b> property is set to specify the order in which the 
            column will be sorted, and the column is added to a special Columns 
            collection just for sorted columns. This is the collection that is 
            accessed by the SortedCols property.</para><para>In addition to adding 
            the column to the UltraGridColumns collection accessed by SortedCols, the 
            control fires the <b>BeforeSortChange</b> and <b>AfterSortChange</b> events so that 
            you can examine the contents of the collection, check the value of the 
            <b>SortIndicator</b> property of each column, and optionally perform the sort.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Constructor
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Remove(Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Remove a sorted column from the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Insert(System.Int32,Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Insert the column as a group by column setting IsGroupByColumn
            property of the column to true as well. index must be less or
            equal to the index of first non-group by column in the collection.
            (There can't be a group by column surrounded by non-group by
            columns in the sorted collection).
            </summary>
            <param name="insertIndex"></param>
            <param name="column"></param>
            <param name="groupBy"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a column to the sorted collection
            </summary>
            <param name="index">Index in collection</param>
            <param name="value">Must be a column object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Boolean,System.Boolean)">
            <summary>
             Adds a column to the collection
            </summary>
            <param name="column"></param>
            <param name="descending"></param>
            <param name="groupBy">Adds a column to the collection</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Add(Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Adds a column to the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Add(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a column to the sorted column collection
            </summary>
            <param name="key"></param>
            <param name="descending"></param>
            <param name="groupBy">Indicates whether the column is a groupby column</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Add(System.String,System.Boolean)">
            <summary>
            Adds a column to the sorted column collection
            </summary>
            <param name="key"></param>
            <param name="descending"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Remove(System.Int32)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Remove(System.String)">
            <summary>
            Remove column from collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a sorted column from the collection
            </summary>
            <param name="index">Index to be removed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.RefreshSort(System.Boolean)">
            <summary>
            Re-Sorts the sorted columns collection
            </summary>
            <param name="regroupBy">
            True to regroup group by rows.
            </param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Band">
            <summary>
            Band Property
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.IsFixedSize">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnsCollection.IsReadOnly">
            <summary>
            Returns false by default
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SortedColumnEnumerator">
            <summary>
            Enumerator for the SortedColumnsCollection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortedColumnEnumerator.#ctor(Infragistics.Win.UltraWinGrid.SortedColumnsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="sortedColumns"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SortedColumnEnumerator.Current">
            <summary>
            Type-safe version of Current 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement">
            <summary>
            	Summary description for SortIndicatorUIElement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement.#ctor(Infragistics.Win.UIElement,System.Boolean)">
            <summary>
            Initializes a new <b>SortIndicatorUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
            <param name="ascending">True if ascending, otherwise false</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default borders rendering - does nothing
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default Focus drawing - does nothing
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SortIndicatorUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Render the Sort Indicator in the Foreground
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryDialog">
            <summary>
            Summary description for SummaryDialog.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.SummaryDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryDialog.SyncSummaryWithCheckBox(System.Boolean,Infragistics.Win.UltraWinGrid.SummaryType)">
            <summary>
            If the check box for the summary type is checked then adds that summary type to the summaries collection if it doesn't already exist. If the check box is unchecked, then it removes it.
            </summary>
            <param name="checkBoxChecked"></param>
            <param name="summaryType"></param>
            <returns>Returns true if a summary was added or removed false otherwise.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement">
            <summary>
            Summary footer ui element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinGrid.RowsCollection)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
            <param name="rows"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns null or an object of requested type that relates to the element.
            </summary>
            <param name="type"></param>
            <param name="checkParentElementContexts"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.ContinueDescendantSearch(System.Type,System.Object[])">
            <summary>
            This method is called from <see cref="M:Infragistics.Win.UIElement.GetDescendant(System.Type,System.Object[])"/> as an optimization to
            prevent searching down element paths that can't possibly contain the element that is being searched for. 
            </summary>
            <remarks><seealso cref="M:Infragistics.Win.UIElement.ContinueDescendantSearch(System.Type,System.Object[])"/></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryFooterUIElement.ClipChildren">
            <summary>
            Overridden. Returning true causes all drawing of this element's child elements to be
            expicitly clipped to the area inside this elements borders
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FixedSummaryAreaUIElement">
            <summary>
            Fixed area of summary footer.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedSummaryAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedSummaryAreaUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default backcolor drawing just does a FillRectangle with the backcolor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedSummaryAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FixedSummaryAreaUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FreeFormSummaryAreaUIElement">
            <summary>
            Free-form area of summary footer.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FreeFormSummaryAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FreeFormSummaryAreaUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default backcolor drawing just does a FillRectangle with the backcolor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FreeFormSummaryAreaUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FreeFormSummaryAreaUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FreeFormSummaryLineUIElement">
            <summary>
            A level in free form summary area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FreeFormSummaryLineUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FreeFormSummaryLineUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default backcolor drawing just does a FillRectangle with the backcolor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FreeFormSummaryLineUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FreeFormSummaryLineUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.FixedSummaryLineUIElement">
            <summary>
            A level in free form summary area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedSummaryLineUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedSummaryLineUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default backcolor drawing just does a FillRectangle with the backcolor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.FixedSummaryLineUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.FixedSummaryLineUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryValueUIElement">
            <summary>
            A level in free form summary area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.Contains(System.Drawing.Point,System.Boolean)">
            <summary>
            Checks if the point is over the element. This may be 
            overridden in derived classes for specialized hit test logic.
            </summary>
            <param name="point">In client coordinates</param>
            <param name="ignoreClipping">Specifieds if we should ignore clipping or not</param>
            <returns>Returns true if the point is over the element.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.GetContext(System.Type,System.Boolean)">
            <summary>
            Returns null or an object of requested type that relates to the element.
            </summary>
            <param name="type"></param>
            <param name="checkParentElementContexts"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.OnMouseLeave">
            <summary>
            Called when mouse leaves the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.OnMouseHover">
            <summary>
            Overridden method called whenever the mouse hovers on the element
            it displays a tooltip for the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.ClipSelf">
            <summary>
            Returning true causes all drawing of this element to be expicitly clipped
            to its region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.Region">
            <summary>
            Returns the region of this element. The deafult returns the element's
            Rect as a region. This method can be overriden to supply an irregularly
            shaped region 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValueUIElement.WantsMouseHoverNotification">
            <summary>
            Return true if this element wants to be notified when the mouse hovers over it. This property is read-only.
            </summary>
            <remarks>Returns true since cell ui elemnts need MouseHover notifications for showing the tooltips.</remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryFooterCaptionUIElement">
            <summary>
            UIElement for the caption area of the summary footers.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterCaptionUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initialize the appearance structure for this element
            </summary>
            <param name="appearance">The apperance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryFooterCaptionUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryFooterCaptionUIElement.BorderStyle">
            <summary>
            <see cref="T:Infragistics.Win.UIElementBorderStyle"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummarySettings">
            <summary>
            SummarySettings object represents a summary. Objects of this type are also refered to as summaries.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Summaries"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.#ctor(System.String,Infragistics.Win.UltraWinGrid.SummaryType,System.String,System.String,System.Int32,System.Boolean,System.String,System.Int32,Infragistics.Win.UltraWinGrid.SummaryPosition,System.String,System.Int32,System.Boolean)">
            <summary>
            Constructor. For internal use only. Use <see cref="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryPosition)"/> to add summaries instead.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.#ctor">
            <summary>
            Constructor. For internal use only. Use <see cref="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryPosition)"/> to add summaries instead.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used to deserialization to initialize a new instance of the class with the serialized property values
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ToString">
            <summary>
            Returns an empty string so the property window displays nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetDisplayInGroupBy">
            <summary>
            Resets DisplayInGroupBy property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetHidden">
            <summary>
            Resets Hidden property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetAppearance">
            <summary>
            Resets Appearance property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetSummaryPositionColumn">
            <summary>
            Resets SummaryPositionColumn property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetSummaryPosition">
            <summary>
            Resets SummaryPosition property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetDisplayFormat">
            <summary>
            Resets the DisplayFormat to it's default value which is null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetLines">
            <summary>
            Resets Lines property to it's default value of 1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetFormula">
            <summary>
            Resets Formula property to it's default value of null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ResetShowCalculatingText">
            <summary>
            Resets the property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.Refresh">
            <summary>
            Recalculates the summaries associated with this SummarySettings object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeDisplayFormat">
            <summary>
            Retruns true if DisplayFormat property is assigned a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeLines">
            <summary>
            Retruns true if Lines property is assigned a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeHidden">
            <summary>
            Returns true if Hidden property is assigned a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeAppearance">
            <summary>
            Returns true if Appearance property is assigned a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeSummaryPositionColumn">
            <summary>
            Returns true if SummaryPositionColumn property is assigned a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeSummaryPosition">
            <summary>
            Returns true if SummaryPosition property is assigned a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeDisplayInGroupBy">
            <summary>
            Returns true if DisplayInGroupBy property is assigned a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeFormula">
            <summary>
            Returns true if formula property is assigned a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ShouldSerializeShowCalculatingText">
            <summary>
            Returns true if the property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.InternalInitializeFrom(Infragistics.Win.UltraWinGrid.SummarySettings)">
            <summary>
            Initialize current object from source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.Key">
            <summary>
            Returns or sets a value that uniquely identifies an object in a collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.Band">
            <summary>
            Returns the associated band.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryType">
            <summary>
            Type of summary to calculate.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.CustomSummaryCalculator"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.CustomSummaryCalculator">
            <summary>
            Gets or sets the ICustomSummaryCalculator object used for calculating custom summary. This only applies if <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryType"/> is <see cref="F:Infragistics.Win.UltraWinGrid.SummaryType.Custom"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.SourceColumn">
            <summary>
            Gets or sets the source column. Source column's data get summarized.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.DisplayFormat">
            <summary>
            A substitution string used for formatting the summary. For example: "{0}", "Total = {0}".
            </summary>
            <remarks>
            <p class="body">The format of the string is the same as string.Format method's format argument. As a matter of fact, the calculated summary value will be formatted by calling string.Format method and passing the value of this property and the calculated summary figure. In case an invalid format is specified, a default format will be used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.Lines">
            <summary>
            Gets or sets the number of text lines summary associated with this summary settings object will have.
            </summary>
            <remarks>
            <p class="body">If the <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.DisplayFormat"/> is as such that <see cref="P:Infragistics.Win.UltraWinGrid.SummaryValue.SummaryText"/> is going to result in a multiline text, then this property should be set to that number of linesvalue, otherwise default value of 1 will be used text will be clipped.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.DisplayInGroupBy">
            <summary>
            Specifies whether to display the associated summary in group by rows if there are any. Default value is true.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryPosition">
            <summary>
            Specifies where summary footers to display the summary. If its value is UseColumn, then the summary will be displayed under column returned by SummaryPositionColumn property in the summary footers. If its Left or Right they will be displayed in the free-form line of the summary footers.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryPositionColumn">
            <summary>
            Column under which this property will be displayed. If SummaryPosition is something other than UseColumn, this will be ignored. This column must be from the band that this SummarySettings object is assigned to.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.Hidden">
            <summary>
            Indicates if associated summary in the summary footers will be hidden. DisplayInGroupBy will still be honored even if this is true.
            </summary>
            <remarks>
            <p class="body">You can set Hidden to true to hide the summary. This can be useful if you just want the calculated summary value but not have it show up it in the grid.</p>
            <p class="body">NOTE: Summaries with <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryPosition"/> set to <see cref="F:Infragistics.Win.UltraWinGrid.SummaryPosition.UseSummaryPositionColumn"/> will be hidden if <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryPositionColumn"/> column is hidden. This rule does not apply to free for summaries, ones with <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryPosition"/> set to something other than <see cref="F:Infragistics.Win.UltraWinGrid.SummaryPosition.UseSummaryPositionColumn"/> since they are not shown under a particular column but rather in free form area.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.DisplayInGroupBy"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.Appearance">
            <summary>
            Appearance that will be applied to summaries associated with this SummerySettings object.
            </summary>
            <remarks>
            <p class="body">Font settings off the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryValueAppearance"/> off the Override object are used to calculate the necessary height of the summary footer and the summary values. So if you are planning on modifying the size of font for individual SummarySettings or SummaryValue objects, make sure that a font just as big is assigned to SummaryValueAppearance off the Override object for the band or the layout.</p>
            <p class="body"><b>Note:</b>  This appearance is not applied to summaries displayed in group by rows.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.HasAppearance">
            <summary>
            Returns true if appearance object for Appearance property has been allocated.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.Formula">
            <summary>
            Specifies the formula. <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property must be set to a valid instance of <see cref="T:Infragistics.Win.CalcEngine.IUltraCalcManager"/> for this property to have any affect. Also <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryType"/> property of this summary object must be set to <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryType"/>.
            </summary>
            <remarks>
            <p class="body"> <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property must be set to a valid instance of <see cref="T:Infragistics.Win.CalcEngine.IUltraCalcManager"/> for this property to have any affect. Also <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryType"/> property of this summary object must be set to <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.SummaryType"/>.</p>
            <p><seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Formula"/> <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/></p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.FormulaValueConverter">
            <summary>
            Interface for providing custom logic for converting formula results and the formula source values.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.ShowCalculatingText">
            <summary>
            Specifies whether summaries will display "#Calculating" in when calculating with an UltraCalcManager.
            </summary>
            <remarks>
            <p class="body">You can use <b>ShowCalculatingText</b> property to explicitly turn on or turn off the display of the text during calculations.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettings.FormulaAbsoluteName">
            <summary>
            Returns the absolute name of the column that you can use to refer to it in formulas.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummarySettings.SummarySettingsConverter">
            <summary>
            RowLayoutTypeConverter type converter.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.SummarySettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.SummarySettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummarySettings.ColumnsListUITypeEditor">
            <summary>
            Base class for a UITypeEditor that provides a list
            </summary>
            <remarks>
            <p class="body">Provides a dropdown list of items.</p>	
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ColumnsListUITypeEditor.GetListItems(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object,System.Object@)">
            <summary>
            Returns the set of items to show on the list.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <param name="currentEntry"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettings.ColumnsListUITypeEditor.ValidateEditItem(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object,System.Object)">
            <summary>
            Validates an item selected by the user on the list and returns it.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <param name="selectedEntry"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummarySettingsCollection">
            <summary>
            Collection of <see cref="T:Infragistics.Win.UltraWinGrid.SummarySettings"/> objects. <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Summaries"/> for more information.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.OnDispose">
            <summary>
            Called when the object is being disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.ToString">
            <summary>
            Returns an empty string so the property window displays nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryPosition)">
            <summary>
            Adds a new SummarySettings object created using the supplied arguments and returns that new summary settings object.
            </summary>
            <param name="key">Key that the new SummarySettings object will have. Duplicate keys are not allowed.</param>
            <param name="summaryType">SummaryType. With this overload, you must specify a non-Custom sumary type. Use a different overload for specifying custom summaries.</param>
            <param name="sourceColumn">Field that will be summarized.</param>
            <param name="summaryPosition">Specifies the place where the summary will be displayed in the grid.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">Creates a new SummarySettings object based on the passed in arguments and adds it to the collection.</p>
            <p class="body">If summaryType is SummaryType.Custom, then this overload will throw an exception. Use an overload that takes in an ICustomSummaryCalculator argument for specifying custom summaries.</p>
            <p class="body">SourceColumn is the column whose data is being summarized. The sourceColumn must be from the band associated with this SummarySettingsCollection or from one of the descendant bands.</p>
            <p class="body">If summaryPosition is <b>SummaryPosition.UseSummaryPositionColumn</b>, then it will be displayed under the source column.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryPosition)">
            <summary>
            Adds a new SummarySettings object created using the supplied arguments and returns that new summary settings object.
            </summary>
            <param name="summaryType">SummaryType. With this overload, you must specify a non-Custom sumary type. Use a different overload for specifying custom summaries.</param>
            <param name="sourceColumn">Field that will be summarized.</param>
            <param name="summaryPosition">Specifies the place where the summary will be displayed in the grid.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">Creates a new SummarySettings object based on the passed in arguments and adds it to the collection.</p>
            <p class="body">If summaryType is SummaryType.Custom, then this overload will throw an exception. Use an overload that takes in an ICustomSummaryCalculator argument for specifying custom summaries.</p>
            <p class="body">SourceColumn is the column whose data is being summarized. The sourceColumn must be from the band associated with this SummarySettingsCollection or from one of the descendant bands.</p>
            <p class="body">If summaryPosition is <b>SummaryPosition.UseSummaryPositionColumn</b>, then it will be displayed under the source column.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adds a new SummarySettings object created using the supplied arguments and returns that new summary settings object.
            </summary>
            <param name="key">Key that the new SummarySettings object will have. Duplicate keys are not allowed.</param>
            <param name="summaryType">SummaryType. With this overload, you must specify a non-Custom sumary type. Use a different overload for specifying custom summaries.</param>
            <param name="sourceColumn">Field that will be summarized.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">Creates a new SummarySettings object based on the passed in arguments and adds it to the collection.</p>
            <p class="body">If summaryType is SummaryType.Custom, then this overload will throw an exception. Use an overload that takes in an ICustomSummaryCalculator argument for specifying custom summaries.</p>
            <p class="body">Summary will be positioned under the sourceColumn.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adds a new SummarySettings object created using the supplied arguments and returns that new summary settings object.
            </summary>
            <param name="summaryType">SummaryType. With this overload, you must specify a non-Custom sumary type. Use a different overload for specifying custom summaries.</param>
            <param name="sourceColumn">Field that will be summarized.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">Creates a new SummarySettings object based on the passed in arguments and adds it to the collection.</p>
            <p class="body">If summaryType is SummaryType.Custom, then this overload will throw an exception. Use an overload that takes in an ICustomSummaryCalculator argument for specifying custom summaries.</p>
            <p class="body">Summary will be positioned under the sourceColumn.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.ICustomSummaryCalculator,Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryPosition,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adds a new SummarySettings object created using the supplied arguments and returns that new summary settings object.
            </summary>
            <param name="key">Key that the new SummarySettings object will have. Duplicate keys are not allowed.</param>
            <param name="summaryType">SummaryType. If you specify Custom, then a valid instance ICustomSummaryCalculator must be passed in as customSummaryCalculator.</param>
            <param name="customSummaryCalculator">Only required if SummaryType is Custom.</param>
            <param name="sourceColumn">Field that will be summarized.</param>
            <param name="summaryPosition">Specifies the place where the summary will be displayed in the grid.</param>
            <param name="summaryPositionColumn">Only required if summaryPosition is UseSummaryPositionColumn</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">Creates a new SummarySettings object based on the passed in arguments and adds it to the collection.</p>
            <p class="body">If summaryType is SummaryType.Custom, then you must also pass in a valid instance of ICustomSummaryCalculator for customSummaryCalculator argument. If SummaryType is something other than Custom, then this parameter is not required and can be null.</p>
            <p class="body">If summaryPosition is <b>SummaryPosition.UseSummaryPositionColumn</b>, then it will be displayed under summaryPositionColumn column. If summaryPositionColumn is not specified, then it will be displayed under the source column. This column must be from the same band this SummaryCollection is asscocited with. If summaryPosition is something other than UseSummaryPositionColumn, then summaryPositionColumn parameter is not required and can be null.</p>
            <p class="body">SourceColumn is the column whose data is being summarized. The sourceColumn must be the band associated with this SummarySettingsCollection or from one of the descendant bands.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.ICustomSummaryCalculator,Infragistics.Win.UltraWinGrid.UltraGridColumn,Infragistics.Win.UltraWinGrid.SummaryPosition,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adds a new SummarySettings object created using the supplied arguments and returns that new summary settings object.
            </summary>
            <param name="summaryType">SummaryType. If you specify Custom, then a valid instance ICustomSummaryCalculator must be passed in as customSummaryCalculator.</param>
            <param name="customSummaryCalculator">Only required if SummaryType is Custom.</param>
            <param name="sourceColumn">Field that will be summarized.</param>
            <param name="summaryPosition">Specifies the place where the summary will be displayed in the grid.</param>
            <param name="summaryPositionColumn">Only required if summaryPosition is UseSummaryPositionColumn</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">Creates a new SummarySettings object based on the passed in arguments and adds it to the collection.</p>
            <p class="body">If summaryType is SummaryType.Custom, then you must also pass in a valid instance of ICustomSummaryCalculator for customSummaryCalculator argument. If SummaryType is something other than Custom, then this parameter is not required and can be null.</p>
            <p class="body">If summaryPosition is <b>SummaryPosition.UseSummaryPositionColumn</b>, then it will be displayed under summaryPositionColumn column. If summaryPositionColumn is not specified, then it will be displayed under the source column. This column must be from the same band this SummaryCollection is asscocited with. If summaryPosition is something other than UseSummaryPositionColumn, then summaryPositionColumn parameter is not required and can be null.</p>
            <p class="body">SourceColumn is the column whose data is being summarized. The sourceColumn must be the band associated with this SummarySettingsCollection or from one of the descendant bands.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String)">
            <summary>
            Adds a summary with the specified formula. This overload will display the summary in the left area of the summary footer.
            </summary>
            <param name="formula">Formula that the summary will evaluate and display the result.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">In order for formula summaries to work, you must assign an valid instance of UltraCalcManager to the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property. You can do that either at design time by simply adding an instance of UltraCalcManager to the form containing the grid or at runtime by setting the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property,</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,System.String)">
            <summary>
            Adds a summary with the specified formula. This overload will display the summary in the left area of the summary footer.
            </summary>
            <param name="key">Key that the new SummarySettings object will have. Duplicate keys are not allowed.</param>
            <param name="formula">Formula that the summary will evaluate and display the result.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">In order for formula summaries to work, you must assign an valid instance of UltraCalcManager to the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property. You can do that either at design time by simply adding an instance of UltraCalcManager to the form containing the grid or at runtime by setting the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property,</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,Infragistics.Win.UltraWinGrid.SummaryPosition,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adds a summary with the specified formula.
            </summary>
            <param name="formula">Formula that the summary will evaluate and display the result.</param>
            <param name="summaryPosition">Location where the summary will be displayed.</param>
            <param name="summaryPositionColumn">Only required if summaryPosition is UseSummaryPositionColumn.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">In order for formula summaries to work, you must assign an valid instance of UltraCalcManager to the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property. You can do that either at design time by simply adding an instance of UltraCalcManager to the form containing the grid or at runtime by setting the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property,</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(System.String,System.String,Infragistics.Win.UltraWinGrid.SummaryPosition,Infragistics.Win.UltraWinGrid.UltraGridColumn)">
            <summary>
            Adds a summary with the specified formula.
            </summary>
            <param name="key">Specifies the key of the summary object.</param>
            <param name="formula">Formula that the summary will evaluate and display the result.</param>
            <param name="summaryPosition">Location where the summary will be displayed.</param>
            <param name="summaryPositionColumn">Only required if summaryPosition is UseSummaryPositionColumn.</param>
            <returns>The new SummarySettings object that was created and added to the collection with supplied arguments.</returns>
            <remarks>
            <p class="body">In order for formula summaries to work, you must assign an valid instance of UltraCalcManager to the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property. You can do that either at design time by simply adding an instance of UltraCalcManager to the form containing the grid or at runtime by setting the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager"/> property,</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.AddRange(Infragistics.Win.UltraWinGrid.SummarySettings[])">
            <summary>
            For internal use only. This method is used for serialization of summaries at design time.
            </summary>
            <param name="summaries"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Remove(Infragistics.Win.UltraWinGrid.SummarySettings)">
            <summary>
            SummarySettings object to remove.
            </summary>
            <param name="summarySettings"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.RemoveAt(System.Int32)">
            <summary>
            SummarySettings object to remove.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.HasFixedSummariesForLevel(System.Int32)">
            <summary>
            Returns true if there are any summaries that are to be displayed in
            fixed area of the summary footer in specified level.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.HasFreeFormSummariesForLevel(System.Int32)">
            <summary>
            Returns true if there are any summaries that are to be displayed in
            free-form area of the summary footer in specified level.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Collection of <see cref="T:Infragistics.Win.UltraWinGrid.SummarySettings"/> objects. <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBand.Summaries"/> for more information.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.InitialCapacity">
            <summary>
            Property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Item(System.String)">
            <summary>
            indexer (by string key)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Band">
            <summary>
            Returns the band this summary settings collection is associated with.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryValue">
            <summary>
            Class that holds information of a particular summary calculation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValue.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValue.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the appearance for the summary value.
            </summary>
            <param name="appData"></param>
            <param name="propFlags"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.Appearance">
            <summary>
            Appearance that will be applied to summaries associated with this SummerySettings object.
            </summary>
            <remarks>
            <p class="body">Font settings off the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SummaryValueAppearance"/> off the Override object are used to calculate the necessary height of the summary footer and the summary values. So if you are planning on modifying the size of font for individual SummarySettings or SummaryValue objects, make sure that a font just as big is assigned to SummaryValueAppearance off the Override object for the band or the layout.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.HasAppearance">
            <summary>
            Returns true if appearance object for Appearance property has been allocated.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.ParentRows">
            <summary>
            RowsCollection object this SummaryValue corresponds to. 
            RowsCollection returned will be from the same band as the band
            the associated SummarySettings object is assigned to.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.SummarySettings">
            <summary>
            Appearance for this summary.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.Value">
            <summary>
            Returns the calculated summary value for this summary.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.SummaryText">
            <summary>
            Returns the text that will be displayed as the summary. This text is obtained by applying <see cref="P:Infragistics.Win.UltraWinGrid.SummarySettings.DisplayFormat"/> to the summary value. If there was no display format specified, a default display format is used.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValue.Key">
            <summary>
            Key associated with the associated SummarySettingsObject. (Read-only).
            </summary>
            <remarks>
            <p class="body">Key returned is the key of the SummarySettings object this SummaryValue object is associated with.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.SummaryValue.SummarySettings"/>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.SummarySettingsCollection.Add(Infragistics.Win.UltraWinGrid.SummaryType,Infragistics.Win.UltraWinGrid.UltraGridColumn)"/>
            </remarks>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValue.RowCallback.Infragistics#Win#UltraWinGrid#RowsCollection+IRowCallback#ProcessRow(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Return true to continue traversing, false to stop
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SummaryValuesCollection">
            <summary>
            Collection of summary values that rows collection exposes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.GetItem(System.Int32)">
            <summary>
            Returns the item at the specified index
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.CopyTo(Infragistics.Win.UltraWinGrid.SummaryValue[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.GetSummaryValueFromPosition(Infragistics.Win.UltraWinGrid.SummaryPosition,Infragistics.Win.UltraWinGrid.UltraGridColumn,System.Int32)">
            <summary>
            Finds a summary value that will be displayed at position designated by summaryPosition and positionColumn parameters. If summaryPosition is UseSummaryPositionColumn, it will find a fixed summary that will be displayed under positionColumn at the level specified by the level parameter. If the summaryPosition is Left, Center or Right then the positionColumn parameter will be ignored and it will find a free-form summary that will be displayed under that area at the level specified by the level parameter.
            </summary>
            <param name="summaryPosition">Summary position.</param>
            <param name="positionColumn">This must be non-null if the summaryPosition parameter is UseSummaryPositionColumn.</param>
            <param name="level">Specifies the level. Level starts from 0.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.ResolveSummaryValueAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the summary value apperanace from the band.
            </summary>
            <param name="appData"></param>
            <param name="propFlags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.ResolveSummaryFooterAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the appearance used by the summary footer.
            </summary>
            <param name="appData"></param>
            <param name="propFlags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.ResolveSummaryFooterCaptionAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves the appearance used by the summary footer caption.
            </summary>
            <param name="appData"></param>
            <param name="propFlags"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.GetSummaryFooterCaption">
            <summary>
            Gets the string to be displayed in 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.InitialCapacity">
            <summary>
            Property that specifies the initial capacity
            of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.Item(System.String)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.Item(Infragistics.Win.UltraWinGrid.SummarySettings)">
            <summary>
            Indexer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.Count">
            <summary>
            Overridden. Returns the number of elements in this collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.SummaryFooterCaptionResolved">
            <summary>
            Resolved summary footer caption for the summary footer associated with this summary values collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SummaryValuesCollection.SummaryFooterCaptionVisibleResolved">
            <summary>
            Indicates whether the summary footer caption is visible or not.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.SwapButtonUIElement">
            <summary>
            A column or group swap button UI element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Initializes a new <b>SwapButtonUIElement</b>
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.DrawForeground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws small arrow in the foreground
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw a background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            this element doesn't draw an image background
            </summary>
            <param name="drawParams"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.DrawFocus(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            does nothing as SwapButtonUIElement does not get a focus
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.OnMouseEnter">
            <summary>
            called when mouse enters this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.OnMouseLeave">
            <summary>
            called when the mouse leaves this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the element. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.SwapButtonUIElement.BorderStyle">
            <summary>
            Returns or sets a value that determines the border style of an object.
            </summary>
            <remarks><para>The border style of cells, rows, and headers can be set 
            by the BorderStyleCell, BorderStyleRow, and BorderStyleHeader properties 
            respectively.</para>
            <para>The border style of the AddNew box buttons can be set by the 
            ButtonBorderStyle property.</para>
            <para>Note that not all styles are available on all operating systems. 
            If the version of the OS that your program is running on does not support 
            a particular 
            border style, borders formatted with that style will be 
            drawn using solid lines.</para></remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridRefBase.IsSubsetReference(Infragistics.Win.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if inReference is a proper subset of this reference
            </summary>
            <param name="inReference">The subset candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.RowReferenceBase.ContainsReference(Infragistics.Win.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraCombo">
            <summary>
            The Infragistics UltraCombo control looks like a standard windows combobox but when dropped
            down displays a multicolumn list from a data source.
            </summary>
            <remarks>
            <p class="body">Most of the settings that apply to the dropdown portion of the control are set off the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DisplayLayout"/> property.</p>
            <p></p>
            <p class="body">
            The following code snippet illustrates.
            </p>
            <p></p>
            <pre>
            private void button5_Click(object sender, System.EventArgs e)
            {
            	this.ultraCombo1.DisplayLayout.Bands[0].Columns[1].Hidden = true;
            }
            </pre>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraDropDownBase">
            <summary>
            The base class for the UltraDropDown and UltraCombo
            control classes.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridBase">
            <summary>
            Returns the UltraGrid control associated with an UltraGridLayout object. This property 
            is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks><para>This property returns a reference to an UltraGrid object 
            that can be used to set properties of, and invoke methods on, the UltraGrid 
            control. You can use this reference to access any of the control's properties 
            or methods.</para>
            <para>This property is used to determine which UltraGrid 
            control is associated with a UltraGridLayout object.</para>
            <para>This property returns Nothing for UltraGridLayout objects not 
            associated with an UltraGrid control.</para>
            </remarks>    
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridBase.drawingValue">
            <summary>
            Protected flag that is true during a drawing operation
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridBase.currentActiveRow">
            <summary>
            The current active row
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinGrid.UltraGridBase.filterDropDown">
            <summary>
            For internal infrastructure use only. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.#ctor">
            <summary>
            UltraGrid Base Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResetFirstDrawFlag">
            <summary>
            Resets the first draw flag to false
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.GetKeyActionMappings">
            <summary>
            Return the KeyActionMappings collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.GetCurrentState">
            <summary>
            Return the current state.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.PerformKeyAction(System.Enum,System.Boolean,System.Boolean)">
            <summary>
            Performs a specific key action.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnActiveRowChange(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Called when the active row changes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnActiveRowCleared(System.Boolean)">
            <summary>
            Called when the active row is cleared
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireAfterColPosChanged(Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs)">
            <summary>
            Internal method for raising the AfterColPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireAfterGroupPosChanged(Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs)">
            <summary>
            Internal method for raising the AfterGroupPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireAfterRowRegionScroll(Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs)">
            <summary>
            Internal method for raising the AfterRowRegionScroll event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireBeforeColRegionScroll(Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs)">
            <summary>
            Internal method for raising the BeforeColRegionScroll event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireBeforeColPosChanged(Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs)">
            <summary>
            Internal method for raising the BeforeColPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireBeforeGroupPosChanged(Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs)">
            <summary>
            Internal method for raising the BeforeGroupPosChanged event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireBeforeRowRegionScroll(Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs)">
            <summary>
            Internal method for raising the BeforeRowRegionScroll event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireInitializeLayout(Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)">
            <summary>
            Internal method for raising the InitializeLayout event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.FireInitializeRow(Infragistics.Win.UltraWinGrid.InitializeRowEventArgs)">
            <summary>
            Internal method for raising the InitializeRow event
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.IsEventInProgress(System.Enum)">
            <summary>
            Internal property to determine if a event is in progress 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnSelectingNextControl">
            <summary>
            Called right before the parent's SelectNextControl method is called
            so that derived classes can perform control-specific actions, such
            as closing open dropdowns
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnPropertyChanged(Infragistics.Win.PropertyChangedEventArgs)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBasePropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called by UltraGridBase when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub-object
            </summary>
            <remarks>
            <p class="body">This property is used for sub-object event notification. You can take advantage of this feature to have your own code invoked when one or more properties of a sub-object are changed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnFontChanged(System.EventArgs)">
            <summary>
            Called when the main font has changed 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnCreateControl">
            <summary>
            Called when the control is created 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ShouldSerializeLayouts">
            <summary>
            Returns True is any of the properties have been
            set to non-default values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResetLayouts">
            <summary>
            Clears all layouts
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ShouldSerializeImageList">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResetImageList">
            <summary>
            Resets this property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ShouldSerializeDisplayLayout">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResetDisplayLayout">
            <summary>
            Resets the properties of the object to their default values.
            </summary>
            <remarks>
            <p class="body">
            Use this method to reset the properties of an DisplayLayout object to their default values. The appearance of any object associated with the DisplayLayout object will change accordingly. You can specify which groups of properties should be reset using the <i>categories</i> parameter. If you do not specify a value for this parameter, all property values are reset. You can also specify whether the <b>InitializeLayout</b> event will fire as a result of this method being invoked. If you do not specify this parameter, the event does not occur.</p>
            <p class="body">
            When specifying 256 (PropCatGeneral), the following property settings for the DisplayLayout object are reset:<br></br><br></br>
            <table cellpadding="0" cellspacing="5" border="0">
            <tr>
            	<td valign="top"><ul class="body">
            	<li>AddNewBox</li>
            	<li>AlphaBlendEnabled</li>
            	<li>BorderStyle</li>
            	<li>BorderStyleCaption</li>
            	<li>Caption</li>
            	<li>Enabled</li></ul>
            	</td>
            	<td valign="top"><ul class="body">
            	<li>EstimatedRows</li>
            	<li>Font</li>
            	<li>InterBandSpacing</li>
            	<li>MaxColScrollRegions</li>
            	<li>MaxRowScrollRegions</li>
            	<li>Override</li>
            	<li>RowConnectorColor</li>
            	<li>RowConnectorStyle</li></ul>
            	</td>
            	<td valign="top"><ul class="body">
            	<li>ScrollBars</li>
            	<li>TabNavigation</li>
            	<li>TagVariant</li>
            	<li>TipDelay</li>
            	<li>ViewStyle</li>
            	<li>ViewStyleBand</li></ul>
            	</td>
            </tr>
            </table>
            </p>
            <p class="body">
            Multiple DisplayLayout categories can be copied by combining them using logical <b>Or</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementProvider#GetBorderStyle(Infragistics.Win.UIElement)">
            <summary>
            IUIElementProvider's method to get the borderstyle of the element
            </summary>
            <param name="element"> </param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementProvider#GetCursor(Infragistics.Win.UIElement)">
            <summary>
            Returns cursor
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementProvider#GetBorderSides(Infragistics.Win.UIElement)">
            <summary>
            IUIElementProvider's method to get the sides to draw the border on
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementProvider#InitElementAppearance(Infragistics.Win.UIElement,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            IUIElementProvider's method to initialize the appearance
            of the element during a draw
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#GetText(Infragistics.Win.DependentTextUIElement)">
            <summary>
            IUIElementTextProvider's method to get the element's text
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#IsMultiLine(Infragistics.Win.DependentTextUIElement)">
            <summary>
            IUIElementTextProvider's method to find out if the text
            is multiline.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#WrapText(Infragistics.Win.DependentTextUIElement)">
            <summary>
            IUIElementTextProvider's method to find out if the text
            is to be wrapped.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#GetTextPadding(Infragistics.Win.DependentTextUIElement,System.Drawing.Size@)">
            <summary>
            IUIElementTextProvider's method to get the padding around the text
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#IsVertical(Infragistics.Win.DependentTextUIElement)">
            <summary>
            IUIElementTextProvider's method to find out if the text
            should be displayed vertically.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#AdjustTextDisplayRect(Infragistics.Win.DependentTextUIElement,System.Drawing.Rectangle@)">
            <summary>
            IUIElementTextProvider's method to adjust the display rect of the
            text (e.g. used to shift the text right and down 1 pixel in the
            down state of a button)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#IUIElementTextProvider#HotkeyPrefix(Infragistics.Win.DependentTextUIElement)">
            <summary>
            Indicates whether the element renders mnemonics in the text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.DataBind">
            <summary>
               Start Databinding
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.SetDataBinding(System.Object,System.String)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.SetDataBinding(System.Object,System.String,System.Boolean)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnListManagerSet">
            <summary>
            Called when the list manager is set (data source changed)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.GetRow(Infragistics.Win.UltraWinGrid.ChildRow)">
            <summary>
            Returns an UltraGridRow object for the first or last row in band 0.
            </summary>
            <remarks>
            <p class="body">The <b>GetRow</b> method is one of the mechanisms you can use to navigate through the hierarchical structure of the grid. You can use this method to return either the first or last raow in the topmost band, then walk through the rows in that band (using the <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasNextSibling"/><b>HasNextSibling</b>, <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasPrevSibling"/><b>HasPrevSibling</b> and <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetSibling(Infragistics.Win.UltraWinGrid.SiblingRow)"/><b>GetSibling</b> methods. You can also step into the child band of any row using the <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.HasChild"/><b>HasChild</b> and <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridRow.GetChild(Infragistics.Win.UltraWinGrid.ChildRow)"/><b>GetChild</b> methods.</p>
            </remarks>
            <param name="child">Determines whether the first or last row in Band 0 is returned.</param>
            <returns>The UltraGridRow object for the first or last row in Band 0</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ClearActiveRow">
            <summary>
             Clears the active row without firing any events
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.GetActiveColScrollRegion(System.Boolean)">
            <summary>
            Returns the active ColScrollRegion object.
            </summary>
            <remarks>
            <p class="body">Use the <b>GetActiveColScrollRegion</b> method to determine which ColScrollRegion object is currently active.</p>
            <p class="body">Only one column scrolling region at a time may be the active ColScrollRegion. The active ColScrollRegion is the one that receives keyboard navigation focus. For example, if you use the left and right arrow keys to scroll columns, the columns in the column scrolling region returned by <b>GetActiveColScrollRegion</b> are the ones that will move.</p>
            </remarks>
            <param name="initializeMetrics"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse wheel is used when the cursor is positioned over the control
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnTextChanged(System.EventArgs)">
            <summary>
            Since we are using the control's text property for our caption property
            we need to update the grid when a user changes the text within the property 
            window
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.IsPointDesignTimeActive(System.Drawing.Point)">
            <summary>
            Determines if the control should receive mouse notifications at design time for the specified point.
            </summary>
            <param name="pt">Point in client coordinates.</param>
            <returns>True if the control should receive any mouse notifications for the specified point.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.IsInputChar(System.Char)">
            <summary>
            Returns true if the character should be sent directly to the control and not preprocessed, false otherwise.
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnEnabledChanged(System.EventArgs)">
            <summary>
            Overridden. Raises the EnabledChanged event.
            </summary>
            <param name="e"></param>
            <remarks>
            <seealso cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeginInit">
            <summary>
            Invoked during the <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit"/> of the component.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnEndInit">
            <summary>
            Invoked during the <see cref="M:System.ComponentModel.ISupportInitialize.EndInit"/> of the component.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.SuspendRowSynchronization">
            <summary>
            Suspends row syncronization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResumeRowSynchronization">
            <summary>
            Resumes row syncronizations.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.SuspendSummaryUpdates">
            <summary>
            Suspends updating of summaries. Whenever UltraGrid receives notification indicating a row has changed, UltraGrid marks summaries for recalculation. Calling this method will prevent UltraGrid from marking summaries for recalculation whenever row changed notification is received. You must call <see cref="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResumeSummaryUpdates(System.Boolean)"/> to resume the default behavior of marking summaries for recalculation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.ResumeSummaryUpdates(System.Boolean)">
            <summary>
            Resumes the default behavior of marking summaries for recalculations whenever row changed notification is received.
            </summary>
            <param name="recalculateSummaries"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnFilterRow(Infragistics.Win.UltraWinGrid.FilterRowEventArgs)">
            <summary>
            Called when row filters are evaluated on a row.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.CreateAccessibilityInstance(System.Object)">
            <summary>
            Creates an accessible object for the related object.
            </summary>
            <param name="relatedObject">The logically related object (e.g. an UltraGrid, UltraGridRow, ColumnHeader etc.).</param>
            <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject"/> object for the related object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#ISupportPresets#GetPresetProperties(Infragistics.Win.PresetType)">
            <summary>
            Returns a list of properties which can be used in a Preset
            </summary>
            <param name="presetType">Determines which type(s) of properties are returned</param>
            <returns>An array of strings indicating property names</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Infragistics#Win#ISupportPresets#GetPresetTargetTypeName">
            <summary>
            Returns the TypeName of the Preset target
            </summary>
            <returns>Returns "UltraGridBase"</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.EndUpdate">
            <summary>
            Overridden. Resets the <b>IsUpdating</b> flag to false and invalidates the control.
            </summary>
            <seealso cref="M:Infragistics.Win.UltraControlBase.EndUpdate"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.Refresh">
            <summary>
            Overridden. Forces the control to invalidate its client area and immediately redraw itself and any child controls.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeforeSortChange(Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs)">
            <summary>
            Called before sort change
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnAfterSortChange(Infragistics.Win.UltraWinGrid.BandEventArgs)">
            <summary>
            Called after a band has been sorted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnAfterColPosChanged(Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs)">
            <summary>
            Called after a column postion has changed
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeforeColPosChanged(Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs)">
            <summary>
            Called before a column postion changes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeforeRowFilterDropDown(Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs)">
            <summary>
            Called before row filters drop down is dopped down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeforeRowFilterDropDownPopulate(Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs)">
            <summary>
            Called before UltraGrid populates the row fitler drop down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeforeCustomRowFilterDialog(Infragistics.Win.UltraWinGrid.BeforeCustomRowFilterDialogEventArgs)">
            <summary>
            Called before grid displays custom row filters dialog.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnAfterRowFilterChanged(Infragistics.Win.UltraWinGrid.AfterRowFilterChangedEventArgs)">
            <summary>
            OnAfterRowFilterChanged gets after the user has modified row filters for a column. This method fires the associated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.OnBeforeRowFilterChanged(Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventArgs)">
            <summary>
            OnBeforeRowFilterChanged gets called when the user modifies row filters for a column. This method fires the associated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UpdateData">
            <summary>
            Updates (commits) any modified information.
            </summary>
            <remarks>
            <p class="body">The <b>UpdateData</b> method updates any modified information in the grid, sending it to the data provider. When the update is complete, any rows that were marked as having modified data will have that mark cleared.  The <b>DataChanged</b> property will be set to False.</p>
            <p class="body">Normally, the grid handles the updating of data automatically, so there will be few situations in which you will need to invoke this method. The major exception is when you have set the <b>UpdateMode</b> property to 2 (UpdateOnUpdate). When using that setting, the grid will not send any data to the data provider until you invoke the <b>UpdateData</b> method. You must use the method to manually update the data provider whenever data has been changed and you are ready to commit the changes.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.BackColor">
            <summary>
               <para>
                  BackColor property - not supported
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ForeColor">
            <summary>
               <para>
                  ForeColor property - not supported
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.BackgroundImage">
            <summary>
            Overrides the control's property to hide it so that the appearance can be used instead.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveColScrollRegion">
            <summary>
            Returns/Sets the active ColScrollRegion object.  This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">Use the <b>ActiveColScrollRegion</b> property to determine which ColScrollRegion
            object is currently active. If you assign a ColScrollRegion object to the 
            <b>ActiveColScrollRegion</b> property, it will become the active column scrolling region.</p>
            <p class="body">
            Only one column scrolling region at a time may be the active ColScrollRegion. The 
            active ColScrollRegion is the one that receives keyboard navigation
            focus. For example, if you use the left and right arrow keys to scroll columns,
            the columns in the column scrolling region specified by <b>ActiveColScrollRegion</b> are
            the ones that will move.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.TooltipTool">
            <summary>
            Internal property for getting the tooltip tool
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveRowScrollRegion">
            <summary>
            Returns or sets the active RowScrollRegion object. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">Use the <b>ActiveRowScrollRegion</b> property to determine which RowScrollRegion
            object is currently active. If you assign an RowScrollRegion object to the 
            <b>ActiveRowScrollRegion</b> property, it will become the active row scrolling region.</p>
            <p class="body">Only one row scrolling region at a time may be the active RowScrollRegion. The 
            active RowScrollRegion is the one that contains the active row (as specified by the 
            <b>ActiveRow</b> property). It is also the row scroll region that receives keyboard navigation
            focus. For example, if you use the up and down arrow keys to scroll rows,
            the rows in the row scrolling region specified by <b>ActiveRowScrollRegion</b> are
            the ones that will move.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ActiveRow">
            <summary>
            Returns or sets the active row. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">
            Use the <b>ActiveRow</b> property to determine which row is 
            currently active, or change which row is currently active. 
            If you assign an UltraGridRow object to the <b>ActiveRow</b> property, 
            the specified row will become active.</p>
            <p class="body">
            Only one row at a time may be the active row. The active row 
            is formatted using a special Appearance object, as specified by
            the <b>ActiveRowAppearance</b> property. The active row contains the
            active cell, which is the cell that will receive input focus when 
            the Grid goes into edit mode. You can determine which cell is the active
            cell using the <b>ActiveCell</b> property.</p>
            <p class="body">
            If no row is active, this property will return Nothing. To deactivate 
            the active row, set this property to Nothing.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.InInitializeLayout">
            <summary>
            Internal property to determine if we are in the InitializeLayout event. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.PrintLayout">
            <summary>
            Internal property that returns the current print layout. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.IsPrinting">
            <summary>
            Internal property to determine if we are printing. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.SupportsPrinting">
            <summary>
            Internal property that determines if this control supports printing. (only UltraGrid does). 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ControlForGridDisplay">
            <summary>
            Returns the control that will be used for the grid display.
            </summary>
            <remarks>The default is to return this. It is overridden by the UltraCombo class to return a different control (used for the dropdown area).</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.SubObjectPropChangeHandler">
            <summary>
            Returns the event handler that notifies OnSubObjectPropChanged
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.Layouts">
            <summary>
            A collection used to store UltraGridLayout objects for easy retrieval.
            </summary>
            <remarks>
            One way to persist UltraGridLayout objects and apply them to different objects 
            is to save them out to storage using the <b>SaveLayout</b> and 
            <b>LoadLayout</b> methods. If you wish to persist a UltraGridLayout object 
            without using these methods, you can also add it to the Layouts 
            collection for later retrieval and use.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.ImageList">
            <summary>
            Returns or sets the ImageList component, if any, that is associated with the control.
            </summary>
            <remarks>
            <p class="body">For the control to use the <b>ImageList</b> property, 
            you must put an ImageList component on the form. Then, at design time, you can set 
            the <b>ImageList</b> property in the associated control's property page from the 
            drop down box containing the names of all the ImageList controls currently on the
            form. To associate an ImageList with a control at run time, set the control's 
            <b>ImageList</b> property to the ImageList component you want to use, as in this 
            example:</p>
            <p class="code">Set UltraWinGrid1.ImageList = ImageList1</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DisplayLayout">
            <summary>
            Returns the DisplayLayout object that determines the layout of the control. This property is read-only at run-time.
            </summary>
            <remarks>
            <p class="body">The <b>DisplayLayout</b> property of an object is used to access the DisplayLayout object that determines the settings of various properties related to the appearance and behavior of the object. The DisplayLayout object provides a simple way to maintain multiple layouts for the grid and apply them as needed. You can also save grid layouts to disk, the registry or a storage stream and restore them later.</p>
            <p class="body">The DisplayLayout object has properties such as <b>Appearance</b> and <b>Override</b>, so the DisplayLayout object has sub-objects of these types, and their settings are included as part of the layout. However, the information that is actually persisted depends on how the settings of these properties were assigned. If the properties were set using the DisplayLayout object's intrinsic objects, the property settings will be included as part of the layout. However, if a named object was assigned to the property from a collection, the layout will only include the reference into the collection, not the actual settings of the named object. (For an overview of the difference between named and intrinsic objects, please see the <a href="appearance_property.htm"><b>Appearance</b> property</a>.</p>
            <p class="body">For example, if the DisplayLayout object's <b>Appearance</b> property is used to set values for the intrinsic Appearance object like this:</p>
            <p class="code">UltraWinGrid1.Layout.Appearance.ForeColor = vbBlue</p>
            <p class="body">Then the setting (in this case, <b>ForeColor</b>) will be included as part of the layout, and will be saved, loaded and applied along with the other layout data. However, suppose you apply the settings of a named object to the DisplayLayout's <b>Appearance</b> property in this manner:</p>
            <p class="code">UltraWinGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraWinGrid1.Appearances("New1").ForeColor = vbBlue</p>
            <p class="code">UltraWinGrid1.DisplayLayout.Appearance = UltraWinGrid1.Appearances("New1")</p>
            <p class="body">In this case, the <b>ForeColor</b> setting will not be persisted as part of the layout. Instead, the layout will include a reference to the "New1" Appearance object and use whatever setting is present in that object when the layout is applied.</p>
            <p class="body">By default, the layout includes a copy of the entire Appearances collection, so if the layout is saved and restored using the default settings, the object should always be present in the collection when it is referred to. However, it is possible to use the <b>Load</b> and <b>Save</b> methods of the DisplayLayout object in such a way that the collection will not be re-created when the layout is applied. If this is the case, and the layout contains a reference to a nonexistent object, the default settings for that object's properties will be used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.Rows">
            <summary>
            Returns a collection of the topmost level of rows in the grid. This collection will
            either contain all the rows in Band 0 or the top level of GroupBy rows (if GroupBy rows
            are being used.) Thid property is read-only at run-time and is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The Rows collection provides a easy way to navigate through row hierarchy of the grid, determine whether the grid contains data, and determine how rows are being displayed in GroupBy mode. When displaying data in a standard hierarchical view, the Rows collection contains an UltraGridRow object for every top-level (Band 0) row in the grid. The UltraGridRow objects in the collection expose a <b>ChildBands</b> property, which returns a collection of <b>Rows</b> collections representing the rows of the bands which are children of the current row.</p>
            <p class="body">The Rows colelction is also useful in GroupBy mode, when the top-level band or bands of the grid may consist of virtual "group by" rows. In this case, you use the Rows collection to obtain all the GroupBy rows that are being displayed, and the <b>ChildBand</b> properties of those rows provide a way to drill down to the actual data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DataMember">
            <summary>
            Indicates a sub-list of the DataSource to show in the UltraWinGrid.
            </summary>
            
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DataSource">
            <summary>
            Indicates the source of data for the UltraWinGrid.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.FilterRow">
            <summary>
            Occurs when row filters are evaluated on a row.
            </summary>
            <remarks>
            <p class="body">The <b>FilterRow</b> event occurs when a row filters are evaluated on a row. Hidden property of the row will be set to appropriate value according to the results of the evaluation.</p>
            <p class="body">You can use the <b>FilteRow</b> event to do a custom filter evaluation on the row and set it's Hidden property to appropriate value.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.CalcManager">
            <summary>
            Gets or sets the calc manager used for evaluating formulas in the grid.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeSortChange">
            <summary>
            Occurs before the sort indicator is changed.
            </summary>
            <remarks>
            <p class="body">The <i>band</i> argument returns a reference to an UltraGridBand object that can be used to set properties of, and invoke methods on, the band that will be sorted. You can use this reference to access any of the returned band's properties or methods.</p>
            <p class="body">The UltraGrid can automatically sort the contents of columns without the addition of any code, provided the control is able to preload the rows in the band. Preloading is enabled by default if the recordset bound to the band contains less than 1000 rows. If you do not want to preload rows, but you still want to provide column sorting in the control, you must implement column sorting yourself using the <b>BeforeSortChange</b> and <b>AfterSortChange</b> events.</p>
            <p class="body">The <i>newsortedcols</i> argument returns a reference to a SortedCols collection that can be used to retrieve references to the UltraGridColumn object or objects being sorted. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the columns from being sorted. This argument can be used to prevent the user from sorting columns unless a certain condition is met.</p>
            <p class="body">The <b>AfterSortChange</b> event, which occurs after a sort action is completed, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterSortChange">
            <summary>
            Occurs after a sort action is completed.
            </summary>
            <remarks>
            <p class="body">The <i>band</i>argument returns a reference to an UltraGridBand object that can be used to set properties of, and invoke methods on, the band that was sorted. You can use this reference to access any of the returned band's properties or methods.</p>
            <p class="body">The UltraWinGrid can automatically sort the contents of columns without the addition of any code, provided the control is able to preload the rows in the band. Preloading is enabled by default if the recordset bound to the band contains less than 1000 rows. If you do not want to preload rows, but you still want to provide column sorting in the control, you must implement column sorting yourself using the <b>BeforeSortChange</b> and <b>AfterSortChange</b> events.</p>
            <p class="body">The <b>BeforeSortChange</b> event, which occurs before a sort action is completed, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeColPosChanged">
            <summary>
            Occurs before one or more columns have been moved, swapped, or sized.
            </summary>
            <remarks>
            <p class="body">The <i>action</i> argument indicates which action  will occur to the column or columns: moving, swapping, or sizing.</p>
            <p class="body">The <i>columns</i> argument returns a reference to a SelectedCols collection that can be used to retrieve references to the UltraGridColumn object or objects that will be moved, swapped, or sized. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection. However, all properties of the affected columns are read-only in this event procedure.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the column or columns from being moved, swapped, or sized. This argument can be used to prevent the user from moving, swapping, or sizing columns unless a certain condition is met. To prevent the user from attempting to move, swap, or size a column, set the <b>AllowColMoving</b>, <b>AllowColSwapping</b>, <b>AllowColSizing</b> properties, respectively.</p>
            <p class="body">This event is generated before one or more columns are moved, swapped, or sized, either programmatically, or by user interaction. A column can be sized programmatically by setting its <b>Width</b> property and can be moved programmatically by setting its header's <b>VisiblePosition</b> property.</p>
            <p class="body">The <b>VisiblePosition</b> property can be used to determine both the current and new positions of the column or columns that will be moved or swapped. New positions can be determined by reading the property off of the header of the column or columns in <i>columns</i>, while current positions can be determined by reading the property off of the header of the column or columns in the appropriate band.</p>
            <p class="body">The <b>BeforeGroupPosChanged</b> event is generated before one or more groups are moved, swapped, or sized.</p>
            <p class="body">The <b>AfterColPosChanged</b> event, which occurs after one or more columns are moved, swapped, or sized, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterColPosChanged">
            <summary>
            Occurs after a column has been moved, sized or swapped.
            </summary>
            <remarks>
            <p class="body">The <i>action</i> argument indicates which action occurred to the column or columns: moving, swapping, or sizing.</p>
            <p class="body">The <i>columns</i> argument returns a reference to a SelectedCols collection that can be used to retrieve references to the UltraGridColumn object or objects that were moved, swapped, or sized. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">This event is generated after one or more columns are moved, swapped, or sized, either programmatically, or by user interaction. A column can be sized programmatically by setting its <b>Width</b> property and can be moved programmatically by setting its header's <b>VisiblePosition</b> property.</p>
            <p class="body">The <b>VisiblePosition</b> property of a column's header can be used to determine the new position of a column that was moved or swapped.</p>
            <p class="body">To prevent the user from attempting to move, swap, or size a column, set the <b>AllowColMoving</b>, <b>AllowColSwapping</b>, or <b>AllowColSizing</b> properties, respectively.</p>
            <p class="body">The <b>AfterGroupPosChanged</b> event is generated after one or more groups are moved, swapped, or sized.</p>
            <p class="body">The <b>BeforeColPosChanged</b> event, which occurs before one or more columns are moved, swapped, or sized, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterChanged">
            <summary>
            BeforeRowFilterChanged evet gets fired when the user modifies row filters for a column. This event is cancelable.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterRowFilterChanged"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterChangedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterRowFilterChanged">
            <summary>
            AfterRowFilterChanged evet gets fired after the user has modified row filters for a column.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterChanged"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.AfterRowFilterChangedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterDropDownPopulate">
            <summary>
            Occurs before the row filter drop down is populated.
            </summary>
            <remarks>
            <p class="body">You can use the <b>BeforeRowFilterDropDownPopulate</b> event to prevent the UltraGrid from populating the filter value list and instead populate it yourself. In <see cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterDropDown"/> event, which is fired after this event, the fitler value list is already populated. You can modify the filter value list there as well.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs"/> <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterDropDown"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterDropDown">
            <summary>
            Occurs before the row filter drop down is dropped down when the user clicks on filter dropdown symbol on a column header.
            </summary>
            <remarks>
            <p class="body">You can use the <b>BeforeRowFilterDropDown</b> event to cancel the drop down.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs"/> <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeRowFilterDropDownPopulate"/> <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGridBase.AfterRowFilterChanged"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGridBase.BeforeCustomRowFilterDialog">
            <summary>
            Occurs when the user selects (Custom) from the row filter dropdown and before the grid displays the custom row filter dialog.
            </summary>
            <remarks>
            <p class="body">You can use the <b>BeforeRowFilterDropDown</b> event to cancel the drop down.</p>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownEventArgs"/>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject">
            <summary>
            The Accessible object for a grid.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraGridBase)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.GetFocused">
            <summary>
            Retrieves the object that has the keyboard focus.
            </summary>
            <returns>An AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (Nothing in Visual Basic) if no object has focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.GetSelected">
            <summary>
            Retrieves the currently selected child.
            </summary>
            <returns>An AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns a null reference (Nothing in Visual Basic) if is no child is currently selected and the object itself does not have focus.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x">The horizontal screen coordinate.</param>
            <param name="y">The vertical screen coordinate.</param>
            <returns>An AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (Nothing in Visual Basic) if no object is at the tested location.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
            <summary>
            Navigates to another accessible object.
            </summary>
            <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation"/> values.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridBase.UltraGridBaseAccessibleObject.Grid">
            <summary>
            Returns the associated grid control.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.FireBeforeDropDown">
            <summary>
            Called after list is dropped down
            </summary>
            <returns>True if cancelled.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.FireAfterCloseUp">
            <summary>
            Called after the list has closed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.FireAfterDropDown">
            <summary>
            Called after list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.FireRowSelected(Infragistics.Win.UltraWinGrid.RowSelectedEventArgs)">
            <summary>
            Called when a new row has be selected
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.Infragistics#Win#IValueList#MoveNextItemPreviousItem(System.Boolean)">
            <summary>
            Moves to the next or previous item in the list
            </summary>
            <param name="previous">If true, moves to the previous item</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.Infragistics#Win#IValueList#ResolveItemAppearance(System.Int32,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Resolves appearance for individual items in the value list.
            </summary>
            <param name="itemIndex">Index of the item to resolve the appearance for.</param>
            <param name="appData">AppearanceData structure where resolved appearance data is stored.</param>
            <param name="flags">Properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ShouldSerializeDisplayMember">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ResetDisplayMember">
            <summary>
            Reset DisplayMember
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ShouldSerializeDropDownWidth">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ResetDropDownWidth">
            <summary>
            Reset DropDownWidth
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ShouldSerializeMaxDropDownItems">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ResetMaxDropDownItems">
            <summary>
            Reset MaxDropDownItems
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ShouldSerializeMinDropDownItems">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ResetMinDropDownItems">
            <summary>
            Reset MinDropDownItems
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ShouldSerializeValueMember">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ResetValueMember">
            <summary>
            Reset ValueMember
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.StripMember(System.String)">
            <summary>
            used to strip out all characters that are before the last period
            of the passed in value
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DoesDataValueMatch(System.Object,System.Object)">
            <summary>
            Checks the passed in value against the data value and
            returns true if they match.
            </summary>
            <param name="dataValue1"></param>
            <param name="dataValue2"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ListChanged">
            <summary>
            Implementation of IValueList.ListChanged.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.Infragistics#Win#IValueList#SortByValue">
            <summary>
            Returns whether the owner should sort by values or display text. If it returns true, the owner should sort by value. Otherwise by display text.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.Infragistics#Win#IValueList#ShouldDisplayText">
            <summary>
            Returns whether the selected item's text should be displayed in the edit portion
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.Infragistics#Win#IValueList#ShouldDisplayImage">
            <summary>
            Returns whether the selected item's image should be displayed in the edit portion
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DisplayMember">
            <summary>
            This identifies the column(via its key) in the dropdown that will be used 
            to set the text to display in the cell(or combo's edit area) 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DisplayMemberResolved">
            <summary>
            Returns the actual <see cref="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DisplayMember"/> column key that indicates what is displayed in the edit area.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DisplayMember"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.TooltipTool">
            <summary>
            Returns the tooltip tool object, allocating it the first time
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DropDownWidth">
            <summary>
            Determines the width of the dropdown at runtime.  The default of -1 means
            the control will calculate a reasonable width based on the column widths.  
            A value of 0 means the dropdown will use the width of the dropdown control.
            Values greater than 0 will force the dropdown to be that number of pixels
            wide(not including the scollbars or borders)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.MaxDropDownItems">
            <summary>
            The determines the maximum number of dropdown items in the list.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.MinDropDownItems">
            <summary>
            This determines how tall the dropdown will be if there are few
            or no entries in the list.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.SelectedRow">
            <summary>
            Gets or sets the selected row
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.IsDroppedDown">
            <summary>
            Setting this to true will set focus to the control before dropping down.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ValueMember">
            <summary>
            This identifies the column (via its key) in the dropdown
            that is associated with the value that the grid's cell is bound to.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ValueMemberResolved">
            <summary>
            Returns the actual <see cref="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ValueMember"/> column key.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.ValueMember"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.IsReadOnly">
            <summary>
            Specifies whether the ultra drop down is read-only. Default implementation returns false.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDownBase.DefaultSize">
            <summary>
            Returns the default size for the control.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Returns true if the key is a valid input key for this
            control
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnCreateControl">
            <summary>
            Called when the control is first created
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnEnabledChanged(System.EventArgs)">
            <summary>
            Overridden method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnEnter(System.EventArgs)">
            <summary>
            Called when the focus enters this control
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnFontChanged(System.EventArgs)">
            <summary>
            Overridden method. Sets the height of the masked edit
            according to the newly assigned font
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnGotFocus(System.EventArgs)">
            <summary>
            Used to invoke the GotFocus event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Overridden. Raises KeyPress events.
            </summary>
            <remarks>
            <seealso cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)"/>
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when a key is pressed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnLocationChanged(System.EventArgs)">
            <summary>
            Invoked when the position of the control changes
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnLeave(System.EventArgs)">
            <summary>
            Used to invoke the Leave event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnLostFocus(System.EventArgs)">
            <summary>
            Overridden. Called when the control loses the focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnResize(System.EventArgs)">
            <summary>
            Called when grid itself resizes.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnTextChanged(System.EventArgs)">
            <summary>
            Called when the text changes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overriden. Invoked when the control's Validating event is to be invoked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.GetCurrentState">
            <summary>
            Returns the current state.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.GetKeyActionMappings">
            <summary>
            Returns the key action mappings collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.IsEventInProgress(System.Enum)">
            <summary>
            Returns true if the event is in progress
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnActiveRowChange(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Internal method called when the active row changes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnActiveRowCleared(System.Boolean)">
            <summary>
            Internal method called when the active row is cleared
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnBasePropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called by UltraGridBase when a property has changed on a sub-object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnPropertyChanged(Infragistics.Win.PropertyChangedEventArgs)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnSelectingNextControl">
            <summary>
            Called from OnKeyDownForwarded so that derived classes can
            perform control-specific actions, such as closing open dropdowns
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.PerformKeyAction(System.Enum,System.Boolean,System.Boolean)">
            <summary>
            Performs a specific action
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeAppearance">
            <summary>
            Returns true if the appearance has any non-default
            property values set
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetAppearance">
            <summary>
            Resets all appearance property values to their defaults
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeAutoEdit">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetAutoEdit">
            <summary>
            Resets the property to its default value of true.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeAutoSize">
            <summary>
            Checks to see if AutoSize needs serializing
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetAutoSize">
            <summary>
            Resets the AutoSize to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeBorderStyle">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetBorderStyle">
            <summary>
            Reset border style
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeButtonAppearance">
            <summary>
            Returns true if the <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonAppearance"/> property needs to be serialized.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonAppearance"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetButtonAppearance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonAppearance"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonAppearance"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeDisplayStyle">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetDisplayStyle">
            <summary>
            Resets the property to its default value of <see cref="F:Infragistics.Win.EmbeddableElementDisplayStyle.Standard"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializePadding">
            <summary>
            Returns true if this property is not set to its default value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetPadding">
            <summary>
            Reset padding
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ShouldSerializeReadOnly">
            <summary>
            Returns true if the property has been set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResetReadOnly">
            <summary>
            Resets the property to it's default value of false.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ToggleDropdown">
            <summary>
            Changes the list portion of the control between dropped down and closed up.
            </summary>
            <remarks>
            <p class="body">You can use this method to switch the combo between its dropped down and closed up states. If the combo is closed up, it will drop down when you invoke this method. If the combo is dropped down, it will close up when you invoke this method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.PerformAction(Infragistics.Win.UltraWinGrid.UltraComboAction)">
            <summary>
            Simulates user interaction with the control.
            </summary>
            <remarks>
            <p class="body">Invoke this method to simulate an action the user can perform.</p>
            <p class="body">Many actions are only appropriate in certain situations; if an action is inappropriate, it will not be performed. For example, attempting to delete rows by performing the DeleteRows action (37 - KeyActionDeleteRows) will have no effect if no rows are selected. Similarly, an attempt to toggle a cell's dropdown list by performing a droptown toggle action (14 - KeyActionToggleDropdown) will also be ignored if the column does not have a dropdown list associated with it.</p>
            <p class="body">You can use the <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.CurrentState"/> property to determine the state of the control when the action is about to be performed.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.CurrentState"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.PerformAction(Infragistics.Win.UltraWinGrid.UltraComboAction,System.Boolean,System.Boolean)">
            <summary>
            Simulates user interaction with the control.
            </summary>
            <remarks>
            <p class="body">Invoke this method to simulate an action the user can perform.</p>
            <p class="body">Many actions are only appropriate in certain situations; if an action is inappropriate, it will not be performed. For example, attempting to delete rows by performing the DeleteRows action (37 - KeyActionDeleteRows) will have no effect if no rows are selected. Similarly, an attempt to toggle a cell's dropdown list by performing a droptown toggle action (14 - KeyActionToggleDropdown) will also be ignored if the column does not have a dropdown list associated with it.</p>
            <p class="body">You can use the <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.CurrentState"/> property to determine the state of the control when the action is about to be performed.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.CurrentState"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags)">
            <summary>
            Returns the resolved property settings used as a default
            to render the textbox area
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.IsItemInList">
            <summary>
            IsItemInList method
            </summary>
            <returns>
            A boolean indicating whether the control's Text property is a value in the control's ValueList
            </returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.IsItemInList(System.String)">
            <summary>
            IsItemInList method
            </summary>
            <param name="displayText">The text to be tested</param>
            <returns>
            A boolean indicating whether the specified text is a value in the control's ValueList
            </returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireAfterCloseUp">
            <summary>
            Called after list is closed up
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireAfterDropDown">
            <summary>
            Called after list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireBeforeDropDown">
            <summary>
            Called after list is dropped down
            </summary>
            <returns>True if cancelled.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireInitializeLayout(Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)">
            <summary>
            Called when the layout is first initialized after the 
            datasource has been set 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireRowSelected(Infragistics.Win.UltraWinGrid.RowSelectedEventArgs)">
            <summary>
            Called when a new row has be selected
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireInitializeRow(Infragistics.Win.UltraWinGrid.InitializeRowEventArgs)">
            <summary>
            Called when a row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.FireItemNotInList(Infragistics.Win.UltraWinEditors.ValidationErrorEventArgs)">
            <summary>
            Called before the Validating event of the control whenever the text value entered
            into the editor portion of the control is not a value in the control’s valuelist.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnMouseEnterElement(Infragistics.Win.UIElementEventArgs)">
            <summary>
            Called when an element is entered (the mouse is moved
            over the element)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnMouseLeaveElement(Infragistics.Win.UIElementEventArgs)">
            <summary>
            Called when an element is left (the mouse is moved
            off the element)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnValueChanged(System.EventArgs)">
            <summary>
            Called when the Value property changes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnInitializeLayout(Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)">
            <summary>
            Called when the layout is first initialized after the 
            datasource has been set 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnAfterDropDown(System.EventArgs)">
            <summary>
            Called after list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnAfterCloseUp(System.EventArgs)">
            <summary>
            Called after the list has closed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnBeforeDropDown(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before the list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnRowSelected(Infragistics.Win.UltraWinGrid.RowSelectedEventArgs)">
            <summary>
            Called when a new row has be selected
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnInitializeRow(Infragistics.Win.UltraWinGrid.InitializeRowEventArgs)">
            <summary>
            Called when a row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnItemNotInList(Infragistics.Win.UltraWinEditors.ValidationErrorEventArgs)">
            <summary>
            Called before the Validating event of the control whenever the text value entered
            into the editor portion of the control is not a value in the control’s valuelist.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnBeforeEditorButtonCheckStateChanged(Infragistics.Win.UltraWinEditors.BeforeCheckStateChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.BeforeEditorButtonCheckStateChanged"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnAfterEditorButtonCheckStateChanged(Infragistics.Win.UltraWinEditors.EditorButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.AfterEditorButtonCheckStateChanged"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnEditorButtonClick(Infragistics.Win.UltraWinEditors.EditorButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.EditorButtonClick"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnInitializeEditorButtonCheckState(Infragistics.Win.UltraWinEditors.InitializeCheckStateEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.InitializeEditorButtonCheckState"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnEditorSpinButtonClick(Infragistics.Win.UltraWinEditors.SpinButtonClickEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.EditorSpinButtonClick"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnBeforeEditorButtonDropDown(Infragistics.Win.UltraWinEditors.BeforeEditorButtonDropDownEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.BeforeEditorButtonDropDown"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnAfterEditorButtonCloseUp(Infragistics.Win.UltraWinEditors.EditorButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.UltraWinGrid.UltraCombo.AfterEditorButtonCloseUp"/> event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.OnEditorPropertyChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Invoked when a property on the editor has changed.
            </summary>
            <param name="propChangeInfo">Provides information about the property that changed.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.CreateAccessibilityInstance(System.Object)">
            <summary>
            Creates an accessible object for the related object.
            </summary>
            <param name="relatedObject">The logically related object (e.g. an UltraGrid, UltraGridRow, ColumnHeader etc.).</param>
            <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject"/> object for the related object.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.Text">
            <summary>
            Overridden. The text displayed in the edit portion of the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.ControlUIElement">
            <summary>
            Associated Control UIElement object
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.InInitializeLayout">
            <summary>
            Internal property to determine if we are in the InitializeLayout event. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.Appearance">
            <summary>
            Returns the default Appearance for the edit portion of the control.
            </summary>
            <remarks>
            <p class="body">In the UltraCombo, the control-level <b>Appearance</b> property controls the appearance fo the edit portion of the combo. The drop-down (grid) portion of the control is formatted by using the Appearance property of the <b>DisplayLayout</b> object. For more information on how to use the <b>Appearance</b> property, see the the DisplayLayout's <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/> property.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DisplayLayout"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearances"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.HasAppearance">
            <summary>
            Returns true if the Appearance object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.AutoEdit">
            <summary>
            Determines if the combo will support automatic value completion. (Default is ture).
            </summary>
            <remarks>
            <p class="body">Setting the <b>AutoEdit</b> property to True will enable automatic edit value completion for the text area of the combo, based on the values in the value list.</p>
            <p class="body">When <b>AutoEdit</b> is True and the user types a character in the combo's text box, the control will search the contents of the ValueList to see if it contains a value that begins with the same character. If it does, this value will appear in the text box, with all of its characters highlighted except the one that the user typed. If the user types a second character, the control will check to see if it is the next highlighted character is in the value that appeared. If it is, the value stays and the character typed becomes deselected. If the second character does not appear in the value, the control searches the ValueList again for a value that begins with the first two characters that were typed. If one exists, it appears in the text box; otherwise the selected text is removed and no more searching takes place. This process continues until the user shifts the input focus away from the control.</p>
            <p class="body"><center><img src="autoedit.gif" width="96" height="37" alt="" border="0"></img></center></p>
            <p class="body">if the UltraCombo's <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.DropDownStyle"/> has been set to <see cref="F:Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList"/>, then setting the <b>AutoEdit</b> to true will enable multi-character auto-edit functionality for the drop down list style. In multi-character auto-edit mode, the control will select the item whose text starts with characters typed so far. After 500 milli-seonds of time span since last keystroke, a new auto-edit session begins where the previously typed characters are discarded and new characters are used for multi-character matching.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.AutoSize">
            <summary>
            Determines whether the height of the control is automatically adjusted to the size of the font used for the text box.
            </summary>
            <remarks>
            If this property is set to True, the height of the control automatically adjusts when the font is changed. When False, the control's height remains the same until explicitly changed. The default is True.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.BorderStyle">
            <summary>
            Returns or sets the border style of the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonAppearance">
            <summary>
            Gets/sets the <a href="ms-help://Infragistics.Win/Infragistics.Win/Infragistics.Win~Infragistics.Win.Appearance_members.html">Appearance</a> object used by the control's dropdown button.
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.Appearance"/>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.HasButtonAppearance">
            <summary>
            Returns true if a <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonAppearance"/> object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.CurrentState">
            <summary>
            Returns bit flags that signify the current editing state of the control.
            </summary>
            <remarks>
            The <b>CurrentState</b> property is used primarily in conjunction with the <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.KeyActionMappings"/> property and the <see cref="M:Infragistics.Win.UltraWinGrid.UltraCombo.PerformAction(Infragistics.Win.UltraWinGrid.UltraComboAction)"/> method to return information about the state of the control with regards to user interaction. The setting of the <b>CurrentState</b> property indicates which object has focus in the control, whether the user has placed the control into edit mode, and other information such as whether a combo box is dropped down or whether a row is expanded.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.DisplayStyle">
            <summary>
            Gets/sets the display style.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.DropDownStyle">
            <summary>
            Determines the style of the combo.
            </summary>
            <remarks>
            <p class="body">You can choose between dropdown and dropdown list styles for the UltraCombo. The default is to use the drop-down style, where the text portion of the control is editable. You can also choose a dropdown list style, where the text portion of the control is not editable and only displays values chosen from the list.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.EventManager">
            <summary>
            The object that enables, disables and controls firing of specific control events.
            </summary>
            <remarks>
            <p class="body">The UltraCombo event manager gives you a high degree of control over how the control invokes event procedures. You can use it to selectively enable and disable event procedures depending on the context of your application. You can also use the event manager to return information about the state of the control's events.</p>
            <p class="body">The event manager's methods are used to determine the enabled state of an event (<see cref="M:Infragistics.Win.UltraWinGrid.ComboEventManager.IsEnabled(Infragistics.Win.UltraWinGrid.ComboEventIds)"/>), to selectively enable or disable events (<see cref="M:Infragistics.Win.UltraWinGrid.ComboEventManager.SetEnabled(Infragistics.Win.UltraWinGrid.ComboEventIds,System.Boolean)"/>), and to tell whether an event procedure is currently being processed (<see cref="M:Infragistics.Win.UltraWinGrid.ComboEventManager.InProgress(Infragistics.Win.UltraWinGrid.ComboEventIds)"/>). There is also an <see cref="P:Infragistics.Shared.EventManagerBase.AllEventsEnabled"/> property that you can check to quickly determine whether any events have been disabled by the event manager.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.KeyActionMappings">
            <summary>
            Gives you the ability to reconfigure the way the control responds to user keystrokes.
            </summary>
            <remarks>
            <p class="body">The <b>KeyActionMappings</b> property provides access to the control's mechanism for handling keyboard input from users. All keystrokes for actions such as selection, navigation and editing are stored in a table-based system that you can examine and modify using this property. Through the <b>KeyActionsMappings</b> property, you can customize the keyboard layout of the control to match your own standards for application interactivity.</p>
            <p class="body">For example, if you wanted users to be able to navigate between cells by pressing the F8 key, you could add this behavior. You can specify the key code and any special modifier keys associated with an action, as well as determine whether a key mapping applies in a given context.</p>
            <p class="body">The following table lists the default key mappings for the UltraCombo control:</p>
            <p class="body">
            <table border="1" cellpadding="3" width="100%" class="FilteredItemListTable">
            <thead>
            <tr>
            <th>KeyCode</th>
            <th>ActionCode</th>
            <th>StateRequired</th>
            <th>StateDisallowed</th>
            <th>SpecialKeysRequired</th>
            <th>SpecialKeysDisallowed</th>
            </tr>
            </thead>
            <tbody>
            <tr><td class="body">Up</td><td class="body">PrevRow</td><td class="body">Row</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Down</td><td class="body">NextRow</td><td class="body">Row</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Up</td><td class="body">FirstRow</td><td class="body"></td><td class="body">Row</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Down</td><td class="body">FirstRow</td><td class="body"></td><td class="body">Row</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Right</td><td class="body">FirstRow</td><td class="body"></td><td class="body">Row, HasEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Left</td><td class="body">FirstRow</td><td class="body"></td><td class="body">Row, HasEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Home</td><td class="body">FirstRow</td><td class="body">IsDroppedDown</td><td class="body"></td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">End</td><td class="body">LastRow</td><td class="body">IsDroppedDown</td><td class="body"></td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Right</td><td class="body">NextRow</td><td class="body">Row</td><td class="body">HasEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Left</td><td class="body">PrevRow</td><td class="body">Row</td><td class="body">HasEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Prior</td><td class="body">PageUp</td><td class="body">Row</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Next</td><td class="body">PageDown</td><td class="body">Row</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Escape</td><td class="body">CloseDropdown</td><td class="body">IsDroppedDown</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Enter</td><td class="body">CloseDropdown</td><td class="body">IsDroppedDown</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">F4</td><td class="body">ToggleDropdown</td><td class="body"></td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Up</td><td class="body">ToggleDropdown</td><td class="body"></td><td class="body"></td><td class="body">Alt</td><td class="body"></td></tr>
            <tr><td class="body">Down</td><td class="body">ToggleDropdown</td><td class="body"></td><td class="body"></td><td class="body">Alt</td><td class="body"></td></tr>
            </tbody>
            </table>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.Padding">
            <summary>
            Returns or sets the amount of padding around the text, in pixels.
            </summary>
            <remarks>
            Padding is the space between the text and the border of the control.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.IsReadOnly">
            <summary>
            Specifies whether the ultra drop down is read-only. This property returns the value of ReadOnly property.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.ReadOnly">
            <summary>
            Specifies whether the UltraCombo is read-only.
            </summary>
            <remarks>
            <p class="body">When this property is set to <b>True</b> the user won't be allowed to change the value of the combo.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.Textbox">
            <summary>
            Returns the texbox control used for the edit portion of the combo. Thsi property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.UIElement">
            <summary>
            The main element for the combo (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.Value">
            <summary>
            The value that has been selected from the dropdown list.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.DataFilter">
            <summary>
            If different than null, specifies custom data filter used by the editor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.CharacterCasing">
            <summary>
            Gets or sets whether the control modifies the case of characters as they are typed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonsLeft">
            <summary>
            Returns a collection of editor buttons displayed on the left side of the edit area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.ButtonsRight">
            <summary>
            Returns a collection of editor buttons displayed on the right side of the edit area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.ControlForGridDisplay">
            <summary>
            Returns the control that will be used for the grid display.
            </summary>
            <remarks>The default is the return this. It is overridden by
            the UltraCombo class to return a different control (used for the 
            dropdown area).</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.DefaultSize">
            <summary>
            Returns the default size of the control
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.MaxLength">
            <summary>
            Gets or sets the maximum number of characters the user can type into the control.
            </summary>
            <remarks>When the <b>MaxLength</b> property is set to <b>0</b>, the number of characters accepted by the control is limited only by available memory.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.LimitToList">
            <summary>
            Gets/sets a value indicating whether the control will retain focus upon validation whenever
            the entered value is not a value in the control's ValueList
            </summary>
            <remarks> 
            <p class="body">An ItemNotInList event will fire before the Validating event of the control whenever the text value
            entered into the editor portion of the control is not a value in the control’s valuelist.
            If true The LimitToList property will cancel the validating event and return focus whenever the entered value
            is not in the list.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.SyncWithCurrencyManager">
            <summary>
            Specifies whether to synchronize the selected row of the UltraCombo with the associated currency manager's position. Default is false.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.InitializeLayout">
            <summary>
            Ocuurs after the layout is initialized.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.InitializeRow">
            <summary>
            Occurs after a row is initialized.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.AfterDropDown">
            <summary>
            Occurs after the list portion of the combo is dropped down.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.AfterCloseUp">
            <summary>
            Occurs after the list portion for the combo is closed up.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.BeforeDropDown">
            <summary>
            Occurs before the list portion of the combo is dropped down.
            </summary>
            <remarks>
            <p class="body">You can use this event to examine or change attributes of the list before it is displayed to the user. You can also use this event to cancel the dropdown of the list before it occurs.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.RowSelected">
            <summary>
            Occurs when the row selection changes.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.ValueChanged">
            <summary>
            Occurs when the <see cref="P:Infragistics.Win.UltraWinGrid.UltraCombo.Value"/> property of the control has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.ItemNotInList">
            <summary>
            Occurs before the Validating event of the control whenever the text value entered
            into the editor portion of the control is not a value in the control’s valuelist.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.EditorButtonClick">
            <summary>
            Invoked when an editor button is clicked
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.EditorSpinButtonClick">
            <summary>
            Invoked when an spin editor button is clicked
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.AfterEditorButtonCloseUp">
            <summary>
            Invoked when a dropdown editor button has closed.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.BeforeEditorButtonDropDown">
            <summary>
            Invoked before a dropdown editor button has been displayed.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.InitializeEditorButtonCheckState">
            <summary>
            Invoked when the check state of a state editor button for an element should be initialized.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.BeforeEditorButtonCheckStateChanged">
            <summary>
            Invoked before the CheckState of a StateEditorButton has been changed.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraCombo.AfterEditorButtonCheckStateChanged">
            <summary>
            Invoked after the CheckState of a StateEditorButton has been changed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.About">
            <summary>
            Display the about dialog
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject">
            <summary>
            Accessible object representing an <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/> control
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.#ctor(Infragistics.Win.UltraWinGrid.UltraCombo)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject"/>
            </summary>
            <param name="ownerControl">Control which is represented by the accessible object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>An AccessibleObject that represents the accessible child corresponding to the specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>The number of children belonging to an accessible object.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.GetFocused">
            <summary>
            Returns the object that has the keyboard focus.
            </summary>
            <returns>
            An <b>AccessibleObject</b> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (<b>Nothing</b> in Visual Basic) if no object has focus.
            </returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.GetSelected">
            <summary>
            Returns the object that has the keyboard focus.
            </summary>
            <returns>
            An <b>AccessibleObject</b> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns a null reference (<b>Nothing</b> in Visual Basic) if no object has focus.
            </returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.Name">
            <summary>
            Returns the name of the accessible object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraCombo.UltraComboAccessibleObject.Role">
            <summary>
            Returns the role of the accessible object.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraComboUIElement">
            <summary>
            The main element for an UltraCombo control (occupies the
            entire client area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraComboUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraComboUIElement.OnMouseEnter">
            <summary>
            Overridden. Called whenever the mouse enters the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraComboUIElement.OnMouseLeave">
            <summary>
            Overridden. Called whenever the mouse enters the element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraComboUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraComboUIElement.OnPreMouseDown(Infragistics.Win.MouseMessageInfo@)">
            <summary>
            Called when a mouse down message is received. Returning true will
            cause normal mouse down processing to be skipped
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraComboUIElement.PerformKeyAction(System.Enum,System.Boolean,System.Boolean)">
            <summary>
            Called to perform a single action
            </summary>
            <param name="actionCode">The action to perform.</param>
            <param name="shiftKeyDown">True if the shift key is pressed.</param>
            <param name="ctlKeyDown">True if the ctrl key is pressed.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.Combo">
            <summary>
            Return the UltraCombo control
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.BorderStyle">
            <summary>
            Overrides the BorderStyle to return the BorderStyle from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.ClipChildren">
            <summary>
            Returns true to clip child elements inside borders
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.Cursor">
            <summary>
            Overrides the Cursor to return the cursor from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.KeyActionMappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraComboUIElement.CurrentState">
            <summary>
            
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraDropDown">
            <summary>
            The UltraDropDown control is designed to be attached 
            to one or more columns of an <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/> control by setting 
            a <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridColumn"/>'s <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.ValueList"/> property to the UltraDropDown
            control.
            </summary>
            <remarks>
            <p class="body">Most of the settings that apply to the dropdown are set off the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DisplayLayout"/> property.</p>
            <p></p>
            <p class="body">
            The following code snippet illustrates.
            </p>
            <p></p>
            <pre>
            private void button5_Click(object sender, System.EventArgs e)
            {
            	this.ultraCombo1.DisplayLayout.Bands[0].Columns[1].Hidden = true;
            	
            	this.ultraGrid1.DisplayLayout.Bands[0].Columns[3].ValueList = this.ultraCombo1;
            }
            </pre>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnResize(System.EventArgs)">
            <summary>
            Called when grid itself resizes.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Resets the first draw flag
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.GetCurrentState">
            <summary>
            Returns the current state.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.GetKeyActionMappings">
            <summary>
            Return the KeyActionMappings collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.IsEventInProgress(System.Enum)">
            <summary>
            Returns true if the event is in progress
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnBasePropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called by UltraGridBase when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.PerformKeyAction(System.Enum,System.Boolean,System.Boolean)">
            <summary>
            Performs a specific action
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.FireInitializeLayout(Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)">
            <summary>
            Called when the layout is first initialized after the 
            datasource has been set 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.FireAfterCloseUp">
            <summary>
            Called after list is closed up
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.FireAfterDropDown">
            <summary>
            Called after list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.FireBeforeDropDown">
            <summary>
            Called after list is dropped down
            </summary>
            <returns>True if cancelled.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.FireRowSelected(Infragistics.Win.UltraWinGrid.RowSelectedEventArgs)">
            <summary>
            Called when a new row has be selected
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnAfterDropDown(Infragistics.Win.UltraWinGrid.DropDownEventArgs)">
            <summary>
            Called after the list has closed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnAfterCloseUp(Infragistics.Win.UltraWinGrid.DropDownEventArgs)">
            <summary>
            Called after the list has closed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnBeforeDropDown(Infragistics.Win.UltraWinGrid.CancelableDropDownEventArgs)">
            <summary>
            Called before the list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnRowSelected(Infragistics.Win.UltraWinGrid.RowSelectedEventArgs)">
            <summary>
            Called when a new row has be selected
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnMouseEnterElement(Infragistics.Win.UIElementEventArgs)">
            <summary>
            Called when an element is entered (the mouse is moved
            over the element)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnMouseLeaveElement(Infragistics.Win.UIElementEventArgs)">
            <summary>
            Called when an element is left (the mouse is moved
            off the element)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.FireInitializeRow(Infragistics.Win.UltraWinGrid.InitializeRowEventArgs)">
            <summary>
            Called when a row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnActiveRowChange(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Internal method called when the active row changes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraDropDown.OnActiveRowCleared(System.Boolean)">
            <summary>
            Internal method called when the active row is cleared
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDown.InitializeLayout">
            <summary>
            Occurs when the Layout for the dropdown is initialized.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDown.InitializeRow">
            <summary>
            Occurs when a row of the dropdown is initialized.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDown.AfterDropDown">
            <summary>
            Occurs after the list is dropped down.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDown.AfterCloseUp">
            <summary>
            Occurs after the list is closed up.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDown.BeforeDropDown">
            <summary>
            Occurs before the list is dropped down.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraDropDown.RowSelected">
            <summary>
            Occurs when a new row of the dropdown is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDown.About">
            <summary>
            Display the about dialog
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDown.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDown.ControlUIElement">
            <summary>
            Associated Control UIElement object
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDown.InInitializeLayout">
            <summary>
            Internal property to determine if we are in the InitializeLayout event. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraDropDown.EventManager">
            <summary>
            The object that enables, disables and controls firing of the
            grid specific events.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGrid">
            <summary>
            The Infragistics UltraGrid control is designed to present, and optionally edit, both flat data (containing a single set of rows and columns) as well as hierarchical data in a variety of view styles.
            </summary>
            <remarks>
            <p class="body">Most of the settings that apply to the control are set off the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridBase.DisplayLayout"/> property.</p>
            <p></p>
            <p class="body">
            The following code snippet illustrates.
            </p>
            <p></p>
            <pre>
            private void button5_Click(object sender, System.EventArgs e)
            {
            	this.ultraGrid1.DisplayLayout.AutoFitColumns = true;
            	this.ultraGrid1.DisplayLayout.Bands[0].Columns[1].Hidden = true;
            }
            </pre>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.#ctor">
            <summary>
            UltraWinGrid constructor
            </summary>
            <remarks>
            <p class="body">The UltraGrid object represents the UltraWinGrid control itself. It occupies the top-most level of all control hierarchies. In the data hierarchy used by the control, bands, rows and cells are all child objects of the grid. Many of the properties that apply to the n UltraGridBand object also apply to the grid. In addition, there are properties unique to the UltraGrid object, such as <b>MaxColScrollRegions</b> and <b>MaxRowScrollRegions</b>, which limit the number of column and row scrolling regions and affect all bands.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireBeforeGroupPosChanged(Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs)">
            <summary>
            Called before a group's position has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireBeforeColPosChanged(Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs)">
            <summary>
            Called before a column's position has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireAfterGroupPosChanged(Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs)">
            <summary>
            Called after a group's position has changed
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireAfterColPosChanged(Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs)">
            <summary>
            Called after a column's position has changed
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireAfterRowRegionScroll(Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs)">
            <summary>
            Called after row region scroll takes place
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireBeforeColRegionScroll(Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs)">
            <summary>
            Called before a column region scrolls
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireBeforeRowRegionScroll(Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs)">
            <summary>
            Called before a row region scrolls
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireInitializeRow(Infragistics.Win.UltraWinGrid.InitializeRowEventArgs)">
            <summary>
            Called when a row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireInitializeGroupRow(Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventArgs)">
            <summary>
            Called when a row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.FireInitializeLayout(Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)">
            <summary>
            Called when the layout is first initialized after the 
            datasource has been set 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnMouseEnterElement(Infragistics.Win.UIElementEventArgs)">
            <summary>
            Called when an element is entered (the mouse is moved
            over the element)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnMouseLeaveElement(Infragistics.Win.UIElementEventArgs)">
            <summary>
            Called when an element is left (the mouse is moved
            off the element)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeCellActivate(Infragistics.Win.UltraWinGrid.CancelableCellEventArgs)">
            <summary>
            Called before a cell is activated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeColRegionRemoved(Infragistics.Win.UltraWinGrid.BeforeColRegionRemovedEventArgs)">
            <summary>
            Called before a column region is moved
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeColRegionSplit(Infragistics.Win.UltraWinGrid.BeforeColRegionSplitEventArgs)">
            <summary>
            Called before a column region splits
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowRegionRemoved(Infragistics.Win.UltraWinGrid.BeforeRowRegionRemovedEventArgs)">
            <summary>
            Called before a row region is removed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowInsert(Infragistics.Win.UltraWinGrid.BeforeRowInsertEventArgs)">
            <summary>
            Called before a row is inserted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeCellUpdate(Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs)">
            <summary>
            Called before a cell is updated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowResize(Infragistics.Win.UltraWinGrid.BeforeRowResizeEventArgs)">
            <summary>
            Called before a row is resized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowsDeleted(Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventArgs)">
            <summary>
            Called before row(s) are deleted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowRegionSize(Infragistics.Win.UltraWinGrid.BeforeRowRegionSizeEventArgs)">
            <summary>
            Called before a row region is resized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowRegionSplit(Infragistics.Win.UltraWinGrid.BeforeRowRegionSplitEventArgs)">
            <summary>
            Called before a row region is split
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeColRegionSize(Infragistics.Win.UltraWinGrid.BeforeColRegionSizeEventArgs)">
            <summary>
            Called before a column region size
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeAutoSizeEdit(Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs)">
            <summary>
            Called before auto size edit
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowExpanded(Infragistics.Win.UltraWinGrid.CancelableRowEventArgs)">
            <summary>
            Called before a row has expanded
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowUpdate(Infragistics.Win.UltraWinGrid.CancelableRowEventArgs)">
            <summary>
            Called before a row is updated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowCancelUpdate(Infragistics.Win.UltraWinGrid.CancelableRowEventArgs)">
            <summary>
            Called before a row update cancel (OnBeforeRowCancelUpdate)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowCollapsed(Infragistics.Win.UltraWinGrid.CancelableRowEventArgs)">
            <summary>
            Called before a row has collapsed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeSelectChange(Infragistics.Win.UltraWinGrid.BeforeSelectChangeEventArgs)">
            <summary>
            Called before SelectChange
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowActivate(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called before a row is activated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeCellCancelUpdate(Infragistics.Win.UltraWinGrid.CancelableCellEventArgs)">
            <summary>
            Called before an update to a cell is canceled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeCellListDropDown(Infragistics.Win.UltraWinGrid.CancelableCellEventArgs)">
            <summary>
            Called before a cell list is dropped down
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforePrint(Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs)">
            <summary>
            Called before document is sent to the printer
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeCellDeactivate(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before a cell is deactivated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeEnterEditMode(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before entering edit mode
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowDeactivate(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before a row is deactivated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeExitEditMode(Infragistics.Win.UltraWinGrid.BeforeExitEditModeEventArgs)">
            <summary>
            Called before exiting edit mode
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeColRegionScroll(Infragistics.Win.UltraWinGrid.BeforeColRegionScrollEventArgs)">
            <summary>
            Called before a column region scrolls
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowRegionScroll(Infragistics.Win.UltraWinGrid.BeforeRowRegionScrollEventArgs)">
            <summary>
            Called before row region scroll takes place
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeGroupPosChanged(Infragistics.Win.UltraWinGrid.BeforeGroupPosChangedEventArgs)">
            <summary>
            Called before a group position has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeRowLayoutItemResized(Infragistics.Win.UltraWinGrid.BeforeRowLayoutItemResizedEventArgs)">
            <summary>
            Fires BeforeRowLayoutItemResized event.
            </summary>
            <param name="e"></param>
            <remarks>
            <p><seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowLayoutItemResized"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforePerformAction(Infragistics.Win.UltraWinGrid.BeforeUltraGridPerformActionEventArgs)">
            <summary>
            Called before a key action is about to be performed. It fires BeforeUltraGridPerformAction event.
            </summary>
            <param name="e"></param>
            <remarks>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeCardCompressedStateChanged(Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventArgs)">
            <summary>
            OnBeforeCardCompressedStateChanged gets called before a Card Row is Expanded or Compressed. This method fires the associated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeDisplayDataErrorTooltip(Infragistics.Win.UltraWinGrid.BeforeDisplayDataErrorTooltipEventArgs)">
            <summary>
            Fires BeforeDisplayDataErrorTooltip event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterCardsScroll(Infragistics.Win.UltraWinGrid.AfterCardsScrollEventArgs)">
            <summary>
            Called when the user scrolls cards in a card-area. This method fires <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCardsScroll"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterSummaryDialog(Infragistics.Win.UltraWinGrid.AfterSummaryDialogEventArgs)">
            <summary>
            Called after the user closes the summary dialog. This method fires <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterSummaryDialog"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterGroupPosChanged(Infragistics.Win.UltraWinGrid.AfterGroupPosChangedEventArgs)">
            <summary>
            Called after a group postion has changed
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterSelectChange(Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs)">
            <summary>
            Called after SelectChange
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowCancelUpdate(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called after a row cancel update takes place
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterExitEditMode">
            <summary>
            Called after a exiting edit mode
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowUpdate(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called after a row has been update
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowResize(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called after a row has been resized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowInsert(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called after a row has been inserted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowExpanded(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called after a row has expanded
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowCollapsed(Infragistics.Win.UltraWinGrid.RowEventArgs)">
            <summary>
            Called after a row has collapsed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowsDeleted">
            <summary>
            Called after rows have benn deleted
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowActivate">
            <summary>
            Called after a row is activated
            </summary>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterEnterEditMode">
            <summary>
            Called after a entering edit mode
            </summary>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterCellActivate">
            <summary>
            Called after a cell has been activated
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterCellListCloseUp(Infragistics.Win.UltraWinGrid.CellEventArgs)">
            <summary>
            Called after a CellList is closed up
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterCellCancelUpdate(Infragistics.Win.UltraWinGrid.CellEventArgs)">
            <summary>
            Called after a cell cancel update
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterCellUpdate(Infragistics.Win.UltraWinGrid.CellEventArgs)">
            <summary>
            Called after a cell has been updated
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterColRegionSize(Infragistics.Win.UltraWinGrid.ColScrollRegionEventArgs)">
            <summary>
            Called after a column region is sized
            </summary> 
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowRegionSize(Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs)">
            <summary>
            Called after row region is sized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowRegionScroll(Infragistics.Win.UltraWinGrid.RowScrollRegionEventArgs)">
            <summary>
            Called after row region is scrolled
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterColRegionScroll(Infragistics.Win.UltraWinGrid.ColScrollRegionEventArgs)">
            <summary>
            Called after col region scroll takes place
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterRowLayoutItemResized(Infragistics.Win.UltraWinGrid.AfterRowLayoutItemResizedEventArgs)">
            <summary>
            Fires OnAfterRowLayoutItemResized event.
            </summary>
            <param name="e"></param>
            <remarks>
            <p><seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowLayoutItemResized"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterPerformAction(Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventArgs)">
            <summary>
            Called after a key action is performed. It fires AfterUltraGridPerformAction event.
            </summary>
            <param name="e"></param>
            <remarks>
            <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnAfterCardCompressedStateChanged(Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventArgs)">
            <summary>
            OnAfterCardCompressedStateChanged gets called after a Card Row is Expanded or Compressed. This method fires the associated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnClickCellButton(Infragistics.Win.UltraWinGrid.CellEventArgs)">
            <summary>
            This function gets called whenever a cell button is clicked in 
            a cell with either Button or EditButton column styles. It calls
            hooked up event delegates
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnCellListSelect(Infragistics.Win.UltraWinGrid.CellEventArgs)">
            <summary>
            Called after a a cell list is selected
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnError(Infragistics.Win.UltraWinGrid.ErrorEventArgs)">
            <summary>
            Called when a data error occurs
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnCellDataError(Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs)">
            <summary>
            Called when the user tries to exit the edit mode on a cell with invalid value typed in.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnActiveRowChange(Infragistics.Win.UltraWinGrid.UltraGridRow,System.Boolean)">
            <summary>
            Called when the active row is set
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnLeave(System.EventArgs)">
            <summary>
            Called when the focus leaves this control or any
            of its owned controls
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ShouldSerializeExitEditModeOnLeave">
            <summary>
            Returns true if this property can be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ResetExitEditModeOnLeave">
            <summary>
            Resets the ExitEditModeOnLeave property to its default value of true.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ClearActiveRow">
            <summary>
             Clears the active row and cell without firing any events
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnActiveRowCleared(System.Boolean)">
            <summary>
            Internal method called to clear the active row
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnCellChange(Infragistics.Win.UltraWinGrid.CellEventArgs)">
            <summary>
            Called after a cell change
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializeLogicalPrintPage(Infragistics.Win.UltraWinGrid.CancelableLogicalPrintPageEventArgs)">
            <summary>
            Called when a new logical page is initialize
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializePrint(Infragistics.Win.UltraWinGrid.CancelablePrintEventArgs)">
            <summary>
            Called when Print is Initialized
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializePrintPreview(Infragistics.Win.UltraWinGrid.CancelablePrintPreviewEventArgs)">
            <summary>
            Called when Print Preview is Initialized
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnSelectionDrag(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when a selection is being dragged
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializeLayout(Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)">
            <summary>
            Called when the layout is first initialized after the 
            datasource has been set 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializeRow(Infragistics.Win.UltraWinGrid.InitializeRowEventArgs)">
            <summary>
            Called when a row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializeTemplateAddRow(Infragistics.Win.UltraWinGrid.InitializeTemplateAddRowEventArgs)">
            <summary>
            Called when a template add-row is initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnInitializeGroupByRow(Infragistics.Win.UltraWinGrid.InitializeGroupByRowEventArgs)">
            <summary>
            Called when a group by row is initialized
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnResize(System.EventArgs)">
            <summary>
            Called when grid itself resizes.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Calls the UIElementsCollection draw method
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnPropertyChanged(Infragistics.Win.PropertyChangedEventArgs)">
            <summary>
            Called when a property has changed
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBasePropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called by UltraGridBase when a property has changed on a sub object
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnBeforeSummaryDialog(Infragistics.Win.UltraWinGrid.BeforeSummaryDialogEventArgs)">
            <summary>
            Fires BeforeSummaryDialog event. This method is called before grid displays the summary dialog for a column.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnSummaryValueChanged(Infragistics.Win.UltraWinGrid.SummaryValueChangedEventArgs)">
            <summary>
            Fires SummaryValueChanged event. This method is called when a summary value is calculated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnFontChanged(System.EventArgs)">
            <summary>
            Overrides the OnFontChanged method of Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction,System.Boolean,System.Boolean)">
            <summary>
            Simulates user interaction with the control.
            </summary>
            <remarks>
            <p class="body">Invoke this method to simulate an action the user can perform.</p>
            <p class="body">Many actions are only appropriate in certain situations; if an action is inappropriate, it will not be performed. For example, attempting to delete rows by performing the DeleteRows action (37 - KeyActionDeleteRows) will have no effect if no rows are selected. Similarly, an attempt to toggle a cell's dropdown list by performing a droptown toggle action (14 - KeyActionToggleDropdown) will also be ignored if the column does not have a dropdown list associated with it.</p>
            <p class="body">You can use the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.CurrentState"/> property to determine the state of the control when the action is about to be performed.</p>
            </remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.CurrentState"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction)">
            <summary>
            An overload of PerformAction that passes in shift and control parameters as false.
            </summary>
            <param name="actionCode"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ProcessMnemonic(System.Char)">
            <summary>
            Overridden. Processes a mnemonic character.
            </summary>
            <param name="charCode"></param>
            <returns>
            True if the character was processed as a mnemonic by the control, false otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ShouldSerializeUpdateMode">
            <summary>
            Returns true if this property is not set to its default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ResetUpdateMode">
            <summary>
            Resets UpdateMode to its default value (OnRowChangeOrLostFocus)
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.IsEventInProgress(System.Enum)">
            <summary>
            Returns true if the event is in progress
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ToolTip_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Forwards mouse down message from the tool tip to the grid
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ToolTip_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Forwards mouse up message from the tool tip to the grid
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ToolTip_Click(System.Object,System.EventArgs)">
            <summary>
            Forwards mouse click message from the tool tip to the grid 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Returns true if the key is a valid input key for this
            control
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key press event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key up event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key down event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#IsItemSelectableWithCurrentSelection(Infragistics.Shared.ISelectableItem)">
            <summary>
            Determines if selecting the item would be compatible
            with the current selection
            </summary>
            <param name="item">The selectable item</param>
            <returns>True if the item is selectable</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#OnDragStart(Infragistics.Shared.ISelectableItem,System.Drawing.Point)">
            <summary>
            Called when a dragging operation is about to begin.
            </summary>
            <param name="item"></param>
            <param name="mousePosition">The position of the mouse at the start of the drag</param>
            <returns>Returning true means that it was handled internally and no further action should be taken</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.DeleteSelectedRows">
            <summary>
            Deletes all rows that are selected.
            </summary>
            <remarks>
            <p class="body">Invoke this method to delete all selected rows. A particular row, regardless of whether it is selected, can be deleted by invoking its <b>Delete</b> method.</p>
            <p class="body">When one or more selected rows are deleted, the <b>BeforeRowsDeleted</b> event is generated, which provides an opportunity to prevent a specific row from being deleted.</p>
            <p class="body">When a row is deleted, it is removed from the control and its corresponding record is deleted from the data source. If the record cannot be removed from the data source, the <b>Error</b> event is generated.</p>
            <p class="body">Selected UltraGridRow objects are contained in a SelectedRows collection, which can be accessed via the <b>Rows</b> property of the <b>Selected</b> property of the control.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.DeleteSelectedRows(System.Boolean)">
            <summary>
            Deletes all rows that are selected.
            </summary>
            <param name="displayPrompt">Specifies whether to display the delete confirmation prompt.</param>
            <remarks>
            <p class="body">Invoke this method to delete all selected rows. A particular row, regardless of whether it is selected, can be deleted by invoking its <b>Delete</b> method.</p>
            <p class="body">When one or more selected rows are deleted, the <b>BeforeRowsDeleted</b> event is generated, which provides an opportunity to prevent a specific row from being deleted.</p>
            <p class="body">When a row is deleted, it is removed from the control and its corresponding record is deleted from the data source. If the record cannot be removed from the data source, the <b>Error</b> event is generated.</p>
            <p class="body">Selected UltraGridRow objects are contained in a SelectedRows collection, which can be accessed via the <b>Rows</b> property of the <b>Selected</b> property of the control.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print">
            <summary>
            Initiates the creation of a printed report of the grid data.
            </summary>
            <remarks>
            <p class="body">The <b>Print</b> method initiates a print job. Invoking this method triggers the process of preparing a printed report based on the data in the grid and sending it to the printer. This process has several steps and involves interaction between print-specific objects and events within the control.</p>
            <p class="body">When the  print job begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Initiates the creation of a printed report of the grid data.
            </summary>
            <remarks>
            <p class="body">The <b>Print</b> method initiates a print job. Invoking this method triggers the process of preparing a printed report based on the data in the grid and sending it to the printer. This process has several steps and involves interaction between print-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of the grid data when printed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the  print job begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional DisplayLayout object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print(Infragistics.Win.UltraWinGrid.RowPropertyCategories)">
            <summary>
            Initiates the creation of a printed report of the grid data.
            </summary>
            <remarks>
            <p class="body">The <b>Print</b> method initiates a print job. Invoking this method triggers the process of preparing a printed report based on the data in the grid and sending it to the printer. This process has several steps and involves interaction between print-specific objects and events within the control.</p>
            <p class="body">When the  print job begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="retainRowPropertyCategories">Sepcifies which categories of the settings on the rows to apply to rows printed on the grid.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print(Infragistics.Win.UltraWinGrid.UltraGridLayout,Infragistics.Win.UltraWinGrid.RowPropertyCategories)">
            <summary>
            Initiates the creation of a printed report of the grid data.
            </summary>
            <remarks>
            <p class="body">The <b>Print</b> method initiates a print job. Invoking this method triggers the process of preparing a printed report based on the data in the grid and sending it to the printer. This process has several steps and involves interaction between print-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of the grid data when printed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the  print job begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional DisplayLayout object</param>
            <param name="retainRowPropertyCategories">Sepcifies which categories of the settings on the rows to apply to rows printed on the grid.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print(Infragistics.Win.UltraWinGrid.UltraGridLayout,System.Drawing.Printing.PrintDocument)">
            <summary>
            Initiates the creation of a printed report of the grid data.
            </summary>
            <remarks>
            <p class="body">The <b>Print</b> method initiates a print job. Invoking this method triggers the process of preparing a printed report based on the data in the grid and sending it to the printer. This process has several steps and involves interaction between print-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of the grid data when printed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the  print job begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output. Any settings you have applied to the <b>PrintDocument</b> object specified as a paramter of the <b>Print</b> method will be passed along to the <b>PrintDocument</b> that appears in the <b>InitializePrint</b> method. You might do this to specify certain behaviors, such as displaying the Print or Print Setup dialogs prior to printing the report/.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional layout object</param>
            <param name="printDocument">Optional print document</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print(Infragistics.Win.UltraWinGrid.UltraGridLayout,System.Drawing.Printing.PrintDocument,Infragistics.Win.UltraWinGrid.RowPropertyCategories)">
            <summary>
            Initiates the creation of a printed report of the grid data.
            </summary>
            <remarks>
            <p class="body">The <b>Print</b> method initiates a print job. Invoking this method triggers the process of preparing a printed report based on the data in the grid and sending it to the printer. This process has several steps and involves interaction between print-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of the grid data when printed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the  print job begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output. Any settings you have applied to the <b>PrintDocument</b> object specified as a paramter of the <b>Print</b> method will be passed along to the <b>PrintDocument</b> that appears in the <b>InitializePrint</b> method. You might do this to specify certain behaviors, such as displaying the Print or Print Setup dialogs prior to printing the report/.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional layout object</param>
            <param name="printDocument">Optional print document</param>		
            <param name="retainRowPropertyCategories">Sepcifies which categories of the settings on the rows to apply to rows printed on the grid.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview">
            <summary>
            Initiates the creation of a preview of what a printed report of the grid data would look like.
            </summary>
            <remarks>
            <p class="body">The <b>PrintPreview</b> method initiates a print preview. Invoking this method triggers the process of preparing a printed report based on the data in the grid and displaying the results in a print preview window. This process has several steps and involves interaction between print-preview-specific objects and events within the control.</p>
            <p class="body">When the print preview begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job being previewed. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview(Infragistics.Win.UltraWinGrid.RowPropertyCategories)">
            <summary>
            Initiates the creation of a preview of what a printed report of the grid data would look like.
            </summary>
            <remarks>
            <p class="body">The <b>PrintPreview</b> method initiates a print preview. Invoking this method triggers the process of preparing a printed report based on the data in the grid and displaying the results in a print preview window. This process has several steps and involves interaction between print-preview-specific objects and events within the control.</p>
            <p class="body">When the print preview begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job being previewed. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="retainRowPropertyCategories">Sepcifies which categories of the settings on the rows to apply to rows printed on the grid.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview(Infragistics.Win.UltraWinGrid.UltraGridLayout)">
            <summary>
            Initiates the creation of a preview of what a printed report of the grid data would look like.
            </summary>
            <remarks>
            <p class="body">The <b>PrintPreview</b> method initiates a print preview. Invoking this method triggers the process of preparing a printed report based on the data in the grid and displaying the results in a print preview window. This process has several steps and involves interaction between print-preview-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of how the grid data will look when printed, and also while being previewed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the print preview begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job being previewed. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output. </p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional layout object</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview(Infragistics.Win.UltraWinGrid.UltraGridLayout,Infragistics.Win.UltraWinGrid.RowPropertyCategories)">
            <summary>
            Initiates the creation of a preview of what a printed report of the grid data would look like.
            </summary>
            <remarks>
            <p class="body">The <b>PrintPreview</b> method initiates a print preview. Invoking this method triggers the process of preparing a printed report based on the data in the grid and displaying the results in a print preview window. This process has several steps and involves interaction between print-preview-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of how the grid data will look when printed, and also while being previewed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the print preview begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job being previewed. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output. </p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional layout object</param>
            <param name="retainRowPropertyCategories">Sepcifies which categories of the settings on the rows to apply to rows printed on the grid.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview(Infragistics.Win.UltraWinGrid.UltraGridLayout,System.Drawing.Printing.PrintDocument)">
            <summary>
            Initiates the creation of a preview of what a printed report of the grid data would look like.
            </summary>
            <remarks>
            <p class="body">The <b>PrintPreview</b> method initiates a print preview. Invoking this method triggers the process of preparing a printed report based on the data in the grid and displaying the results in a print preview window. This process has several steps and involves interaction between print-preview-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of how the grid data will look when printed, and also while being previewed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the print preview begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job being previewed. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output. Any settings you have applied to the <b>PrintDocument</b> object specified as a paramter of the <b>PrintPreview</b> method will be passed along to the <b>PrintDocument</b> that appears in the <b>InitializePrintPreview</b> method.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional layout object</param>
            <param name="printDocument">Optional print document</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview(Infragistics.Win.UltraWinGrid.UltraGridLayout,System.Drawing.Printing.PrintDocument,Infragistics.Win.UltraWinGrid.RowPropertyCategories)">
            <summary>
            Initiates the creation of a preview of what a printed report of the grid data would look like.
            </summary>
            <remarks>
            <p class="body">The <b>PrintPreview</b> method initiates a print preview. Invoking this method triggers the process of preparing a printed report based on the data in the grid and displaying the results in a print preview window. This process has several steps and involves interaction between print-preview-specific objects and events within the control.</p>
            <p class="body">When you invoke this method, you specify a Layout object that controls the formatting of how the grid data will look when printed, and also while being previewed. The Layout object gives you the opportunity to create a custom-formated report based on the data in teh grid, applying different attributes such as fonts, colors and arrangement of data specifically for the printed page.</p>
            <p class="body">When the print preview begins, the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/> event occurs. This event receives a <b>PrintDocument</b> object that contains information about the print job being previewed. You examine and change the properties of this object to provide feedback for the user and control the look of the printed output. Any settings you have applied to the <b>PrintDocument</b> object specified as a paramter of the <b>PrintPreview</b> method will be passed along to the <b>PrintDocument</b> that appears in the <b>InitializePrintPreview</b> method.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview"/>
            <seealso cref="T:System.Drawing.Printing.PrintDocument"/>
            <param name="layout">Optional layout object</param>
            <param name="printDocument">Optional print document</param>
            <param name="retainRowPropertyCategories">Sepcifies which categories of the settings on the rows to apply to rows printed on the grid.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ClickCell(Infragistics.Win.UltraWinGrid.GridItemBase)">
            <summary>
            overload of clickcell
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ClickCell(Infragistics.Win.UltraWinGrid.GridItemBase,System.Boolean)">
            <summary>
            An overload of ClickCell
            </summary>
            <param name="cell"></param>
            <param name="byMouse"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ClickCell(Infragistics.Win.UltraWinGrid.GridItemBase,System.Boolean,System.Boolean)">
            <summary>
            Tell the grid the passed-in GridItemBase has been clicked.
            What actually happens (cell selected/row selected/cell 
            activated) is delegated to the proper CCellClickActionStrategy.
            This method is called by Cell.Click().
            </summary>
            <param name="cell"></param>
            <param name="byMouse"></param>
            <param name="allowRangeSelection"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.GetKeyActionMappings">
            <summary>
            Return the KeyActionMappings collection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.GetCurrentState">
            <summary>
            Returns the current state.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.PerformKeyAction(System.Enum,System.Boolean,System.Boolean)">
            <summary>
            Performs a specific action
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#SelectItem(Infragistics.Shared.ISelectableItem,System.Boolean)">
            <summary>
            Select the specified item.
            The clearExistingSelection parameter specifies if the existing selection
            should be cleared.
            Returns true if action was canceled, false otherwise.
            </summary>
            <param name="item"></param>
            <param name="clearExistingSelection"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#UnselectItem(Infragistics.Shared.ISelectableItem,System.Boolean)">
            <summary>
            Unselect the specified item.
            The clearExistingSelection parameter specifies if the existing selection
            should be cleared.
            Returns true if action was canceled, false otherwise.
            </summary>
            <param name="item"></param>
            <param name="clearExistingSelection"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.InternalSelectItem(Infragistics.Shared.ISelectableItem,System.Boolean,System.Boolean)">
            <summary>
            Select or unselect the specified item, based on the select parameter.
            The clearExistingSelection parameter specifies if the existing selection
            should be cleared.
            </summary>
            <param name="item"></param>
            <param name="clearExistingSelection"></param>
            <param name="select"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.SelectNewSelection(System.Type,Infragistics.Win.UltraWinGrid.Selected)">
            <summary>
            Selects the specified selection and fires all necessary events.  
            First exits edit mode, if necessary.  Then fire BeforeSelectChangeEvent, 
            update selected items and fire AfterSelectChangeEvent.  
            Returns true if any event is canceled.
            </summary>
            <param name="type"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.CalcNewSelection(Infragistics.Win.UltraWinGrid.GridItemBase,System.Boolean,System.Boolean)">
            <summary>
            Calculate the new selection based on the passed-in GridItemBase.  
            The select and clearExistingSelection parameters specify whether
            we are selecting or unselecting and whether to clear the existing
            selection or not, respectively.
            </summary>
            <param name="item"></param>
            <param name="clearExistingSelection"></param>
            <param name="select"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.CalcNewSelectionRange(Infragistics.Win.UltraWinGrid.GridItemBase,System.Boolean,System.Boolean)">
            <summary>
            Calculate the new selection based on the passed-in GridItemBase.  
            The select and clearExistingSelection parameters specify whether
            we are selecting or unselecting and whether to clear the existing
            selection or not, respectively.
            </summary>
            <param name="item"></param>
            <param name="clearExistingSelection"></param>
            <param name="select"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#SetInitialSelection(Infragistics.Shared.ISelectableItem)">
            <summary>
            Save initial selection settings for specified type
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#ClearInitialSelection">
            <summary>
            Clear initialSelection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#SelectRange(Infragistics.Shared.ISelectableItem,System.Boolean)">
            <summary>
            Selecting a range based on the specified item.  The clearExistingSelection
            parameter specifies if the existing selection should be cleared.
            </summary>
            <param name="item"></param>
            <param name="clearExistingSelection"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.UpdateSelectedItems(Infragistics.Win.UltraWinGrid.Selected)">
            <summary>
            unselect all items that were originally selected but no longer are and
            select items that weren't
            The selected parameter specifies the new selection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Infragistics#Win#ISelectionManager#TranslateItem(Infragistics.Shared.ISelectableItem@)">
            <summary>
            Potentially translates the passed-in item to a ISelectableItem of a
            different type.  For instance, the grid translates a passed-in cell 
            into its parent row if CellClickAction is CellClickActionRowSelect.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ShouldSerializeRowUpdateCancelAction">
            <summary>
            Returns true if the RowUpdateCancelAction property is set to a non-default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.ResetRowUpdateCancelAction">
            <summary>
            Resets the RowUpdateCancelAction property to its default value of <see cref="F:Infragistics.Win.UltraWinGrid.RowUpdateCancelAction.CancelUpdate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.CopyPropertiesToPrintRow(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            If the printRow belongs to a print layout, gets the corresponding grid row and
            copies the property categories specified by the print layout's RetainRowPropertyCategories
            property value.
            </summary>
            <param name="printRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.GetRowFromPrintRow(Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Gets the row in the grid corresponding to the passed in row from a print layout when printing.
            </summary>
            <param name="printRow"></param>
            <returns>Corresponding row or null if none found.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.Export(Infragistics.Win.UltraWinGrid.IUltraGridExporter)">
            <summary>
            Export method.
            </summary>
            <param name="exporter"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnGotFocus(System.EventArgs)">
            <summary>
            Invokes the GotFocus event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGrid.OnLostFocus(System.EventArgs)">
            <summary>
            Invokes the LostFocus event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCellActivate">
            <summary>
            Occurs after a cell becomes active.
            </summary>
            <remarks>
            <p class="body">This event is generated after a cell is activated, which means it has been given focus.</p>
            <p class="body">The <b>ActiveCell</b> property can be used to determine which cell was activated.</p>
            <p class="body">The <b>BeforeCellActivate</b> event, which occurs before a cell is activated, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCellUpdate">
            <summary>
            Occurs after a cell accepts a new value.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell whose value has been modified. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">This event is generated when a cell's value has been changed. Note that the cell's new value is not necessarily committed to the data source at this time, since various factors such as the type of record locking employed by the data source, as well as the value of the 
            <b>UpdateMode</b> property, can affect when the update occurs. The <b>BeforeRowUpdate</b>  event is generated when the new value is to be committed to the data source.</p>
            <p class="body">The <b>BeforeCellUpdate</b> event, which is generated before this event, provides an opportunity to prevent the change from occurring.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeLayout">
            <summary>
            Occurs when the display layout is initialized, such as when the control is loading data from the data source.
            </summary>
            <remarks>
            <p class="body">The <i>layout</i> argument returns a reference to a DisplayLayout object that can be used to set properties of, and invoke methods on, the layout of the control. You can use this reference to access any of the returned layout's properties or methods.</p>
            <p class="body">Like a form's <b>oad</b> event, this event provides an opportunity to configure the control before it is displayed. It is in this event procedure that actions such as creating appearances, valuelists, and unbound columns should take place.</p>
            <p class="body">This event is generated when the control is first preparing to display data from the data source. This may occur when the data source changes, or when the <b>Refresh</b> method is invoked.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeRow">
            <summary>
            Occurs when a row is initialized
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row being displayed. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">The <i>reinitialize</i> argument can be used to determine whether the row's data has been changed since it was last displayed. The value of <i>reinitialize</i> can also be controlled when invoking the control or row's <b>Refresh</b> method, which causes this event to be generated. </p>
            <p class="body">This event is generated once for each row being displayed or printed and provides an opportunity to perform actions on the row before it is rendered, such as populating an unbound cell or changing a cell's color based on its value.</p>
            <p class="body">The <b>ViewStyle</b> and <b>ViewStyleBand</b> properties of the control and  DisplayLayout object are read-only in this event procedure.</p>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeGroupByRow"/>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeLayout"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeTemplateAddRow">
            <summary>
            Occurs when a template add-row is initialized.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeGroupByRow">
            <summary>
            Occurs when a GroupBy row is initialized.
            </summary>
            <remarks>
            <p class="body">When a band is in GroupBy mode, the user sees rows of data grouped together under GroupBy rows, which serve as temporary headers for the group of rows. GroupBy rows have their own attributes which can be manipulated through code using the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridGroupByRow"/> object. The <b>GroupByRowInitialize</b> event occurs whenever one of these GroupBy rows is created, giving you the chance to work with the GroupBy row before it is displayed.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterEnterEditMode">
            <summary>
            Occurs after a cell enters edit mode.
            </summary>
            <remarks>
            <p class="body">This event is generated after a cell enters edit mode, meaning that the cell is prepared to accept input from the user. This is different from cell activation, which occurs when the cell receives focus. The <b>BeforeCellActivate</b> event is generated before a cell is activated.</p>
            <p class="body">When a cell is in edit mode, the control's <b>IsInEditMode</b> property is set to True. </p>
            <p class="body">The <b>BeforeEnterEditMode</b> event, which occurs before a cell enters edit mode, is generated before this event.</p>
            <p class="body">The <b>BeforeExitEditMode</b> event is generated before a cell exits edit 
            mode.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterExitEditMode">
            <summary>
            Occurs after a cell exits edit mode.
            </summary>
            <remarks>
            <p class="body">When a cell is not in edit mode, the control's <b>IsInEditMode</b> property is set to False.</p>
            <p class="body">The <b>BeforeExitEditMode</b> event, which occurs before a cell exits edit mode, is generated before this event.</p>
            <p class="body">The <b>BeforeEnterEditMode</b> event is generated before a cell enters edit mode.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowActivate">
            <summary>
            Occurs after a row becomes active.
            </summary>
            <remarks>
            <p class="body">This event is generated after a row is activated, which means it has been given focus. When a child row is activated, its parent row is activated first, meaning that this event is generated twice when a child row is activated.</p>
            <p class="body">The <b>ActiveRow</b> property can be used to determine which row was activated.</p>
            <p class="body">Once a row has been activated, its Selected property is set to True.</p>
            <p class="body">The <b>BeforeRowActivate</b> event, which occurs before a row is activated, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowsDeleted">
            <summary>
            Occurs after one or more rows have been deleted.
            </summary>
            <remarks>
            <p class="body">This event is generated after one or more rows have been deleted, either programmatically, or by user interaction. To prevent the user from deleting rows, set the <b>AllowDelete</b> property to False. Rows can be deleted programmatically by invoking either the <b>Delete</b> method or the <b>DeleteSelectedRows</b> method.</p>
            <p class="body">The <b>BeforeRowsDeleted</b> event is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterColRegionScroll">
            <summary>
            Occurs after a column scrolling region is scrolled.
            </summary>
            <remarks>
            <p class="body">The <i>colscrollregion</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion that was scrolled. You can use this reference to access any of the returned colscrollregion's properties or methods.</p>
            <p class="body">This event is generated after a colscrollregion is scrolled, either programmatically, or by user interaction. A colscrollregion can be scrolled programmatically by invoking its <b>Scroll</b> method.</p>
            <p class="Body">The <b>ScrollBar</b> property of a scrolling region determines whether a scroll bar is displayed for that scrolling region.</p>
            <p class="Body">The <b>BeforeColRegionScroll</b> event, which occurs before a column scrolling region is scrolled, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterColRegionSize">
            <summary>
            Occurs after a column scrolling region is resized.
            </summary>
            <remarks>
            <p class="body">The <i>colscrollregion</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion that was sized. You can use this reference to access any of the returned colscrollregion's properties or methods.</p>
            <p class="body">This event is generated once for every colscrollregion affected by the sizing, meaning that this event is typically generated twice, as each sizing generally affects two adjacent colscrollregions.</p>
            <p class="body">This event is generated after a colscrollregion is sized, either programmatically, or by user interaction. A colscrollregion can be sized programmatically by setting its <b>Width</b> property.</p>
            <p class="body">The <b>BeforeColRegionSplit</b> event is generated before a colscrollregion is split into two colscrollregions.</p>
            <p class="body">The <b>BeforeColRegionSize</b> event, which occurs before a colscrollregion is sized, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowRegionScroll">
            <summary>
            Occurs after a row scrolling region is scrolled.
            </summary>
            <remarks>
            <p class="body">The <i>rowscrollregion</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion that was scrolled. You can use this reference to access any of the returned rowscrollregion's properties or methods.</p>
            <p class="body">This event is generated after a rowscrollregion is scrolled, either programmatically, or by user interaction. A rowscrollregion can be scrolled programmatically by invoking its <b>Scroll</b> method.</p>
            <p class="body">The <b>ScrollBar</b> property of a scrolling region determines whether a scroll bar is displayed for that scrolling region.</p>
            <p class="body">The <b>BeforeRowRegionScroll</b> event, which occurs before a rowscrollregion is scrolled, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowRegionSize">
            <summary>
            Occurs after a row scrolling region is resized.
            </summary>
            <remarks>
            <p class="body">The<i>rowscrollregion</i>argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion that was sized. You can use this reference to access any of the returned rowscrollregion's properties or methods.</p>
            <p class="body">This event is generated once for every rowscrollregion affected by the sizing, meaning that this event is typically generated twice, as each sizing generally affects two adjacent rowscrollregions.</p>
            <p class="body">This event is generated after a rowscrollregion is sized, either programmatically, or by user interaction. A rowscrollregion can be sized programmatically by setting its Height property.</p>
            <p class="body">The BeforeRowRegionSplit event is generated before a rowscrollregion is split into two rowscrollregions.</p>
            <p class="body">The BeforeRowRegionSize event, which occurs before a rowscrollregion is sized, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowCollapsed">
            <summary>
            Occurs after a row that has children has been collapsed.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that was collapsed. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">This event is generated after a row has been collapsed, either programmatically, or by user interaction. A row can be collapsed programmatically by setting its <b>Expanded</b> property to False.</p>
            <p class="body">The expansion (plus/minus) indicators can be hidden for a row to prevent the user from expanding or collapsing it by setting the <b>ExpansionIndicator</b> property.</p>
            <p class="body">The <b>BeforeRowExpanded</b> and <b>AfterRowExpanded</b> events are generated before and after, respectively, a collapsed row has been expanded.</p>
            <p class="body">The <b>BeforeRowCollapsed</b> event, which occurs before a row has been collapsed, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowExpanded">
            <summary>
            Occurs after a row with children has been expanded.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that was expanded. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">This event is generated after a row has been expanded, either programmatically, or by user interaction. A row can be expanded programmatically by setting its <b>Expanded</b> property to True.</p>
            <p class="body">The expansion (plus/minus) indicators can be hidden for a row to prevent the user from expanding or collapsing it by setting the <b>ExpansionIndicator</b> property.</p>
            <p class="body">The <b>BeforeRowCollapsed</b> and <b>AfterRowCollapsed</b> events are generated before and after, respectively, an expanded row has been collapsed.</p>
            <p class="body">The <b>BeforeRowExpanded</b> event, which occurs before a row has been expanded, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowInsert">
            <summary>
            Occurs after a new row is inserted.
            </summary>
            <remarks>
            <p class="body">The<i>row</i>argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that was inserted. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">This event is generated after a new row has been inserted, either programmatically, or by user interaction. A new row can be inserted programmatically by invoking the<b>AddNew</b>method.</p>
            <p class="body">Note that the new row is not necessarily committed to the data source at the time of insert, however, since various factors such as the type of record locking employed by the data source, as well as the value of the<b>UpdateMode</b>property, can affect when the actual update occurs.</p>
            <p class="body">The<b>BeforeRowInsert</b>event, which occurs before a row is inserted, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowResize">
            <summary>
            Occurs after a row has been resized.
            </summary>
            <remarks>
            <p class="body">The<i>row</i>argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that was resized. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">Depending on the value of the<b>RowSizing</b>property, more than one row can be affected by the resize. In this case,<i>row</i>refers to the original row being resized.</p>
            <p class="body">The<b>BeforeRowResize</b>event, which occurs before a row has been resized, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowUpdate">
            <summary>
            Occurs after a row is updated, meaning changes made to its cells are actually committed to the data source.
            </summary>
            <remarks>
            <p class="body">The<i>row</i>argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that was updated. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">This event is generated when a row is updated, meaning changes made to its cells are actually committed to the data source. Note that this is not necessarily when the row loses focus, since various factors such as the type of record locking employed by the data source, as well as the value of the<b>UpdateMode</b>property, can affect when the update occurs. The<b>BeforeCellUpdate</b>event is generated when a cell is accepting a new value.</p>
            <p class="body">To prevent the user from making changes to a cell, set the<b>AllowUpdate</b>property to 2 (AllowUpdateNo). A cell's value can be changed programmatically by setting its<b>Value</b>property.</p>
            <p class="body">A row can be updated programmatically by invoking its<b>Update</b>method.</p>
            <p class="body">The<b>BeforeRowUpdate</b>event, which occurs before a row is updated, is generated before this event.</p>
            <p class="body">If an error occurs while attempting to commit the changes to the data source, the<b>Error</b>event is generated.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowCancelUpdate">
            <summary>
            Occurs after the user cancels updates to a row by pressing the ESC key.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will be updated. You can use this reference to access any of the returned row's properties or methods. </p>
            <p class="body">This event is generated after the user presses the ESC key to cancel changes made to a cells in a row. It is not generated when the <b>CancelUpdate</b> method is invoked. </p>
            <p class="body">The <b>BeforeRowCancelUpdate</b> event, which occurs before the row's update is canceled, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowActivate">
            <summary>
            Occurs before a row is activated.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument  returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will be activated. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">This event is generated before a row is activated, which means it has been given focus.</p>
            <p class="body">The <b>BeforeRowDeactivate</b> event is generated before a row is deactivated, meaning it will lose focus.</p>
            <p class="body">The <b>AfterRowActivate</b> event, which occurs after a row is activated, is generated after this event.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowDeactivate"/>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowCollapsed">
            <summary>
            Occurs before a row is collapsed.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will collapse. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the row from collapsing. This argument can be used to prevent the user from collapsing a row unless a certain condition is met.</p>
            <p class="body">This event is generated before a row has been collapsed, ither programmatically, or by user interaction. A row can be collapsed programmatically by setting its <b>Expanded</b> property to False.</p>
            <p class="body">The expansion (plus/minus) indicators can be hidden for a row to prevent the user from expanding or collapsing it by setting the <b>ExpansionIndicator</b> property.</p>
            <p class="body">The <b>BeforeRowExpanded</b> and <b>AfterRowExpanded</b> events are generated before and after, respectively, a collapsed row has been expanded.</p>
            <p class="body">The <b>AfterRowCollapsed</b> event, which occurs after a row has been collapsed, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowExpanded">
            <summary>
            Occurs before a row with children is expanded.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will expand. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">The <i>cancel</i>  argument enables you to programmatically prevent the row from expanding. This argument can be used to prevent the user from expanding a row unless a certain condition is met.</p>
            <p class="body">This event is generated before a row has been expanded, either programmatically, or by user interaction. A row can be expanded programmatically by setting its <b>Expanded</b> property to True.</p>
            <p class="body">The expansion (plus/minus) indicators can be hidden for a row to preventthe user from expanding or collapsing it by setting the <b>ExpansionIndicator</b> property.</p>
            <p class="body">The <b>BeforeRowCollapsed</b> and <b>AfterRowCollapsed</b>  events are generated before and after, respectively, an expanded row has been collapsed.</p>
            <p class="body">The <b>AfterRowExpanded</b> event, which occurs after a row has been expanded, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowUpdate">
            <summary>
            Occurs before a row is updated, meaning changes made to its cells are actually committed to the data source.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will be updated. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the row from being updated and from committing changes to the data source. This argument can be used to prevent the row from being updated unless a certain condition is met.</p>
            <p class="body">This event is generated when a row is updated, meaning changes made to its cells are actually committed to the data source. Note that this is not necessarily when the row loses focus, since various factors such as the type of record locking employed by the data source, as well as the value of the <b>UpdateMode</b> property, can affect when the update occurs. The <b>BeforeCellUpdate</b> event is generated when a cell is accepting a new value.</p>
            <p class="body">To prevent the user from making changes to a cell, set the <b>AllowUpdate</b> property to 2 (AllowUpdateNo). A cell's value can be changed programmatically by setting its <b>Value</b> property.</p>
            <p class="body">A row can be updated programmatically by invoking its <b>Update</b> method.</p>
            <p class="body">The <b>AfterRowUpdate</b> event, which occurs after a row is updated, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowCancelUpdate">
            <summary>
            Occurs before the user cancels updates to a row by pressing the ESC key.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row whose update will be canceled. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the row's update from being canceled. This argument can be used to prevent the user from canceling an update unless a certain condition is met.</p>
            <p class="body">This event is generated when the user presses the ESC key to cancel changes made to cells in a row. It is also generated when the <b>CancelUpdate</b> method is invoked.</p>
            <p class="body">The <b>AfterRowCancelUpdate</b> event, which occurs after a row's update has been canceled, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCellCancelUpdate">
            <summary>
            Occurs after the user cancels changes to a cell's value by pressing the ESC key.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell whose update was canceled. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">This event is generated after the user presses the ESC key to cancel changes made to a cell's value. It is not generated when the <b>CancelUpdate</b> method is invoked. </p>
            <p class="body">The <b>BeforeCellCancelUpdate</b> event, which occurs before a cell's update is canceled, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.CellChange">
            <summary>
            Occurs when a cell in edit mode has its value modified by the user.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell whose value is being modified. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">This event is generated when the user is modifying the value of a cell in edit mode. Note that this does not necessarily mean that the changes will be committed to the data source, only that the user is editing the value of the cell.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.CellListSelect">
            <summary>
            Occurs when the user selects an item from a cell's dropdown list.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell that had an item selected. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">This event is generated when an item is selected from the cell's dropdown list. A dropdown list item is considered selected when the user clicks it or highlights it when navigating the list using navigation keys.</p>
            <p class="body">This event is only generated for a cell whose column's <b>Style</b> property is set to 4 (StyleDropDown), 5 (StyleDropDownList), 6 (StyleDropDownValidate), or 8 (StyleDropDownCalendar).</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.ClickCellButton">
            <summary>
            Occurs when a column is using the Button or EditButton style and the user clicks a cell's button.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell whose button was clicked. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">This event is generated when the user clicks a cell's button. A cell may be represented by a button or contain a button, based on its style.</p>
            <p class="body">This event is only generated for a cell whose column's <b>Style</b> property is set to 2 (StyleEditButton) or 7 (StyleButton).</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCellListCloseUp">
            <summary>
            Occurs after a cell's dropdown list has been closed in a column using one of the dropdown list styles.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell that had its dropdown list closed. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">This event is generated when a cell's dropdown list has been closed, either programmatically, or by user interaction. A cell's dropdown list can be closed programmatically by setting the cell's <b>DroppedDown</b> property to False.</p>
            <p class="body">This event is only generated for a cell whose column's <b>Style</b> property is set to 4 (StyleDropDown), 5 (StyleDropDownList), 6 (StyleDropDownValidate), or 8 (StyleDropDownCalendar).</p>
            <p class="body">Set the column's <b>ValueList</b> property in order to populate the dropdown list.</p>
            <p class="body">The <b>BeforeCellListDropDown</b> event is generated when a cell's dropdown list is dropped down.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterSelectChange">
            <summary>
            Occurs after one or more row, cell, or column objects were selected or deselected.
            </summary>
            <remarks>
            <p class="body">The <i>selectchange</i> argument indicates what type of object or objects involved in the selection: rows, cells, or columns. When a row or column is selected, the cells contained in it are not considered selected.</p>
            <p class="body">This event is generated before one or more objects have been selected or deselected, either programmatically, or by user interaction.</p>
            <p class="body">The control's <b>Selected</b> property can be used to determine what object or objects are currently selected.</p>
            <p class="body">The <b>BeforeSelectChange</b> event, which occurs before one or more row, cell, or column objects have been selected or deselected, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeSelectChange">
            <summary>
            Occurs before one or more row, cell, or column objects are selected or deselected.
            </summary>
            <remarks>
            <p class="body">The <i>selectchange</i> argument indicates what type of object or objects were involved in the selection: rows, cells, or columns. When a row or column is selected, the cells contained in it are not considered selected.</p>
            <p class="body">The <i>newselections</i> argument returns a reference to a Selected collection that can be used to retrieve references to the rows, cells, or columns that will be selected. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the object or objects from being selected. This argument can be used to prevent the user from changing the selection unless a certain condition is met.</p>
            <p class="body">This event is generated before one or more objects have been selected or deselected, either programmatically, or by user interaction.</p>
            <p class="body">The control's <b>Selected</b> property can be used to determine what object or objects were previously selected.</p>
            <p class="body">The <b>AfterSelectChange</b> event, which occurs after one or more row, cell, or column objects have been selected or deselected, is generated after this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterGroupPosChanged">
            <summary>
            Occurs after an UltraGridGroup object has been moved, sized, or swapped.
            </summary>
            <remarks>
            <p class="body">The <i>action</i> argument indicates which action occurred to the group or groups: moving, swapping, or sizing.</p>
            <p class="body">The <i>groups</i> argument returns a reference to a Groups collection that can be used to retrieve references to the UltraGridGroup object or objects that were moved, swapped, or sized. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">This event is generated after one or more groups are moved, swapped, or sized, either programmatically, or by user interaction. A group can be sized programmatically by setting its <b>Width</b> property and can be moved programmatically by setting its header's <b>VisiblePosition</b> property.</p>
            <p class="body">The <b>VisiblePosition</b> property of a group's header can be used to determine the new position of a group that was moved or swapped.</p>
            <p class="body">To prevent the user from attempting to move or swap a group, set the <b>AllowGroupMoving</b> or <b>AllowGroupSwapping </b>properties, respectively.</p>
            <p class="body">The <b>AfterColPosChanged</b> event is generated after one or more columns are moved, swapped, or sized.</p>
            <p class="body">The <b>BeforeGroupPosChanged</b> event, which occurs before one or more groups are moved, swapped, or sized, is generated before this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeAutoSizeEdit">
            <summary>
            Occurs before the multiple-line edit window is expanded.
            </summary>
            <remarks>
            <p class="body">This event can be used to adjust the size of the multiple-line edit window or prevent it from being displayed at all.</p>
            <p class="body">This event is passed a <see cref="T:Infragistics.Win.UltraWinGrid.CancelableAutoSizeEditEventArgs"/> object which contains information about the multi-line edit window that is about to be displayed. You can set the properties of this object to determine the appearance and behavior of the edit window. You can specify both the edit window's initial size (using the <b>StartHeight</b> and <b>StartWidth</b> properties) and its maximum size (using the <b>MaxHeight</b> and <b>MaxWidth</b> properties).</p>
            <p class="body">You can also cancel the display of the edit window. The <b>cancel</b> property of the object enables you to programmatically prevent the multiple-line edit window from being displayed. You can use this ability to make the display of the multi-line edit window conditional.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCellActivate">
            <summary>
            Occurs before a cell becomes active.
            </summary>
            <remarks>
            <p class="body">The<i>cell</i>argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell that will be activated. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">The<i>cancel</i>argument enables you to programmatically prevent the cell from being activated. This argument can be used to prevent the cell from activating unless a certain condition is met.</p>
            <p class="body">This event is generated before a cell is activated, which means it has been given focus.</p>
            <p class="body">The<b>BeforeCellDeactivate</b>event is generated before a cell is deactivated, meaning it will lose focus.</p>
            <p class="body">The<b>AfterCellActivate</b>event, which occurs after a cell is activated, is generated after this event, provided<i>cancel</i>is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCellListDropDown">
            <summary>
            Occurs before a cell's dropdown list is dropped down in a column using one of the dropdown list styles.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell that will have its dropdown list dropped down. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the cell's dropdown list from being dropped down. This argument can be used to prevent the dropdown list from dropping down unless a certain condition is met.</p>
            <p class="body">This event is generated when a cell's dropdown list is about to be dropped down, either programmatically, or by user interaction. A cell's dropdown list can be dropped down programmatically by setting the cell's <b>DroppedDown</b> property to True.</p>
            <p class="body">This event is only generated for a cell whose column's <b>Style</b> property is set to 4 (StyleDropDown), 5 (StyleDropDownList), 6 (StyleDropDownValidate), or 8 (StyleDropDownCalendar).</p>
            <p class="body">Set the column's <b>ValueList</b> property to a ValueList object to populate the dropdown list.</p>
            <p class="body">The <b>AfterCellListCloseUp</b> event is generated when a cell's dropdown list is closed.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCellCancelUpdate">
            <summary>
            Occurs before the user cancels changes to a cell's value by pressing the ESC key.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell whose update is about to be canceled. You can use this reference to access any of the returned cell's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the cell's update from being canceled. This argument can be used to prevent the user from canceling an update unless a certain condition is met.</p>
            <p class="body">This event is generated when the user presses the ESC key to cancel changes made to a cell's value. It is not generated when the <b>CancelUpdate</b> method is invoked.</p>
            <p class="body">The <b>AfterCellCancelUpdate</b> event, which occurs after a cell's update has been canceled, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCellDeactivate">
            <summary>
            Occurs before a cell is deactivated.
            </summary>
            <remarks>
            <p class="body">The<i>cancel</i>argument enables you to programmatically prevent the the cell from deactivating, meaning it will not lose focus. This argument can be used to prevent the user from leaving the cell unless a certain condition is met.</p>
            <p class="body">This event is generated when the user attempts to move to a different cell, deactivating the original cell.</p>
            <p class="body">The<b>BeforeCellActivate</b>event is generated before a cell  is activated, which means it will get focus.</p>
            <p class="body">The<b>ActiveCell</b>property can be used to determine which cell is currently active.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeEnterEditMode">
            <summary>
            Occurs before a cell enters edit mode.
            </summary>
            <remarks>
            <p class="body">The<i>cancel</i>argument enables you to programmatically prevent the cell from entering edit mode, meaning that the cell is prepared to accept input from the user. This argument can be used to prevent the cell from entering edit mode unless a certain condition is met.</p>
            <p class="body">This event is generated before a cell enters edit mode. This is different from cell activation, which occurs when the cell receives focus. The<b>BeforeCellActivate</b>event is generated before a cell is activated.</p>
            <p class="body">When a cell is in edit mode, the control's<b>IsInEditMode</b>property is set to True.</p>
            <p class="body">The<b>AfterEnterEditMode</b>event, which occurs after a cell enters edit mode, is generated after this event, provided<i>cancel</i>is not set to True.</p>
            <p class="body">The<b>BeforeExitEditMode</b>event is generated before a cell exits edit mode.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeExitEditMode">
            <summary>
            Occurs before a cell exits edit mode.
            </summary>
            <remarks>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the cell from exiting edit mode. This argument can be used to prevent the cell from leaving edit mode unless a certain condition is met.</p>
            <p class="body">When a cell is not in edit mode, the control's <b>IsInEditMode</b> property is set to False.</p>
            <p class="body">The <b>AfterExitEditMode</b> event, which occurs after a cell exits edit mode, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            <p class="body">The <b>BeforeEnterEditMode</b> event is generated before a cell enters edit mode.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowDeactivate">
            <summary>
            Occurs before a row is deactivated.
            </summary>
            <remarks>
            <p class="body">The<i>cancel</i>argument enables you to programmatically prevent the the row from deactivating, meaning it does not lose focus. This argument can be used to prevent the user from leaving the row unless a certain condition is met.</p>
            <p class="body">This event is generated when the user attempts to move to a different row, deactivating the original row.</p>
            <p class="body">The<b>BeforeRowActivate</b>event is generated before a row is activated, which means it will get focus.</p>
            <p class="body">The<b>ActiveRow</b>property can be used to determine which row is currently active.</p>
            </remarks>
            <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowActivate"/>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.SelectionDrag">
            <summary>
            Occurs when the user holds the primary mouse button down over a selected object for a short duration.
            </summary>
            <remarks>
            <p class="body">Since creating a new selection (of rows, columns, cells, etc.) and initiating a drag and drop operation can both be triggered by the same action (the user holding down the primarily mouse button and moving the mouse pointer), this event serves to differentiate between the two.</p>
            <p class="body">This event is generated when the user holds the primary mouse button down over a selected object for a short duration before actually moving the mouse pointer. If the mouse pointer is not moved before the duration expires, this event is generated; otherwise, a new selection is created and this event is not generated.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically restore the selection process, allowing the user to continue the selection action.</p>
            <p class="body">The programmer should use this event to implement drag and drop operations.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeGroupPosChanged">
            <summary>
            Occurs before one or more groups have been moved, swapped, or sized.
            </summary>
            <remarks>
            <p class="body">The <i>action</i> argument indicates which action will occur to the group or groups: moving, swapping, or sizing.</p>
            <p class="body">The <i>groups</i> argument returns a reference to a Groups collection that can be used to retrieve references to the UltraGridGroup object or objects that will be moved, swapped, or sized. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection. However, all properties of the affected groups are read-only in this event procedure.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the group or groups from being moved, swapped, or sized. This argument can be used to prevent the user from moving, swapping, or sizing groups unless a certain condition is met. To prevent the user from attempting to move or swap a group, set the <b>AllowGroupMoving</b> or <b>AllowGroupSwapping</b> properties, respectively.</p>
            <p class="body">This event is generated before one or more groups are moved, swapped, or sized, either programmatically, or by user interaction. A group can be sized programmatically by setting its <b>Width</b> property and can be moved programmatically by setting its header's <b>VisiblePosition</b> property.</p>
            <p class="body">The <b>VisiblePosition</b> property can be used to determine both the current and new positions of the group or groups that will be moved or swapped. New positions can be determined by reading the property off of the header of the group or groups in <i>groups</i>, while current positions can be determined by reading the property off of the header of the group or group in the appropriate band.</p>
            <p class="body">The <b>BeforeColPosChanged</b> event is generated before one or more columns are moved, swapped, or sized.</p>
            <p class="body">The <b>AfterGroupPosChanged</b> event, which occurs after one or more groups are moved, swapped, or sized, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeColRegionRemoved">
            <summary>
            Occurs before a column scrolling region is removed.
            </summary>
            <remarks>
            <p class="body">The <i>colscrollregion</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion that was removed. You can use this reference to access any of the returned colscrollregion's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the colscrollregion from being removed. This argument can be used to prevent the user from removing the colscrollregion unless a certain condition is met.</p>
            <p class="body">This event is generated before a colscrollregion is removed, either programmatically, or by user interaction. A colscrollregion can be removed programmatically by invoking the <b>Remove</b> method of the ColScrollRegions collection.</p>
            <p class="body">The <b>BeforeColRegionSplit</b> event is generated before a colscrollregion is split in two.</p>
            <p class="body">The <b>BeforeRowRegionSplit</b> event is generated before a rowscrollregion is split in two.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeColRegionSplit">
            <summary>
            Occurs before a column scrolling region is split into two column scrolling regions.
            </summary>
            <remarks>
            <p class="body">The<i>originalcolscrollregion</i>argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion as it exists before the split. You can use this reference to access any of the returned colscrollregion's properties or methods. However, the <b>Position</b> and <b>Width</b> properties of this colscrollregion are read-only in this event procedure.</p>
            <p class="body">The <i>newcolscrollregion</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion as it will exist after the split. You can use this reference to access any of the returned colscrollregion's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the colscrollregion from being split. This argument can be used to prevent the user from splitting the colscrollregion unless a certain condition is met.</p>
            <p class="body">This event is generated before a colscrollregion is split, either programmatically, or by user interaction. A colscrollregion can be split programmatically by invoking its <b>Split</b> method.</p>
            <p class="body">The <b>BeforeColRegionRemoved</b> event is generated before a colscrollregion is removed.</p>
            <p class="body">The <b>BeforeColRegionSize</b> event is generated before a colscrollregion is sized.</p>
            <p class="body">The <b>BeforeRowRegionSplit</b> event is generated before a rowscrollregion is split.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeColRegionScroll">
            <summary>
            Occurs before a column scrolling region is scrolled.
            </summary>
            <remarks>
            <p class="body">The <i>newstate</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion as it exists before the scroll. You can use this reference to access any of the returned colscrollregion's properties or methods.</p>
            <p class="body">The <i>oldstate</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the colscrollregion as it will exist after the scroll. You can use this reference to access any of the returned colscrollregion's properties or methods. However, the <b>Position</b> and <b>Width</b> properties of this colscrollregion are read-only in this event procedure.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the colscrollregion from scrolling. This argument can be used to prevent the user from scrolling unless a certain condition is met.</p>
            <p class="body">This event is generated before a colscrollregion is scrolled, either programmatically, or by user interaction. A colscrollregion can be scrolled programmatically by invoking its <b>Scroll</b> method.</p>
            <p class="body">The <b>ScrollBar</b> property of a scrolling region determines whether a scroll bar is displayed for that scrolling region.</p>
            <p class="body">The <b>AfterColRegionScroll</b> event, which occurs after a colscrollregion was scrolled, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            <p class="body">The <b>BeforeRowRegionScroll</b> event is generated before a rowscrollregion is scrolled.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeColRegionSize">
            <summary>
            Occurs before two adjacent column scrolling regions are sized.
            </summary>
            <remarks>
            <p class="body">The <i>region1</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the leftmost colscrollregion that will be sized. You can use this reference to access any of the returned colscrollregion's properties or methods. However, the <b>Width</b> property of this rowscrollregion is read-only in this event procedure.</p>
            <p class="body">The <i>region2</i> argument returns a reference to a ColScrollRegion object that can be used to set properties of, and invoke methods on, the rightmost colscrollregion that will be sized. You can use this reference to access any of the returned colscrollregion's properties or methods. However, the <b>Width</b> property of this rowscrollregion is read-only in this event procedure.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the colscrollregions from sizing. This argument can be used to prevent the user from resizing the colscrollregions unless a certain condition is met. To prevent users from actually moving the colscrollregion's splitter bar, set its <b>SizingMode</b> property to 0 (SizingModeFixed).</p>
            <p class="body">This event is generated before a colscrollregion is sized, either programmatically, or by user interaction. A colscrollregion can be sized programmatically by setting its <b>Width</b> property. Because colscrollregions are vertical scrolling regions, the height of all colscrollregions will always be identical. Attempting to set the <b>Width</b> property of a rowscrollregion being sized in this event procedure, however, will generate an error.</p>
            <p class="body">The <b>BeforeColRegionSplit</b> event is generated before a colscrollregion is split into two colscrollregions.</p>
            <p class="body">The <b>AfterColRegionSize</b> event, which occurs after a colscrollregion was sized, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowRegionRemoved">
            <summary>
            Occurs before a row scrolling region is removed.
            </summary>
            <remarks>
            <p class="body">The <i>rowscrollregion</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion that was removed. You can use this reference to access any of the returned rowscrollregion's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the colscrollregion from being removed. This argument can be used to prevent the user from removing the rowscrollregion unless a certain condition is met.</p>
            <p class="body">This event is generated before a rowscrollregion is removed, either programmatically, or by user interaction. A rowscrollregion can be removed programmatically by invoking the <b>Remove</b> method of the RowScrollRegions collection.</p>
            <p class="body">The <b>BeforeRowRegionSplit</b> event is generated before a rowscrollregion is split in two.</p>
            <p class="body">The <b>BeforeColRegionSplit</b> event is generated before a colscrollregion is split in two.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowInsert">
            <summary>
            Occurs before a new row is inserted.
            </summary>
            <remarks>
            <p class="body">The <i>band</i> argument returns a reference to an UltraGridBand object that can be used to set properties of, and invoke methods on, the band into which the new row will be inserted. You can use this reference to access any of the returned band's properties or methods.</p>
            <p class="body">The <i>parentrow</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will be the parent of the row to be inserted. You can use this reference to access any of the returned row's properties or methods. If the row being inserted is not a child, <i>parentrow</i> will be set to Nothing.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the row from being inserted. This argument can be used to prevent the user from inserting a new row unless a certain condition is met.</p>
            <p class="body">This event is generated after a new row has been inserted, either programmatically, or by user interaction. A new row can be inserted programmatically by invoking the <b>AddNew</b> method.</p>
            <p class="body">The <b>AfterRowInsert</b> event, which occurs after a row is inserted, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCellUpdate">
            <summary>
            Occurs before a cell accepts a new value.
            </summary>
            <remarks>
            <p class="body">The <i>cell</i> argument returns a reference to an UltraGridCell object that can be used to set properties of, and invoke methods on, the cell whose value will be modified. You can use this reference to access any of the returned cell's properties or methods. However, the <b>Value</b>   property of this cell is read-only.</p>
            <p class="body">The <i>newvalue</i> argument indicates what the new value of the cell will be. The <b>Value</b> property of the UltraGridCell object returned by <i>cell</i> can be used to determine the existing value of the cell.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the cell from accepting the new value. This argument can be used to prevent the cell from accepting the new value unless a certain condition is met.</p>
            <p class="body">This event is generated when a cell's value has been changed, either programmatically, or by user interaction. Note that the cell's new value is not necessarily committed to the data source at this time, since various factors such as the type of record locking employed by the data source, as well as the value of the <b>UpdateMode</b> property, can affect when the update occurs. The <b>BeforeRowUpdate</b> event is generated when the new value is to be committed to the data source.</p>
            <p class="body">A cell's value can be changed programmatically by setting its <b>Value</b> property. Attempting to set the <b>Value</b> property of the cell whose value will be modified in this event procedure, however, will generate an error.</p>
            <p class="body">The <b>AfterCellUpdate</b> event, which occurs after a cell accepts a new value, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowResize">
            <summary>
            Occurs before a row has been resized.
            </summary>
            <remarks>
            <p class="body">The <i>row</i> argument returns a reference to an UltraGridRow object that can be used to set properties of, and invoke methods on, the row that will be resized. You can use this reference to access any of the returned row's properties or methods.</p>
            <p class="body">The <i>rowheight</i> argument indicates the new height of the row. The current height is indicated by the <b>Height</b> property of the UltraGridRow object returned by <i>row</i>.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the row from being resized. This argument can be used to prevent the row from resizing unless a certain condition is met.</p>
            <p class="body">Depending on the value of the <b>RowSizing</b> property, more than one row can be affected by the resize. In this case, <i>row</i> refers to the original row being resized.</p>
            <p class="body">The <b>AfterRowResize</b> event, which occurs after a row has been resized, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowsDeleted">
            <summary>
            Occurs before one or more rows are deleted.
            </summary>
            <remarks>
            <p class="body">The <i>rows</i> argument returns a reference to a Rows collection that can be used to retrieve references to the UltraGridRow object or objects being deleted. You can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            <p class="body">The <i>displaypromptmsg</i> argument enables you to hide the default confirmation message. This argument can be used to display your own dialog.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the rows from being deleted. This argument can be used to prevent the user from deleting rows unless a certain condition is met.</p>
            <p class="body">This event is generated when rows are to be deleted, either programmatically, or by user interaction. To prevent the user from deleting rows, set the <b>AllowDelete</b> property to False. Rows can be deleted programmatically by invoking either the <b>Delete</b> method or the <b>DeleteSelectedRows</b> method.</p>
            <p class="body">To prevent an individual row from being deleted, remove it from the Rows collection returned by <i>rows</i>.</p>
            <p class="body">The text displayed in the default confirmation dialog can be modified by setting the <b>DialogStrings</b> property.</p>
            <p class="body">The <b>AfterRowsDeleted</b> event, which occurs after rows are deleted, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowRegionScroll">
            <summary>
            Occurs before a row scrolling region is scrolled.
            </summary>
            <remarks>
            <p class="body">The <i>newstate</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion as it exists after the scroll. You can use this reference to access any of the returned rowscrollregion's properties or methods.</p>
            <p class="body">The <i>oldstate</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion as it will exist after the scroll. You can use this reference to access any of the returned rowscrollregion's properties or methods.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the rowscrollregion from scrolling. This argument can be used to prevent the user from scrolling unless a certain condition is met.</p>
            <p class="body">This event is generated before a rowscrollregion is scrolled, either programmatically, or by user interaction. A rowscrollregion can be scrolled programmatically by invoking its <b>Scroll</b> method.</p>
            <p class="body">The <b>ScrollBar</b> property of a scrolling region determines whether a scroll bar is displayed for that scrolling region.</p>
            <p class="body">The <b>AfterRowRegionScroll</b> event, which occurs after a rowscrollregion was scrolled, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            <p class="body">The <b>BeforeColRegionScroll</b> event is generated before a colscrollregion is scrolled.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowRegionSize">
            <summary>
            Occurs before a row scrolling region object is resized.
            </summary>
            <remarks>
            <p class="body">The <i>region1</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the top rowscrollregion that will be sized. You can use this reference to access any of the returned rowscrollregion's properties or methods. However, the <b>Height</b> property of this rowscrollregion is read-only in this event procedure.</p>
            <p class="body">The <i>region2</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the bottom rowscrollregion that will be sized. You can use this reference to access any of the returned rowscrollregion's properties or methods. However, the <b>Height</b> property of this rowscrollregion is read-only in this event procedure.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the rowscrollregions from sizing. This argument can be used to prevent the user from resizing the rowscrollregions unless a certain condition is met. To prevent users from actually moving the rowscrollregion's splitter bar, set its <b>SizingMode</b> property to 0 (SizingModeFixed).</p>
            <p class="body">This event is generated before a rowscrollregion is sized, either programmatically, or by user interaction. A rowscrollregion can be sized programmatically by setting its <b>Height</b> property. Because rowscrollregions are vertical scrolling regions, the width of all rowscrollregions will always be identical. Attempting to set the <b>Height</b> property of a rowscrollregion being sized in this event procedure, however, will generate an error.</p>
            <p class="body">The <b>BeforeRowRegionSplit</b> event is generated before a rowscrollregion is split into two rowscrollregions.</p>
            <p class="body">The <b>AfterRowRegionSize</b> event, which occurs after a rowscrollregion was sized, is generated after this event, provided <i>cancel</i> is not set to True.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowRegionSplit">
            <summary>
            Occurs before a row scrolling region is split into two row scrolling regions.
            </summary>
            <remarks>
            <p class="body">The <i>originalrowscrollregion</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion as it exists before the split. You can use this reference to access any of the returned rowscrollregion's properties or methods. However, the <b>Height</b> property of this rowscrollregion is read-only in this event procedure.</p>
            <p class="body">The <i>newrowscrollregion</i> argument returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion as it will exist after the split. You can use this reference to access any of the returned rowscrollregion's properties or methods. However, the <b>Height</b> property of this rowscrollregion is read-only in this event procedure.</p>
            <p class="body">The <i>cancel</i> argument enables you to programmatically prevent the rowscrollregion from being split. This argument can be used to prevent the user from splitting the rowscrollregion unless a certain condition is met.</p>
            <p class="body">This event is generated before a rowscrollregion is split, either programmatically, or by user interaction. A rowscrollregion can be split programmatically by invoking its <b>Split</b> method.</p>
            <p class="body">The <b>BeforeRowRegionRemoved</b> event is generated before a rowscrollregion is removed.</p>
            <p class="body">The <b>BeforeRowRegionSize</b> event is generated before a rowscrollregion is sized.</p>
            <p class="body">The <b>BeforeColRegionSplit</b> event is generated before a colscrollregion is split.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.Error">
            <summary>
            Occurs when an error condition arises in the control.
            </summary>
            <remarks>
            <p class="body">The <i>errorinfo</i> argument returns a reference to an Error object that can be used to set properties of, and invoke methods on, the error that generated this event. You can use this reference to access any of the returned error's properties or methods.</p>
            <p class="body">The <b>Code</b> and <b>Description</b> properties of <i>errorinfo</i> can be used to determine the number and description, respectively, of the error that generated this event.</p>
            <p class="body">When the error is related to the data source, the <b>DataError</b> property is set and can be used to further analyze what occurred.</p>
            <p class="body">Conversely, when the error is related to input validation, the <b>MaskError</b> property is set. The control can distinguish between numeric and alphabetic characters for input validation, but cannot validate for valid content, such as the correct month or time of day. In these cases, this event is not generated.</p>
            <p class="body">This event can be generated any time the control encounters an unexpected situation, such as if an update is attempted and the data source is not updateable.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.CellDataError">
            <summary>
            Occurs after BeforeExitEditMode is fired when the value user has typed is invalid. 
            </summary>
            <remarks>
            <p class="body">CellDataError is fired when the user tries to update the cell with an invalid value. It gets fired after BeforeExitEditMode is fired. If BeforeExitEditMode is cancalled, then this event and successive events related to exiting the edit mode are not fired.</p>
            <p class="body">Thie event gets fired either because the value in the editor is invalid, or when setting the value to bound datasource does not succed. If the grid fails to validate the value, then it will fire this event and will not attempt to update the cell with the value. If validations succeds, then the grid will attempt to update the cell, and if that fails, then it will fire this event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrintPreview">
            <summary>
            Occurs when a print preview is first initiated by invoking the <b>PrintPreview</b> method.
            </summary>
            <remarks>
            <p class="body">The <b>InitializePrintPreview</b> event occurs when the print job is first initiated via the <b>PrintPreview</b> method. It gives you the opportunity to set the default parameters for the print preview (level of zoom, preview window title and icon) and to apply default print job settings (such as page header and footer, margins, etc.) to the data being previewed. You use the <b>PrintInfo</b> object passed to the event via the <i>printinfo</i> parameter to apply these settings.</p>
            <p class="body">After you have set up the default print settings in the <b>InitializePrintPreview</b> event, the Print Preview screen will be displayed to the end user, previewing what the print job will look like using the settings you have specified. The user can view different parts of the report or change the settings of the print job by interacting directly with the provided interface. They can also choose to print directly from the preview screen, which will trigger the <b>InitializePrint</b> event. depending on how the <b>PrintPreview</b> method was invoked, the Print dialog may also be displayed.</p>
            <p class="body">The PrintInfo object is only accessible during this event, the <b>BeforePrint</b> event, the <b>InitializePrint</b> event and the <b>InitializeLogicalPrintPage</b> event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializeLogicalPrintPage">
            <summary>
            Occurs when a logical print page is being formatted for printing or previewing.
            </summary>
            <remarks>
            <p class="body">When you print a report using UltraWinGrid, you may find that the data from the grid does not easily fit onto a single sheet of paper. Although this is usually because there are too many rows to fit vertically, it is also possible that your data consists of too many columns to fit horizonatally. For this reason, the control must sometimes make a distinction between a single "logical" page and the "physical" page (or sheets of paper) that may be required to print it. Essentially, logical pages break only on row boundaries. If you print a report with enough columns to fill the widths of three sheets of paper, the first logical page will comprise three physical pages.</p>
            <p class="body"><div align="center"><img src="logical page.gif" width="417" height="282" alt="Logical vs. Physical Pages" border="0"></img></div></p>
            <p class="body">The <b>InitializeLogicalPrintPage</b> event occurs whenever the formatting of a new logical page is being calculated in preparation for printing or previewing. You can use the event to make changes to the logical page, such as changing the text of the page header or footer. You can access the settings of the print job (such as the text of the header and footer) by using the properties of LogicalPageLayoutInfo object that is passed into the event via the <i>LogicalPageLayoutInfo</i> parameter.</p>
            <p class="body">A common use of this event would be to increment the page number for each page of the report. The <i>LogicalPageNumber</i> parameter passed to the event makes this easy by providing you with the number of the current logical page. Automatic page numbering can be accomplished by setting the PageHeader or PageFooter to a string containing the token <b>&lt;#&gt;</b>. This token will be replaced by the page number.</p>
            <p class="body">If you wish to make changes to a print job based on the physical page of a report, you must use the <b>DrawFilter</b> interface.</p>
            <p class="body">The LogicalPageLayoutInfo object is only accessible during this event, the <b>BeforePrint</b> event, the <b>IntitializePrint</b> event and the <b>IntitializePrintPreview</b> event. Note that changes made to the print job in the <b>BeforePrint</b> event will cause the <b>InitializeLogicalPrintPage</b> event to occur again.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint">
            <summary>
            Occurs when a print job is first initiated by invoking the <b>Print</b> method.
            </summary>
            <remarks>
            <p class="body">The <b>InitializePrint</b> event occurs when the print job is first initiated via the <b>Print</b> method. It gives you the opportunity to set the default parameters for the print job (number of copies, page orientation, header and footer text, etc.) After you have set up the default print settings in the <b>InitializePrint</b> event, the Page Setup and Print dialogs may be displayed to the end user, depending on the parameters passed to the <b>Print</b> method. The user can change the defaults you have specified through these dialogs. Once the user has completed their changes, the <b>BeforePrint</b> event occurs, giving you the chance to examine the user's settings, change them if necessary or store them for future use.</p>
            <p class="body">The <b>PrintInfo</b> object is only accessible during this event, the <b>BeforePrint</b> event, the <b>IntitializePrintPreview</b> event and the <b>InitializeLogicalPrintPage</b> event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforePrint">
            <summary>
            Occurs after a print job has been initiated and configured by the user, just before data is sent to the printer.
            </summary>
            <remarks>
            <p class="body">The <b>BeforePrint</b> event occurs before the report is sent to the printer, but after the user has had the opportunity to configure the print job using the Print and Page Setup dialogs. The Print and Page Setup dialogs can be made available to the user when invoking the <b>Print</b> method, and will contain any default settings you have specified for the print job in the <b>InitializePrint</b> event. The <b>BeforePrint</b> event is the last opportunity you have to change the parameters of a print job before it is committed to the print queue.</p>
            <p class="body">You can use the <b>BeforePrint</b> event to programmatically examine any changes to the PrintInfo object resulting from the user's actions. You can then choose to modify the user's settings where appropriate, or store them for later use.</p>
            <p class="body">The PrintInfo object is only accessible during this event, the <b>InitializeLogicalPrintPage</b> event, the <b>InitializePrint</b> event and the <b>InitializePrintPreview</b> event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeSummaryDialog">
            <summary>
            This event is fired before the grid is about to show the dialog for user to select summaries for a column. If its cancelled, the grid wont proceed.
            </summary>
            <remarks>
            <p class="body">You can use the <b>BeforeSummaryDialog</b> event to cancel the drop down.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterSummaryDialog">
            <summary>
            This event is fired after the user closes the dialog for selecting summaries for a column.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.SummaryValueChanged">
            <summary>
            This event is fired when a summary value for a summary changes. It is also fired when the summary is calculated for the first time. The user can initialize appearance and other settings off the SummaryValue object that gets passed in the event handler.
            </summary>
            <remarks>
            <p class="body">You can use the <b>SummaryValueChanged</b> event to apply any appearance settings to passed in SummaryValue object.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowLayoutItemResized">
            <summary>
            This event is fired when the user resizes a column header or a cell in the row-layout mode.
            </summary>
            <remarks>
            <p class="body">BeforeRowLayoutItemResized is fired when the user resizes a column header or a cell in the row-layout mode. It fires the event before applying the new width or the height to the item that's being resized. This event gives you an opportunity to prevent the user from resizing an item or change the new resized size.</p>
            <p><seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowLayoutItemResized"/></p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterRowLayoutItemResized">
            <summary>
            This event is fired after the user has resized a column header or a cell in the row-layout mode.
            </summary>
            <remarks>
            <p class="body">AfterRowLayoutItemResized is fired after the user has resized a column header or a cell in the row-layout mode.</p>
            <p><seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeRowLayoutItemResized"/></p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforePerformAction">
            <summary>
            BeforePerformAction event gets fired before an action associated with a key action mapping
            is about to be performed.
            </summary>
            <remarks>
            <p class="body">BeforePerformAction event gets fired before an action associated with a key action mapping is about to be performed. It is a cancelable event. When it's cancled, the UltraGrid will not perform the action for which this event was fired.</p>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.KeyActionMappings"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.BeforeUltraGridPerformActionEventArgs"/> <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterPerformAction"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterPerformAction">
            <summary>
            AfterPerformAction evet gets fired after an action associated with a key action mapping
            has been performed.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.KeyActionMappings"/> <seealso cref="T:Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventArgs"/> <seealso cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforePerformAction"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCardsScroll">
            <summary>
            AfterCardsScroll is fired when the user scrolls cards in a card area.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.AfterCardsScrollEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeCardCompressedStateChanged">
            <summary>
            BeforeCardCompressedStateChanged is fired before a Card Row is Expanded or Compressed.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.BeforeCardCompressedStateChangedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.AfterCardCompressedStateChanged">
            <summary>
            AfterCardCompressedStateChanged is fired after a Card Row is Expanded or Compressed.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.AfterCardCompressedStateChangedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforeDisplayDataErrorTooltip">
            <summary>
            BeforeDisplayDataErrorTooltip is fired before displaying data error tooltip.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SupportDataErrorInfo"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.About">
            <summary>
            Display the about dialog
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.ExitEditModeOnLeave">
            <summary>
            Indicates whether to exit the edit mode when the focus leaves the grid, specifically when OnLeave gets called. Default value is true.
            </summary>
            <remarks>
            <p class="body">You can use this property to prevent the grid from exiting the edit mode when focus leaves the grid. By default grid exits the edit mode when OnLeave gets called. However you can set this property to false to prevent the grid from doing that. Note: If this is set to false, the update modes of OnRowChangeOrLostFocus and OnCellChangeOrLostFocus will act like OnRowChange and OnCellChange respectively.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.Selected">
            <summary>
            Returns a reference to a Selected object containing collections of all the selected objects in the grid. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">The <b>Selected</b> property of the UltraWinGrid is used to work with any of the currently selected items in the grid. It provides access to the Selected object, which contains three collection sub-objects. Each collection holds one type of selected object; there are collections for rows, columns and cells. Whenever an UltraGridRow, UltraGridColumn or UltraGridCell object in the grid is selected, it is added to the corresponding collection of the Selected object. Deselecting an object removes it from the collection.</p>
            <p class="body">You can use the <b>Selected</b> property to iterate through the selected items of any type, or to examine or change the properties of any selected item.</p>
            <p>
            The following sample code copies CustomerID and ContactName fields of all the selected rows to the clipboard as text. It assumes that these fields exist in the table that the selected rows are from and that the rows are not UltraGridGroupByRows.
            </p>
            <p></p>
            <p>C#:</p>
            <p></p>
            <pre>
            private void button1_Click(object sender, System.EventArgs e)
            {
            	Infragistics.Win.UltraWinGrid.SelectedRowsCollection selectedRows;
            
            	// Get the selected rows.
            	//
            	selectedRows = this.ultraGrid1.Selected.Rows;
            
            	// If there are no selected rows, return
            	//
            	if ( selectedRows.Count &lt; 1 )
            		return;
            
            	System.Text.StringBuilder sb = new System.Text.StringBuilder( );
            
            	// Loop through all the selected rows
            	//
            	for ( int i = 0; i &lt; selectedRows.Count; i++ )
            	{
            		Infragistics.Win.UltraWinGrid.UltraGridRow row;
            
            		row = selectedRows[i];
            
            		// Use Cells collection to get the values for 
            		// CustomerID and ContactName columns.
            		//
            		sb.Append( row.Cells[ "CustomerID" ].Text );
            		sb.Append( "," );
            		sb.Append( row.Cells["ContactName"].Text );
            
            		sb.Append( "\r\n" );
            	}
            
            	// Copy the text to the clipboard.
            	//
            	System.Windows.Forms.Clipboard.SetDataObject( sb.ToString( ) );
            }
            </pre>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.EventManager">
            <summary>
            The object that enables, disables and controls firing of specific control events.
            </summary>
            <remarks>
            <p class="body">The UltraWinGrid event manager gives you a high degree of control over how the control invokes event procedures. You can use it to selectively enable and disable event procedures depending on the context of your application. You can also use the event manager to return information about the state of the control's events.</p>
            <p class="body">The event manager's methods are used to determine the enabled state of an event (<see cref="M:Infragistics.Win.UltraWinGrid.GridEventManager.IsEnabled(Infragistics.Win.UltraWinGrid.GridEventIds)"/>), to selectively enable or disable events (<see cref="M:Infragistics.Win.UltraWinGrid.GridEventManager.SetEnabled(Infragistics.Win.UltraWinGrid.GridEventIds,System.Boolean)"/>), and to tell whether an event procedure is currently being processed (<see cref="M:Infragistics.Win.UltraWinGrid.GridEventManager.InProgress(Infragistics.Win.UltraWinGrid.GridEventIds)"/>). There is also an <seealso cref="P:Infragistics.Shared.EventManagerBase.AllEventsEnabled"/> property that you can check to quickly determine whether any events have been disabled by the event manager.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.CurrentState">
            <summary>
            Returns bit flags that signify the current editing state of the control.
            </summary>
            <remarks>
            The <b>CurrentState</b> property is used primarily in conjunction with the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGrid.KeyActionMappings"/><b>KeyActionMappings</b> property and the <see cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction)"/> method to return information about the state of the control with regards to user interaction. The setting of the <b>CurrentState</b> property indicates which object has focus in the control, whether the user has placed the control into edit mode, and other information such as whether a combo box is dropped down or whether a row is expanded.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.SelectionStrategyFilter">
            <summary>
            Returns or sets the selection strategy filter for the control.
            </summary>
            <remarks>
            <p class="body">You can specify what type of selection is allowed for various types of objects by using the properties of the UltraGridOverride object. The properties <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeCell"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeCol"/>, <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeGroupByRow"/> and <seealso cref="P:Infragistics.Win.UltraWinGrid.UltraGridOverride.SelectTypeRow"/> are used to specify a selection strategy for the corresponding type of object.</p>
            <p class="body">UltraWinGrid uses <i>selection strategies</i> to control the types of selection the user can perform in the control. A selection strategy is an extended set of attributes covering options such as multiple vs. single selection, range vs. discrete selection, non-contiguous selection, what types of objects may be selected and how selection is initiated and completed using the keyboard and mouse. Selection strategies are implemented using the SelectionManager object and the ISelectionFilter interface. Selection strategies are defined in the Infragistics.Win assembly.</p>
            <p class="body">UltraWinGrid includes pre-defined strategies for the most common types of selection that are performed in a grid. You can also create your own selection strategies by deriving your own selection filter classes from those supplied and overriding selected virtual methods.</p>
            <p class="body">Since selection is primarily a function of the user interface, selection logic is based off of the UIElement for an object. The <b>Selectable</b> property of the UIElement determines whether the object can be selected.</p>
            <p class="body">The following table lists the default key mappings for the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/> control:<br></br>
            <TABLE BORDER="1" WIDTH="100%">
            <THEAD>
            <TR>
            <TH>KeyCode</TH>
            <TH>ActionCode</TH>
            <TH>StateRequired</TH>
            <TH>StateDisallowed</TH>
            <TH>SpecialKeysRequired</TH>
            <TH>SpecialKeysDisallowed</TH>
            </TR>
            </THEAD>
            <TBODY>
            <TR>
            <TD class="body">Right</TD><TD class="body">NextCell</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Tab</TD><TD class="body">NextCellByTab</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">Left</TD><TD class="body">PrevCell</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Tab</TD><TD class="body">PrevCellByTab</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Shift</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Up</TD><TD class="body">AboveCell</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Down</TD><TD class="body">BelowCell</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Home</TD><TD class="body">FirstRowInBand</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">End</TD><TD class="body">LastRowInBand</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Right</TD><TD class="body">FirstRowInGrid</TD><TD class="body">None</TD><TD class="body">Row</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Down</TD><TD class="body">FirstRowInGrid</TD><TD class="body">None</TD><TD class="body">Row</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Home</TD><TD class="body">FirstRowInGrid</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">Ctrl</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">End</TD><TD class="body">LastRowInGrid</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">Ctrl</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Right</TD><TD class="body">ExpandRow</TD><TD class="body">RowExpandable</TD><TD class="body">Cell, RowExpanded</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Left</TD><TD class="body">CollapseRow</TD><TD class="body">RowExpanded</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Right</TD><TD class="body">NextRow</TD><TD class="body">Row</TD><TD class="body">Cell, RowExpandable</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Right</TD><TD class="body">NextRow</TD><TD class="body">Row, RowExpanded</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Tab</TD><TD class="body">NextRowByTab</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">Left</TD><TD class="body">PrevRow</TD><TD class="body">Row</TD><TD class="body">Cell, RowExpanded</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Tab</TD><TD class="body">PrevRowByTab</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">Shift</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Up</TD><TD class="body">AboveRow</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Down</TD><TD class="body">BelowRow</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Space</TD><TD class="body">ToggleCheckbox</TD><TD class="body">InEdit, IsCheckbox</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">Space</TD><TD class="body">ToggleCellSel</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">Space</TD><TD class="body">ToggleRowSel</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">Space</TD><TD class="body">DeactivateCell</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Ctrl</TD><TD class="body">AltShift</TD>
            </TR>
            <TR>
            <TD class="body">Space</TD><TD class="body">ActivateCell</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">Ctrl</TD><TD class="body">AltShift</TD>
            </TR>
            <TR>
            <TD class="body">Right</TD><TD class="body">NextCellInBand</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">Ctrl</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Left</TD><TD class="body">PrevCellInBand</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">Ctrl</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Home</TD><TD class="body">FirstCellInRow</TD><TD class="body">Cell</TD><TD class="body">CellFirst, InEdit</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">End</TD><TD class="body">LastCellInRow</TD><TD class="body">Cell</TD><TD class="body">CellLast, InEdit</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Home</TD><TD class="body">FirstCellInBand</TD><TD class="body">CellFirst</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">End</TD><TD class="body">LastCellInBand</TD><TD class="body">CellLast</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Home</TD><TD class="body">FirstCellInGrid</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">Ctrl</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">End</TD><TD class="body">LastCellInGrid</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">Ctrl</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Prior</TD><TD class="body">PageUpCell</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Next</TD><TD class="body">PageDownCell</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Prior</TD><TD class="body">PageUpRow</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Next</TD><TD class="body">PageDownRow</TD><TD class="body">Row</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Escape</TD><TD class="body">UndoCell</TD><TD class="body">InEdit</TD><TD class="body">IsDroppedDown</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Escape</TD><TD class="body">UndoRow</TD><TD class="body">Row</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Escape</TD><TD class="body">CloseDropdown</TD><TD class="body">IsDroppedDown</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Enter</TD><TD class="body">CloseDropdown</TD><TD class="body">IsDroppedDown</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Enter</TD><TD class="body">ExpandRow</TD><TD class="body">GroupByRow</TD><TD class="body">IsDroppedDown, RowExpanded</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Enter</TD><TD class="body">CollapseRow</TD><TD class="body">RowExpanded, GroupByRow</TD><TD class="body">IsDroppedDown</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">F4</TD><TD class="body">ToggleDropdown</TD><TD class="body">HasDropdown, InEdit</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Up</TD><TD class="body">ToggleDropdown</TD><TD class="body">HasDropdown, InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD><TD class="body">None</TD>
            </TR>
            <TR>
            <TD class="body">Down</TD><TD class="body">ToggleDropdown</TD><TD class="body">HasDropdown, InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD><TD class="body">None</TD>
            </TR>
            <TR>
            <TD class="body">F2</TD><TD class="body">ToggleEditMode</TD><TD class="body">Cell</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">F4</TD><TD class="body">EnterEditModeAndDropdown</TD><TD class="body">HasDropdown</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">Up</TD><TD class="body">EnterEditModeAndDropdown</TD><TD class="body">HasDropdown</TD><TD class="body">InEdit</TD><TD class="body">Alt</TD><TD class="body">None</TD>
            </TR>
            <TR>
            <TD class="body">Down</TD><TD class="body">EnterEditModeAndDropdown</TD><TD class="body">HasDropdown</TD><TD class="body">InEdit</TD><TD class="body">Alt</TD><TD class="body">None</TD>
            </TR>
            <TR>
            <TD class="body">F6</TD><TD class="body">NextRegion</TD><TD class="body">None</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">F6</TD><TD class="body">PrevRegion</TD><TD class="body">None</TD><TD class="body">InEdit</TD><TD class="body">Shift</TD><TD class="body">AltCtrl</TD>
            </TR>
            <TR>
            <TD class="body">Delete</TD><TD class="body">DeleteRows</TD><TD class="body">Row</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">All</TD>
            </TR>
            <TR>
            <TD class="body">F2</TD><TD class="body">EnterEditMode</TD><TD class="body">Cell</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            <TR>
            <TD class="body">F2</TD><TD class="body">ExitEditMode</TD><TD class="body">InEdit</TD><TD class="body">None</TD><TD class="body">None</TD><TD class="body">Alt</TD>
            </TR>
            </TBODY>
            </TABLE>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.KeyActionMappings">
            <summary>
            Gives you the ability to reconfigure the way the control responds to user keystrokes.
            </summary>
            <remarks>
            <p class="body">The <b>KeyActionMappings</b> property provides access to the control's mechanism for handling keyboard input from users. All keystrokes for actions such as selection, navigation and editing are stored in a table-based system that you can examine and modify using this property. Through the <b>KeyActionsMappings</b> property, you can customize the keyboard layout of the control to match your own standards for application interactivity.</p>
            <p class="body">For example, if you wanted users to be able to navigate between cells by pressing the F8 key, you could add this behavior. You can specify the key code and any special modifier keys associated with an action, as well as determine whether a key mapping applies in a given context.</p>
            <p class="body">The following table lists the default key mappings for the <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/> control:</p>
            <p class="body">
            <table border="1" cellpadding="3" width="100%" class="FilteredItemListTable">
            <thead>
            <tr>
            <th>KeyCode</th>
            <th>ActionCode</th>
            <th>StateRequired</th>
            <th>StateDisallowed</th>
            <th>SpecialKeysRequired</th>
            <th>SpecialKeysDisallowed</th>
            </tr>
            </thead>
            <tbody>
            <tr><td class="body">Right</td><td class="body">NextCell</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Tab</td><td class="body">NextCellByTab</td><td class="body">Cell</td><td class="body"></td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">Left</td><td class="body">PrevCell</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Tab</td><td class="body">PrevCellByTab</td><td class="body">Cell</td><td class="body"></td><td class="body">Shift</td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Up</td><td class="body">AboveCell</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Down</td><td class="body">BelowCell</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Home</td><td class="body">FirstRowInBand</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">End</td><td class="body">LastRowInBand</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Right</td><td class="body">FirstRowInGrid</td><td class="body"></td><td class="body">Row</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Down</td><td class="body">FirstRowInGrid</td><td class="body"></td><td class="body">Row</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Home</td><td class="body">FirstRowInGrid</td><td class="body">Row</td><td class="body">Cell</td><td class="body">Ctrl</td><td class="body">Alt</td></tr>
            <tr><td class="body">End</td><td class="body">LastRowInGrid</td><td class="body">Row</td><td class="body">Cell</td><td class="body">Ctrl</td><td class="body">Alt</td></tr>
            <tr><td class="body">Right</td><td class="body">ExpandRow</td><td class="body">RowExpandable</td><td class="body">Cell, RowExpanded</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Left</td><td class="body">CollapseRow</td><td class="body">RowExpanded</td><td class="body">Cell</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Right</td><td class="body">NextRow</td><td class="body">Row</td><td class="body">Cell, RowExpandable</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Right</td><td class="body">NextRow</td><td class="body">Row, RowExpanded</td><td class="body">Cell</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Tab</td><td class="body">NextRowByTab</td><td class="body">Row</td><td class="body">Cell, LastRowInGrid</td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">Left</td><td class="body">PrevRow</td><td class="body">Row</td><td class="body">Cell, RowExpanded</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Tab</td><td class="body">PrevRowByTab</td><td class="body">Row</td><td class="body">Cell, FirstRowInGrid</td><td class="body">Shift</td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Up</td><td class="body">AboveRow</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Down</td><td class="body">BelowRow</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Space</td><td class="body">ToggleCheckbox</td><td class="body">InEdit, IsCheckbox</td><td class="body"></td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">Space</td><td class="body">ToggleCellSel</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">Space</td><td class="body">ToggleRowSel</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">Space</td><td class="body">DeactivateCell</td><td class="body">Cell</td><td class="body"></td><td class="body">Ctrl</td><td class="body">AltShift</td></tr>
            <tr><td class="body">Space</td><td class="body">ActivateCell</td><td class="body">Row</td><td class="body">Cell</td><td class="body">Ctrl</td><td class="body">AltShift</td></tr>
            <tr><td class="body">Right</td><td class="body">NextCellInBand</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body">Ctrl</td><td class="body">Alt</td></tr>
            <tr><td class="body">Left</td><td class="body">PrevCellInBand</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body">Ctrl</td><td class="body">Alt</td></tr>
            <tr><td class="body">Home</td><td class="body">FirstCellInRow</td><td class="body">Cell</td><td class="body">CellFirst, InEdit</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">End</td><td class="body">LastCellInRow</td><td class="body">Cell</td><td class="body">CellLast, InEdit</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Home</td><td class="body">FirstCellInBand</td><td class="body">CellFirst</td><td class="body">InEdit</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">End</td><td class="body">LastCellInBand</td><td class="body">CellLast</td><td class="body">InEdit</td><td class="body"></td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Home</td><td class="body">FirstCellInGrid</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body">Ctrl</td><td class="body">Alt</td></tr>
            <tr><td class="body">End</td><td class="body">LastCellInGrid</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body">Ctrl</td><td class="body">Alt</td></tr>
            <tr><td class="body">Prior</td><td class="body">PageUpCell</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Next</td><td class="body">PageDownCell</td><td class="body">Cell</td><td class="body">InEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Prior</td><td class="body">PageUpRow</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Next</td><td class="body">PageDownRow</td><td class="body">Row</td><td class="body">Cell</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Escape</td><td class="body">UndoCell</td><td class="body">InEdit</td><td class="body">IsDroppedDown</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Escape</td><td class="body">UndoRow</td><td class="body">Row, RowDirty</td><td class="body">InEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Enter</td><td class="body">ExpandRow</td><td class="body">GroupByRow</td><td class="body">IsDroppedDown, RowExpanded</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Enter</td><td class="body">CollapseRow</td><td class="body">RowExpanded, GroupByRow</td><td class="body">IsDroppedDown</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">F4</td><td class="body">ToggleDropdown</td><td class="body">HasDropdown, InEdit</td><td class="body"></td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Up</td><td class="body">ToggleDropdown</td><td class="body">HasDropdown, InEdit</td><td class="body"></td><td class="body">Alt</td><td class="body"></td></tr>
            <tr><td class="body">Down</td><td class="body">ToggleDropdown</td><td class="body">HasDropdown, InEdit</td><td class="body"></td><td class="body">Alt</td><td class="body"></td></tr>
            <tr><td class="body">F2</td><td class="body">ToggleEditMode</td><td class="body">Cell</td><td class="body">SwapDroppedDown</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">F4</td><td class="body">EnterEditModeAndDropdown</td><td class="body">HasDropdown</td><td class="body">InEdit</td><td class="body"></td><td class="body">Alt</td></tr>
            <tr><td class="body">Up</td><td class="body">EnterEditModeAndDropdown</td><td class="body">HasDropdown</td><td class="body">InEdit</td><td class="body">Alt</td><td class="body"></td></tr>
            <tr><td class="body">Down</td><td class="body">EnterEditModeAndDropdown</td><td class="body">HasDropdown</td><td class="body">InEdit</td><td class="body">Alt</td><td class="body"></td></tr>
            <tr><td class="body">F6</td><td class="body">NextRegion</td><td class="body"></td><td class="body">InEdit</td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">F6</td><td class="body">PrevRegion</td><td class="body"></td><td class="body">InEdit</td><td class="body">Shift</td><td class="body">AltCtrl</td></tr>
            <tr><td class="body">Delete</td><td class="body">DeleteRows</td><td class="body">Row</td><td class="body">InEdit</td><td class="body"></td><td class="body">All</td></tr>
            <tr><td class="body">Right</td><td class="body">NextCellInBand</td><td class="body">Cell, InEdit, IsCheckbox</td><td class="body"></td><td class="body"></td><td class="body"></td></tr>
            <tr><td class="body">Left</td><td class="body">PrevCellInBand</td><td class="body">Cell, InEdit, IsCheckbox</td><td class="body"></td><td class="body"></td><td class="body"></td></tr>
            <tr><td class="body">Up</td><td class="body">AboveCell</td><td class="body">Cell, InEdit, IsCheckbox</td><td class="body"></td><td class="body"></td><td class="body"></td></tr>
            <tr><td class="body">Down</td><td class="body">BelowCell</td><td class="body">Cell, InEdit, IsCheckbox</td><td class="body"></td><td class="body"></td><td class="body"></td></tr>
            </tbody>
            </table>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.UpdateMode">
            <summary>
            Returns or sets a value that determines how information will be updated in the datasource.		
            </summary>
            <remarks>
            <p class="body">Use this property to specify when updates are committed back to the data source, either based on user interaction, upon row or cell change, or programmatically, when the <b>UpdateData</b> method is invoked.</p>
            <p class="body">When this property is set to OnRowChange or OnCellChange, updates are committed to the data source when the user leaves a row or cell, respectively, that has been modified. When a cell that has been modified loses focus, its <b>DataChanged</b> property is set to True and the <b>BeforeCellUpdate</b> event is generated. Similarly, when a row that has been modified loses focus, its <b>DataChanged</b> property is set to True and the <b>BeforeRowUpdate</b> event is generated.</p>
            <p class="body">When this property is set to OnUpdate, no updates are actually committed to the data source until the <b>UpdateData</b> method is invoked or until EndEdit is received from the binding manager. Note that there are circumstances where the binding manager will invoke EndEdit whenever the Position is changed, which obviates the use of the OnUpdate setting. This behavior is due to the implementation of the binding manager and is outside the control of the component.</p>
            <p class="body">If an attempt is made to update a data source that cannot be updated, the <b>Error</b> event is generated.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.SupportsPrinting">
            <summary>
            Returns true if the control supports printing
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.ControlUIElement">
            <summary>
            Associated Control UIElement object
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.ActiveCell">
            <summary>
            Returns or sets the active cell in the grid.
            </summary>
            <remarks>
            <p class="body">This property returns a Cell object that corrresponds to the active cell in the grid. You can set this property to an existing Cell object to have that cell become the active one.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.InInitializeLayout">
            <summary>
            Internal property to determine if we are in the InitializeLayout event. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.TooltipTool">
            <summary>
            Returns the tooltip tool object, allocating it the first time
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.EditControl">
            <summary>
            This property is obsoleted. It will always return null. Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Editor"/> instead. Returns a reference to the control being used while cell editing is taking place.
            </summary>
            <remarks>
            <p class="body"><b>Note:</b>This property is obsoleted. It will always return null. Use <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridColumn.Editor"/> instead.</p>
            <p class="body">If the cell is not in edit mode, this property returns Null. The control returned by this property will either be a text box or an UltraMaskedEdit control.</p>
            <p class="body"><b>Note:</b> Use UltraGridColumn.Editor property instead to access the editor being used for rendering as well editing cells in that column.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.PrintLayout">
            <summary>
            Internal property that returns the PrintLayout during printing
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.IsPrinting">
            <summary>
            Internal property that returns true during a print operation
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.DefaultSize">
            <summary>
            Returns the default size for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.RowUpdateCancelAction">
            <summary>
            Specifies the action that should be taken when BeforeRowUpdate event is cancelled. Default value is CancelUpdate.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.Win.UltraWinGrid.RowUpdateCancelAction"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGrid.SupportsEditorWithMask">
            <summary>
            This member supports the Infragistics infrastructure and is not meant to be invoked externally.
            </summary>
            <remarks>
            <p class="body">Indicates whether the control can utilize an <see cref="T:Infragistics.Win.EditorWithMask"/></p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditor">
            <summary>
            Editor for using an <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.#ctor(Infragistics.Win.EmbeddableEditorOwnerBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditor"/>
            </summary>
            <param name="defaultOwner">An instance of the default EmbeddableEditorOwnerBase-derived class from which to obtain owner-specific information</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.#ctor(Infragistics.Win.UltraWinGrid.UltraCombo)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditor"/>
            </summary>
            <param name="combo">UltraCombo control that will provide the dropdown for the editor.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.#ctor(Infragistics.Win.UltraWinGrid.UltraCombo,Infragistics.Win.EmbeddableEditorOwnerBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditor"/>
            </summary>
            <param name="combo">UltraCombo control that will provide the dropdown for the editor.</param>
            <param name="defaultOwner">An instance of the default EmbeddableEditorOwnerBase-derived class from which to obtain owner-specific information</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.Clone(Infragistics.Win.EmbeddableEditorOwnerBase)">
            <summary>
            Creates a copy of the embeddable editor with the specified default owner.
            </summary>
            <param name="defaultOwner">An instance of the default EmbeddableEditorOwnerBase-derived class from which to obtain owner-specific information</param>
            <returns>A copy of the editor</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.OnTextBoxMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Invoked when the MouseWheel event of the associated embedded 
            textbox is invoked.
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.OnAfterEnterEditMode">
            <summary>
            Invoked after the editor has entered edit mode
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.OnAfterExitEditMode">
            <summary>
            Invoked after the editor has exited edit mode
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.OnDispose">
            <summary>
            Invoked when the editor is disposed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.GetAutoConvertedDestinationValue(Infragistics.Win.ConversionDirection,System.Object,System.Type,System.Boolean@,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object)">
            <summary>
            Automatic data conversions specific to this editor.
            </summary>
            <param name="direction">Type of conversion.</param>
            <param name="sourceVal">Value to convert.</param>
            <param name="destinationType">Type of converted value</param>
            <param name="isValidConversion">True if conversion was valid.</param>
            <param name="owner">Owner.</param>
            <param name="ownerContext">OwnerContext.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.IsDestinationValueValid(Infragistics.Win.ConversionDirection,System.Object,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,System.String@)">
            <summary>
            Checks validity of converted values.
            </summary>
            <param name="direction">Type of conversion.</param>
            <param name="destinationVal">Value to check.</param>
            <param name="owner">Owner.</param>
            <param name="ownerContext">Owner context.</param>
            <param name="message">Additional information in the case of failure.</param>
            <returns>True if the destination value is valid.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.Control">
            <summary>
            Returns the associated <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.ValueList">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/> that provides the dropdown for the combo.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridComboEditor.ResetValueListOnExitEditMode">
            <summary>
            Determines whether the valuelist's selected item index should be reset to -1 when exiting edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner">
            <summary>
            Editor owner for the <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.#ctor(Infragistics.Win.UltraWinGrid.UltraCombo)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner"/>
            </summary>
            <param name="control">Associated UltraCombo</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetControl(System.Object)">
            <summary>
            Returns the owner's control. 
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The owner's control. This is used e.g. to re-parent the edit control.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetDataType(System.Object)">
            <summary>
            Returns the data type.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetPadding(System.Object,System.Drawing.Size@)">
            <summary>
            The padding to place around the value to display.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="size">(out) The padding to place around the value to display.</param>
            <returns>A boolean indicating whether a meaningful value was returned.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetValue(System.Object)">
            <summary>
            Returns the value that should be rendered.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.IsEnabled(System.Object)">
            <summary>
            Returns whether the value is enabled for editing.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>True if the value is enabled for editing.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetBorderStyle(System.Object,Infragistics.Win.UIElementBorderStyle@)">
            <summary>
            Returns the border style to be used by the embeddable editor element
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="borderStyle">The border style to be used by the embeddable editor element</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetDisplayStyle(System.Object)">
            <summary>
            Returns the display style to be applied to the embeddable editor element
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>EmbeddableElementDisplayStyle</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.IsReadOnly(System.Object)">
            <summary>
            Returns true is the value is read-only
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A boolean indicating whether the text is read only</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetImageList(System.Object)">
            <summary>
            Returns the image list to be used by the editor's ValueList, or null
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>An ImageList, or null if no ImageList exists</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetContextMenu(System.Object)">
            <summary>
            Returns the context menu to be used by the editor
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>A ContextMenu, or null if no ContextMenu exists</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.ShouldDrawFocus(System.Object)">
            <summary>
            Determines if a focus rect should be drawn.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>Returns true if a focus rect should be drawn.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.MustSelectFromList(System.Object)">
            <summary>
            Returns whether a selection can only be made from the value list.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>If true will act as a combo with a style of DropDownList.</returns>
            <remarks>The default implementation returns false.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.DrawAsActive(System.Object)">
            <summary>
            Returns whether the element should be drawn as if it is in its "active" state.
            </summary>
            <param name="ownerContext"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetEditorContext(System.Object)">
            <summary>
            Gets the editor context that was set with SetEditorContext method.
            </summary>
            <param name="ownerContext"></param>
            <returns>Editor context that was last set with SetEditorContext for the passed in ownerContext.</returns>
            <remarks>
            <p>GetEditorContext and <seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.SetEditorContext(System.Object,System.Object)"/> can be used to cache objects per owner context.</p>
            <p>Implementing owner will return the object that was last cached using SetEditorContext method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.SetEditorContext(System.Object,System.Object)">
            <summary>
            Sets the editor context for the passed in ownerContext.
            </summary>
            <param name="ownerContext"></param>
            <param name="editorContext"></param>
            <remarks>
            <p><seealso cref="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetEditorContext(System.Object)"/> and SetEditorContext can be used to cache objects per owner context.</p>
            <p>Implementing owner will return the object that was last cached using SetEditorContext method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetValueList(System.Object)">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinGrid.UltraCombo"/>
            </summary>
            <param name="ownerContext">The owner context</param>
            <returns>The associated UltraCombo</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetAutoEdit(System.Object)">
            <summary>
            Indicates whether AutoEdit should enabled.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>Indicates whether AutoEdit should enabled.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.IsKeyMapped(System.Windows.Forms.Keys,Infragistics.Win.EmbeddableUIElementBase)">
            <summary>
            Called by the editor to determine whether the specified key should be handled by the editor
            </summary>
            <param name="keyData">The key data</param>
            <param name="element">The EmbeddableUIElementBase-derived element</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetEditor(System.Object)">
            <summary>
            Returns the editor associated with this EmbeddableEditorOwnerBase-derived class
            </summary>
            <param name="ownerContext"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetSizeOfImages(System.Object,System.Drawing.Size@)">
            <summary>
            Returns the size of images to be used by the editor's ValueList
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="sizeOfImages">The size of the images</param>
            <returns>A boolean indicating whether a meaningful value was supplied</returns>
            <remarks>The default implementation returns <b>false</b>, with sizeOfImages set Size.Empty.</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.ResolveAppearance(System.Object,Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@,Infragistics.Win.EmbeddableEditorArea,System.Boolean,System.String)">
            <summary>
            Resolves the appearance for an element.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="appearance">The appearance structure to initialize.</param>
            <param name="requestedProps">The appearance properties to resolve.</param>
            <param name="area">Enumeration describing the area of the embeddable element to which the appearance will be applied</param>
            <param name="hotTracking">Boolean indicating whether the owner should apply its 'HotTrackingAppearance'</param>
            <param name="customArea">A string that denotes which appearance to resolve. Applicable only when the 'area' parameter is set to Custom.</param>
            <returns>True if the owner recognizes and supports the named appearance.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetEditorElement(System.Object)">
            <summary>
            Returns the embeddable uielement associated with a particular object or null if none is available.
            </summary>
            <param name="ownerContext">Context used to identify the object to reference</param>
            <returns>The embeddable uielement representing the specified owner context.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.OnEditorMouseDown(Infragistics.Win.EmbeddableUIElementBase,Infragistics.Win.EmbeddableMouseDownEventArgs)">
            <summary>
            The editor calls this method whenever any of its embeddable elements gets a mouse down.
            </summary>
            <param name="embeddableElem"></param>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.EnterEditModeOnClick(System.Object)">
            <summary>
            If true is returned, the editor will enter edit mode on either
            MouseDown or MouseUp, depending on the nature of the editor
            </summary>
            <param name="ownerContext">The owner context</param>
            <returns>The default implemenation returns true</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.AccessibilityNotifyClients(System.Object,System.Windows.Forms.AccessibleEvents)">
            <summary>
            Notifies the owner that an accessible event has occurred.
            </summary>
            <param name="ownerContext">Context used to identify the object to reference</param>
            <param name="eventId">Enumeration indicating the event that occurred.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetCharacterCasing(System.Object)">
            <summary>
            Determines how the text will be cased. 
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <returns>The CharacterCasing to be applied to the text</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.GetMaxLength(System.Object,System.Int32@)">
            <summary>
            Returns the maximum length for a string.
            </summary>
            <param name="ownerContext">The context that was passed into the <see cref="M:Infragistics.Win.EmbeddableEditorBase.GetEmbeddableElement(Infragistics.Win.UIElement,Infragistics.Win.EmbeddableEditorOwnerBase,System.Object,Infragistics.Win.EmbeddableUIElementBase)"/> method.</param>
            <param name="maxLength">(out) The maximum value or 0 if there is no maximum.</param>
            <returns>A boolean indicating whether a meaningful value was returned.</returns>
            <remarks>The default implementation returns 0.</remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridComboEditorOwner.DesignMode">
            <summary>
            Returns true if in design mode, false otherwise.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument">
            <summary>
            A <see cref="T:System.Drawing.Printing.PrintDocument"/> used to print the contents of an associated <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/>
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/> previously exposed only methods (e.g. <see cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.PrintPreview"/> and <see cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print"/>) for previewing and printing 
            the contents of the grid respectively. These methods utilize the intrinsic .net controls for printing and previewing. The primary purpose for the <b>UltraGridPrintDocument</b> is to 
            allow the grid to be printed and/or previewed using custom classes and controls that can deal with a <see cref="T:System.Drawing.Printing.PrintDocument"/> including the 
            <b>UltraPrintPreviewControl</b>.</p>
            <p class="note"><b>Note:</b> When the <see cref="M:System.Drawing.Printing.PrintDocument.Print"/> method is invoked, events on the associated <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.Grid"/> will be invoked just as when using the 
            <see cref="M:Infragistics.Win.UltraWinGrid.UltraGrid.Print"/> method including the <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.InitializePrint"/> and <see cref="E:Infragistics.Win.UltraWinGrid.UltraGrid.BeforePrint"/> events.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument"/>
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument"/>
            </summary>
            <param name="container">An IContainer representing the container of the UltraTabbedMdiManager</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.DeserializeProperty(System.Runtime.Serialization.SerializationEntry)">
            <summary>
            Invoked during runtime deserialization when deserializing from a stream using the <see cref="M:Infragistics.Win.Printing.UltraPrintDocument.LoadFromXml(System.IO.Stream)"/> and <see cref="M:Infragistics.Win.Printing.UltraPrintDocument.LoadFromBinary(System.IO.Stream)"/> methods.
            </summary>
            <param name="entry">Serialization entry containing the serialized property value</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.Dispose(System.Boolean)">
            <summary>
            Invoked when the component must release the resources it is using.
            </summary>
            <param name="disposing">True if managed resources should be released.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.GetObjectData(Infragistics.Shared.Serialization.ObjectStreamer)">
            <summary>
            Serializes the properties and subobjects of the print document into the specified <see cref="T:Infragistics.Shared.Serialization.ObjectStreamer"/>
            </summary>
            <param name="streamer">Object into which the properties should be serialized</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Used to invoke the <b>BeginPrint</b> event when a print operation has started.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.OnPagePrinted(Infragistics.Win.Printing.PagePrintedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Win.Printing.UltraPrintDocument.PagePrinted"/> event.
            </summary>
            <param name="e">A <see cref="T:Infragistics.Win.Printing.PagePrintedEventArgs"/> that provides data for the event.</param>
            <remarks>
            <p class="body">Raising an event invokes the event handler through a delegate.</p>
            <p class="body">The <b>OnPagePrinted</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>
            <p class="note">Notes to Inheritors:  When overriding <b>OnPagePrinted</b> in a derived class, be sure to call the base class's <b>OnPagePrinted</b> method so that registered delegates receive the event.</p>
            </remarks>
            <seealso cref="T:Infragistics.Win.Printing.PagePrintedEventArgs"/>
            <seealso cref="E:Infragistics.Win.Printing.UltraPrintDocument.PagePrinted"/>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.OnPrintEnded">
            <summary>
            Invoked when the print operation has ended.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.Reset(System.Boolean)">
            <summary>
            Invoked when the properties of the component should be reset to their default values.
            </summary>
            <param name="deserializing">True if the component is being deserialized from a stream</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.Grid">
            <summary>
            Returns or sets the associated <see cref="T:Infragistics.Win.UltraWinGrid.UltraGrid"/> whose rows will be printed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.RowProperties">
            <summary>
            Returns or sets flags indicating which row properties should be synchronized while printing.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.ColumnClipMode">
            <summary>
            Returns or sets an enumeration indicating how columns that intersect with a page are printed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.FitWidthToPages">
            <summary>
            Returns or sets a value that specifies the maximum number of sheets of paper that will be used to print a single logical page of the report.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.SupportsVariableSectionSize">
            <summary>
            The <see cref="T:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument"/> does not support the modification of the header/footer height, page border style, etc. once a print operation has begun.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridPrintDocument.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Returns the cached license for the control
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.UltraGridUIElement">
            <summary>
            The main element for an UltraGrid (occupies the
            entire client area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            override initappearance 
            </summary>
            <param name="appearance"></param>
            <param name="requestedProps"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridUIElement.PositionChildElements">
            <summary>
            Makes sure that the child elements for this element are in the
            ChildElements array and that they are positioned properly.
            This needs to be overridden if the element has any child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridUIElement.OnPreMouseDown(Infragistics.Win.MouseMessageInfo@)">
            <summary>
            Called when a mouse down message is received. Returning true will
            cause normal mouse down processing to be skipped
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridUIElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,Infragistics.Win.AlphaBlendMode)">
            <summary>
            Draws the element.
            </summary>
            <param name="graphics">Graphics object to render into</param>
            <param name="invalidRectangle">Invalidated area</param>
            <param name="doubleBuffer">True if the element should double buffer the rendering</param>
            <param name="alphaBlendMode">Determines how the alphablending should be processed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridUIElement.PerformKeyAction(System.Enum,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="actionCode"></param>
            <param name="shiftKeyDown"></param>
            <param name="ctlKeyDown"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Default background picture drawing
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.Layout">
            <summary>
            Returns the Layout object that determines the layout of the object. 
            This property is read-only at run-time.
            </summary><remarks><para>The Layout property of an object is used to access 
            the Layout object that determines the settings of various properties 
            related to the appearance and behavior of the object. The Layout object 
            provides a simple way to maintain multiple layouts for the grid and 
            apply them as needed. You can also save grid layouts to disk, the 
            registry or a storage stream and restore them later.</para><para>The 
            Layout object has properties such as Appearance and Override, so the 
            Layout object has sub-objects of these types, and their settings are 
            included as part of the layout. However, the information that is 
            actually persisted depends on how the settings of these properties were 
            assigned. If the properties were set using the Layout object's intrinsic 
            objects, the property settings will be included as part of the layout. 
            However, if a named object was assigned to the property from a 
            collection, the layout will only include the reference into the collection, 
            not the actual settings of the named object. 
            (For an overview of the difference between named and intrinsic objects, 
            please see the <see cref="P:Infragistics.Win.UltraWinGrid.UltraGridLayout.Appearance"/>property.</para>
            <para>
            For example, if the Layout object's Appearance property is used to 
            set values for the intrinsic Appearance object like this:</para><pre>
            UltraGrid1.DisplayLayout.Appearance.ForeColor = System.Drawing.Color.Blue</pre><para>
            Then the setting (in this case, ForeColor) will be included as part 
            of the layout, and will be saved, loaded and applied along with the 
            other layout data. However, suppose you apply the settings of a named 
            object to the UltraGridLayout's Appearance property in this manner:</para>
            <p class="code">UltraGrid1.Appearances.Add "New1"</p>
            <p class="code">UltraGrid1.Appearances("New1").ForeColor = System.Drawing.Color.Blue</p>
            <p class="code">UltraGrid1.Layout.Appearance = UltraGrid1.Appearances("New1")</p>
            <para>In this case, the ForeColor setting will not be persisted as 
            part of the layout. Instead, the layout will include a reference to 
            the "New1" Appearance object and use whatever setting is present in 
            that object when the layout is applied.</para><para>By default, the 
            layout includes a copy of the entire Appearances collection, so if the 
            layout is saved and restored using the default settings, the object 
            should always be present in the collection when it is referred to. 
            However, it is possible to use the Load and Save methods of the Layout object 
            in such a way that the collection will not be re-created when the layout 
            is applied. If this is the case, and the layout contains a reference to 
            a nonexistent object, the default settings for that object's properties 
            will be used.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.IsPrint">
            <summary>
            Returns true if this is the print layout (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.PrintColorMode">
            <summary>
            Indicates how images and colors are rendered when printed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.BorderStyle">
            <summary>
            Overrides the BorderStyle to return the BorderStyle from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.BorderSides">
            <summary>
            Overrides the BorderSides to return the BorderSides from the UIElement
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.Rect">
            <summary>
            Override the Rect property so we can call verifyChildElements on the set
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.Grid">
            <summary>
            The related UltraGrid control
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.KeyActionMappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.UltraGridUIElement.CurrentState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UltraGridLicenseAttribute.GetLicensedWithProducts">
            <summary>
            Return the list of products that this control can be licensed with
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.UnBoundData.OnDispose">
            <summary>
            Called when the object is disposed of
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ViewStyleBase">
            <summary>
            Abstarct bas class for all ViewStyle classes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.AddBandHeaders(Infragistics.Win.UltraWinGrid.ColScrollRegion,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Appends headers from the band into the VisibleHeaders
            collection of the ColScrollRegion
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.CanScrollDownMore(Infragistics.Win.UltraWinGrid.ScrollRowsContext@,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Returns true if the region can be scrolled down more.
            </summary>
            <param name="scrollContext"></param>
            <param name="oldTopHeaderBand"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.CanScrollDownMore(Infragistics.Win.UltraWinGrid.ScrollRowsContext@,Infragistics.Win.UltraWinGrid.UltraGridBand,System.Int32@)">
            <summary>
            Returns true if the region can be scrolled down more.
            </summary>
            <param name="scrollContext"></param>
            <param name="oldTopHeaderBand"></param>
            <param name="newTopRowCutoff"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.EndOfRegion(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@)">
            <summary>
            Returns true if the region has been filled
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.InsertRow(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow,System.Boolean)">
            <summary>
            Inserts a row element into the list and calls the virtual 
            OrientElemRowForward or OrientElemRowBackward methods to set 
            the top, tier and hasheader props of the elemrow. It also
            sets the 'has' flags on the elem rows and calls the virtual
            AddAllDescendants method to add all descendant rows
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
            <param name="insertDescendantRows"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.AddAllDescendants(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Adds all of the child rows from each of the child band's for 
            a given parent row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.AddChildRows(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Add child rows of a specific parent row in a specific band
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.AddSiblingRows(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow,Infragistics.Win.UltraWinGrid.UltraGridRow)">
            <summary>
            Adds the specified row and siblings of the specified row to the 
            specified ElemRowSinkrow. We are always adding to ElemRowSink, 
            so user may be responsible for clearing it before calling
            AddSiblingRows
            
            Child rows are added as well by the call to InsertRow.
            
            Returns: true if at least one row was added false otherwise
            </summary>
            <param name="context"></param>
            <param name="parentVisibleRow"></param>
            <param name="firstSibling"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.CalculateRowSpecialFlags(Infragistics.Win.UltraWinGrid.VisibleRow,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Calculates the special flags needed to draw the row and cells
            properly. These flags include whether the row is responsible for
            its top bnorder, et al.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.SetNextCrossBandSibling(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the next cross band sibling ptr of the last elem row
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.OrientVisibleRowForward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and has header flag when we are fetching
            forward. The default is to increment the tier for every row.
            Some view styles override this method
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.OrientVisibleRowBackward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and has header flag when we are fetching
            backward. The default is to increment the tier for every row.
            Some view styles override this method
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleBase.OnScrollDown(Infragistics.Win.UltraWinGrid.ScrollRowsContext@)">
            <summary>
            Scrolls down one row
            </summary>
            <param name="scrollContext"></param>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.ViewStyleHorizontal">
            <summary>
            View style for a multi-band display where child rows are 
            spread out horizontally
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleHorizontal.SetContextHeaderArray(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Initializes the context's band header array for tier zero elements. 
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleHorizontal.OrientVisibleRowForward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and hasheader flag while fetching forward
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleHorizontal.AlignTopsOfSameTierRows(Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Checks for parent rows on the same tier and aligns their tops
            (ignoring headers).
            </summary>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleHorizontal.OrientVisibleRowBackward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and hasheader flag while fetching
            backward 
            </summary>
            <param name="context"></param>
            <param name="visibleRow"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleVertical.OrientVisibleRowForward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and has header flag when we are fetching
            forward. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleVertical.OrientVisibleRowBackward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and has header flag when we are fetching
            backward. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleVertical.CalculateRowSpecialFlags(Infragistics.Win.UltraWinGrid.VisibleRow,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Calculates the special flags needed to draw the row and cells
            properly. These flags include whether the row is responsible for
            its top bnorder, et al.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleOutlookGroupBy.OrientVisibleRowForward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and has header flag when we are fetching
            forward. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleOutlookGroupBy.OrientVisibleRowBackward(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Sets the row's top, tier and has header flag when we are fetching
            backward. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleOutlookGroupBy.CalculateRowSpecialFlags(Infragistics.Win.UltraWinGrid.VisibleRow,Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Calculates the special flags needed to draw the row and cells
            properly. These flags include whether the row is responsible for
            its top bnorder, et al.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.ViewStyleSingle.AddChildRows(Infragistics.Win.UltraWinGrid.VisibleRowFetchRowContext@,Infragistics.Win.UltraWinGrid.VisibleRow,Infragistics.Win.UltraWinGrid.UltraGridBand)">
            <summary>
            Does nothing since we're a single-band implementation. See 
            Multiband implementations for meaty code.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleHeader">
            <summary>
               Summary description for VisibleHeader.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleHeader.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a header
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeader.Header">
            <summary>
            Returns the Header object associated with the object. This property is read-only at run-time. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">A Header object represents a column or group header that specifies information about the column or group, and can also serve as the interface for functionality such as moving, swapping or sorting the column or group. Group headers have the added functionality of serving to aggregate multiple columns under a single heading.</p> 
            <p class="body">The <b>Header</b> property provides access to the header that is associated with an object. The <b>Header</b> property provides access to the header that is associated with an object. In some instances, the type of header may be ambiguous, such as when accessing the <b>Header</b> property of a UIElement object. You can use the <b>Type</b> property of the Header object returned by the <b>Header</b> property to determine whether the header belongs to a column or a group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeader.Origin">
            <summary>
            The origin of this header in client coordinates.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeader.Extent">
            <summary>
            The extent of this header in client coordinates.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection">
            <summary>
            Collection of all VisibleHeaders within a specific
            Header scrolling region.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.#ctor(Infragistics.Win.UltraWinGrid.ColScrollRegion)">
            <summary>
            constructor
            </summary>
            <param name="colScrollRegion">col scroll region this collection is associated with</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.CacheVisibleHeaderForRecycling(Infragistics.Win.UltraWinGrid.VisibleHeader)">
            <summary>
            Pushes the VisibleHeader onto the stack of visibleHeaders that
            we cache for later re-use
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.CopyTo(Infragistics.Win.UltraWinGrid.VisibleHeader[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.IsReadOnly">
            <summary>
            returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.ColScrollRegion">
            <summary>
            The column scroll region that owns this visible Headers
            collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.Item(System.Int32)">
            <summary>
            indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.Dirty">
            <summary>
            Returns true if the visible Headers collection needs to
            be refreshed
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.VisibleHeaderCache">
            <summary>
            Stack of visibleHeaders that we cache for later re-use
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.VisibleHeaderEnumerator">
            <summary>
            Enumerator for a collection of VisibleHeaders
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.VisibleHeaderEnumerator.#ctor(Infragistics.Win.UltraWinGrid.VisibleHeadersCollection)">
            <summary>
            constructor
            </summary>
            <param name="visibleHeaders"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleHeadersCollection.VisibleHeaderEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleRow">
            <summary>
            This class reperesents an instance of a Row within
            a specific RowScrollRegion
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRow.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            contructor
            </summary>
            <param name="rowScrollRegion"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRow.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a row
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRow.IsCardArea">
            <summary>
            True if this represents a cardarea instead of a row (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRow.RowScrollRegion">
            <summary>
            The scrolling region containing this visible row (read-only).
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a RowScrollRegion object that can be used to set properties of, and invoke methods on, the rowscrollregion to which the row belongs. You can use this reference to access any of the returned rowscrollregion's properties or methods.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRow.ParentVisibleRow">
            <summary>
            The parent UltraGridRow object of the visible row (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRow.Row">
            <summary>
            The UltraGridRow object associated with the visible row (read-only).
            </summary>
            <remarks>
            <p class="body">The <b>Row</b> property of an object refers to a specific row in the grid as defined by an UltraGridRow object. You use the <b>Row</b> property to access the properties of a specified UltraGridRow object, or to return a reference to the UltraGridRow object that is associated with the current object.</p>
            <p class="body">An UltraGridRow object represents a single row in the grid that displays the data from a single record in the underlying data source. The UltraGridRow object is one mechanism used to manage the updating of data records either singly or in batches (the other is the UltraGridCell object). When the user is interacting with the grid, one UltraGridRow object is always the active row, and determines both the input focus of the grid and the position context of the data source to which the grid is bound.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRow.Origin">
            <summary>
            The origin of this ScrollRegionBase in 
            coordinates relative to the row scroll region
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRow.Top">
            <summary>
            Returns the top coordinate of the row relative to the row scroll region.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleRowsCollection">
            <summary>
            Collection of all VisibleRows within a specific
            row scrolling region.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.#ctor(Infragistics.Win.UltraWinGrid.RowScrollRegion)">
            <summary>
            consutructor that takes a rowScrollRegion as a parameter
            </summary>
            <param name="rowScrollRegion">row scroll region to associate
            this visible rows colleciton with</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.CacheVisibleRowForRecycling(Infragistics.Win.UltraWinGrid.VisibleRow)">
            <summary>
            Pushes the VisibleRow onto the stack of visiblerows that
            we cache for later re-use
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.CopyTo(Infragistics.Win.UltraWinGrid.VisibleRow[],System.Int32)">
            <summary>
            Copies the elements of the collection into the array.
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to begin copying to.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.RowScrollRegion">
            <summary>
            The row scroll region that owns this visible rows
            collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.IsReadOnly">
            <summary>
            returns whether the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.Item(System.Int32)">
            <summary>
            indexer 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.InitialCapacity">
            <summary>
            Specifies the initial capacity of the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.Dirty">
            <summary>
            Returns true if the visible rows collection needs to
            be refreshed
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.CachedVisibleRows">
            <summary>
            A queue to hold the cached rows.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.VisibleRowEnumerator">
            <summary>
            inner class implements IEnumerator interface
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.VisibleRowEnumerator.#ctor(Infragistics.Win.UltraWinGrid.VisibleRowsCollection)">
            <summary>
            constructor
            </summary>
            <param name="visibleRows"></param>
        </member>
        <member name="P:Infragistics.Win.UltraWinGrid.VisibleRowsCollection.VisibleRowEnumerator.Current">
            <summary>
            non-IEnumerator version: type-safe
            </summary>
        </member>
    </members>
</doc>
